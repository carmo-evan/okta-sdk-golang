openapi: 3.0.3
info:
  contact:
    email: devex-public@okta.com
    name: Okta Developer Team
    url: https://developer.okta.com/
  description: Allows customers to easily access the Okta API
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developer.okta.com/terms/
  title: Okta Management APIs
  version: 3.0.0
  x-logo:
    url: logo.svg
    backgroundColor: transparent
    altText: Okta Developer
externalDocs:
  description: Find more info here
  url: https://developer.okta.com/docs/api/getting_started/design_principles.html
servers:
- url: "https://{yourOktaDomain}"
  variables:
    yourOktaDomain:
      default: subdomain.okta.com
      description: "The domain of your organization. This can be a provided subdomain\
        \ of an official okta domain (okta.com, oktapreview.com, etc) or one of your\
        \ configured custom domains."
tags:
- name: AgentPools
  x-displayName: Agent Pools
- name: ApiToken
  x-displayName: API Tokens
- name: Application
  x-displayName: Applications
- name: Authenticator
  x-displayName: Authenticators
- name: AuthorizationServer
  x-displayName: Authorization Servers
- name: Behavior
  x-displayName: Behavior Rules
- name: Customization
  x-displayName: Customizations
- name: CAPTCHA
  x-displayName: CAPTCHAs
- name: Domain
  x-displayName: Domains
- name: EventHook
  x-displayName: Event Hooks
- name: Feature
  x-displayName: Features
- name: Group
  x-displayName: Groups
- name: IdentityProvider
  x-displayName: Identity Providers
- name: InlineHook
  x-displayName: Inline Hooks
- name: SystemLog
  x-displayName: System Log
- name: ProfileMapping
  x-displayName: Profile Mappings
- name: UserType
  x-displayName: User Types
- name: Schema
  x-displayName: Schemas
- name: LinkedObject
  x-displayName: Linked Objects
- name: OrgSetting
  x-displayName: Org Settings
- name: Policy
  x-displayName: Policies
- name: PrincipalRateLimit
  x-displayName: Principal Rate Limits
- name: PushProvider
  x-displayName: Push Providers
- name: Session
  x-displayName: Sessions
- name: Subscription
  x-displayName: Subscriptions
- name: Template
  x-displayName: SMS Templates
- name: ThreatInsight
  x-displayName: ThreatInsight
- name: TrustedOrigin
  x-displayName: Trusted Origins
- name: User
  x-displayName: Users
- name: UserFactor
  x-displayName: Factors
- name: NetworkZone
  x-displayName: Network Zones
- name: DeviceAssurance
  x-displayName: Device Assurance Policies
paths:
  /api/v1/agentPools:
    get:
      description: Fetches AgentPools based on request parameters for a given org
      operationId: getAgentPools
      parameters:
      - description: Maximum number of AgentPools being returned
        explode: true
        in: query
        name: limitPerPoolType
        required: false
        schema:
          default: 5
          type: integer
        style: form
      - description: Agent type to search for
        explode: true
        in: query
        name: poolType
        required: false
        schema:
          $ref: '#/components/schemas/AgentType'
        style: form
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](https://developer.okta.com/docs/reference/core-okta-api/#pagination)\
          \ for more information."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AgentPool'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.agentPools.read
      summary: List all Agent Pools
      tags:
      - AgentPools
  /api/v1/agentPools/{poolId}/updates:
    get:
      description: Gets List of Agent pool updates
      operationId: getAgentPoolsUpdates
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Scope the list only to scheduled or ad-hoc updates. If the parameter
          is not provided we will return the whole list of updates.
        explode: true
        in: query
        name: scheduled
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AgentPoolUpdate'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.agentPools.read
      summary: List all Agent Pool updates
      tags:
      - AgentPools
    post:
      description: "Creates an Agent pool update \\n For user flow 2 manual update,\
        \ starts the update immediately. \\n For user flow 3, schedules the update\
        \ based on the configured update window and delay."
      operationId: createAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPoolUpdate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.agentPools.manage
      summary: Create an Agent Pool update
      tags:
      - AgentPools
  /api/v1/agentPools/{poolId}/updates/settings:
    get:
      description: Gets the current state of the agent pool update instance settings
      operationId: getAgentPoolsUpdateSettings
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdateSetting'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.agentPools.read
      summary: Retrieve an Agent Pool update's settings
      tags:
      - AgentPools
    post:
      description: Updates Agent pool update settings
      operationId: setAgentPoolsUpdateSettings
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPoolUpdateSetting'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdateSetting'
          description: Updated
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.agentPools.manage
      summary: Update an Agent pool update settings
      tags:
      - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}:
    delete:
      description: Deletes Agent pool update
      operationId: deleteAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Deleted
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.agentPools.manage
      summary: Delete an Agent Pool update
      tags:
      - AgentPools
    get:
      description: Gets Agent pool update from updateId
      operationId: getAgentPoolsUpdateInstance
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.agentPools.read
      summary: Retrieve an Agent Pool update by id
      tags:
      - AgentPools
    post:
      description: Updates Agent pool update and return latest agent pool update
      operationId: updateAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPoolUpdate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: Updated
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.agentPools.manage
      summary: Update an Agent Pool update by id
      tags:
      - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/activate:
    post:
      description: Activates scheduled Agent pool update
      operationId: activateAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: Activated
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.agentPools.manage
      summary: Activate an Agent Pool update
      tags:
      - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/deactivate:
    post:
      description: Deactivates scheduled Agent pool update
      operationId: deactivateAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: Deactivated
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.agentPools.manage
      summary: Deactivate an Agent Pool update
      tags:
      - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/pause:
    post:
      description: Pauses running or queued Agent pool update
      operationId: pauseAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: Paused
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.agentPools.manage
      summary: Pause an Agent Pool update
      tags:
      - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/resume:
    post:
      description: Resumes running or queued Agent pool update
      operationId: resumeAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: Resumed
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.agentPools.manage
      summary: Resume an Agent Pool update
      tags:
      - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/retry:
    post:
      description: Retries Agent pool update
      operationId: retryAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: Retried
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.agentPools.manage
      summary: Retry an Agent Pool update
      tags:
      - AgentPools
  /api/v1/agentPools/{poolId}/updates/{updateId}/stop:
    post:
      description: Stops Agent pool update
      operationId: stopAgentPoolsUpdate
      parameters:
      - description: Id of the agent pool for which the settings will apply
        explode: false
        in: path
        name: poolId
        required: true
        schema:
          type: string
        style: simple
      - description: Id of the update
        explode: false
        in: path
        name: updateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
          description: Stopped
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.agentPools.manage
      summary: Stop an Agent Pool update
      tags:
      - AgentPools
  /api/v1/api-tokens:
    get:
      description: Enumerates the metadata of the active API tokens in your organization.
      operationId: listApiTokens
      parameters:
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](https://developer.okta.com/docs/reference/core-okta-api/#pagination)\
          \ for more information."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: A limit on the number of objects to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: Finds a token that matches the name or clientName.
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                List Tokens:
                  $ref: '#/components/examples/ApiTokenListMetadataResponse'
              schema:
                items:
                  $ref: '#/components/schemas/ApiToken'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apiTokens.read
      summary: List all API Token Metadata
      tags:
      - ApiToken
  /api/v1/api-tokens/current:
    delete:
      description: Revokes the API token provided in the Authorization header.
      operationId: revokeCurrentApiToken
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      summary: Revoke the Current API Token
      tags:
      - ApiToken
  /api/v1/api-tokens/{apiTokenId}:
    delete:
      description: Revoke an API token by id.
      operationId: revokeApiToken
      parameters:
      - description: id of the API Token
        explode: false
        in: path
        name: apiTokenId
        required: true
        schema:
          example: 00Tabcdefg1234567890
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apiTokens.manage
      summary: Revoke an API Token
      tags:
      - ApiToken
    get:
      description: Get the metadata for an active API token by id.
      operationId: getApiToken
      parameters:
      - description: id of the API Token
        explode: false
        in: path
        name: apiTokenId
        required: true
        schema:
          example: 00Tabcdefg1234567890
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                HCaptcha:
                  $ref: '#/components/examples/ApiTokenMetadataResponse'
              schema:
                $ref: '#/components/schemas/ApiToken'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apiTokens.read
      summary: Retrieve an API Token's Metadata
      tags:
      - ApiToken
  /api/v1/apps:
    get:
      description: Enumerates apps added to your organization with pagination. A subset
        of apps can be returned that match a supported filter expression or query.
      operationId: listApplications
      parameters:
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the pagination cursor for the next page of apps
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of results for a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      - description: "Filters apps by status, user.id, group.id or credentials.signing.kid\
          \ expression"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Traverses users link relationship and optionally embeds Application
          User resource
        explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: includeNonDeleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listApplications_200_response_inner'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.read
      summary: List all Applications
      tags:
      - Application
    post:
      description: Adds a new application to your Okta organization.
      operationId: createApplication
      parameters:
      - description: Executes activation lifecycle operation when creating the app
        explode: true
        in: query
        name: activate
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - explode: false
        in: header
        name: OktaAccessGateway-Agent
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listApplications_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listApplications_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Create an Application
      tags:
      - Application
      x-codegen-request-body-name: application
  /api/v1/apps/{appId}:
    delete:
      description: Removes an inactive application.
      operationId: deleteApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Delete an Application
      tags:
      - Application
    get:
      description: Fetches an application from your Okta organization by `id`.
      operationId: getApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listApplications_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.read
      summary: Retrieve an Application
      tags:
      - Application
    put:
      description: Updates an application in your organization.
      operationId: updateApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listApplications_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listApplications_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Replace an Application
      tags:
      - Application
      x-codegen-request-body-name: application
  /api/v1/apps/{appId}/connections/default:
    get:
      description: Get default Provisioning Connection for application
      operationId: getDefaultProvisioningConnectionForApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConnection'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.read
      summary: Retrieve the default Provisioning Connection
      tags:
      - Application
    post:
      description: Set default Provisioning Connection for application
      operationId: setDefaultProvisioningConnectionForApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: activate
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConnectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConnection'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Update the default Provisioning Connection
      tags:
      - Application
  /api/v1/apps/{appId}/connections/default/lifecycle/activate:
    post:
      description: Activates the default Provisioning Connection for an application.
      operationId: activateDefaultProvisioningConnectionForApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Activate the default Provisioning Connection
      tags:
      - Application
  /api/v1/apps/{appId}/connections/default/lifecycle/deactivate:
    post:
      description: Deactivates the default Provisioning Connection for an application.
      operationId: deactivateDefaultProvisioningConnectionForApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Deactivate the default Provisioning Connection for an Application
      tags:
      - Application
  /api/v1/apps/{appId}/credentials/csrs:
    get:
      description: Enumerates Certificate Signing Requests for an application
      operationId: listCsrsForApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Csr'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.read
      summary: List all Certificate Signing Requests
      tags:
      - Application
    post:
      description: Generates a new key pair and returns the Certificate Signing Request
        for it.
      operationId: generateCsrForApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsrMetadata'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Generate a Certificate Signing Request
      tags:
      - Application
      x-codegen-request-body-name: metadata
  /api/v1/apps/{appId}/credentials/csrs/{csrId}:
    delete:
      description: Revokes a certificate signing request and deletes the key pair
        from the application.
      operationId: revokeCsrFromApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: csrId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Revoke a Certificate Signing Request
      tags:
      - Application
    get:
      description: Fetches a certificate signing request for the app by `id`.
      operationId: getCsrForApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: csrId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.read
      summary: Retrieve a Certificate Signing Request
      tags:
      - Application
  /api/v1/apps/{appId}/credentials/csrs/{csrId}/lifecycle/publish:
    post:
      description: Updates a certificate signing request for the app with a signed
        X.509 certificate and adds it into the application key credentials
      operationId: publishCsrFromApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: csrId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-x509-ca-cert:
            schema:
              format: binary
              type: string
              x-okta-operationId: publishBinaryCerCert
          application/pkix-cert:
            schema:
              format: binary
              type: string
              x-okta-operationId: publishBinaryDerCert
          application/x-pem-file:
            schema:
              format: binary
              type: string
              x-okta-operationId: publishBinaryPemCert
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Publish a Certificate Signing Request
      tags:
      - Application
  /api/v1/apps/{appId}/credentials/keys:
    get:
      description: Enumerates key credentials for an application
      operationId: listApplicationKeys
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JsonWebKey'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.read
      summary: List all Key Credentials
      tags:
      - Application
  /api/v1/apps/{appId}/credentials/keys/generate:
    post:
      description: Generates a new X.509 certificate for an application key credential
      operationId: generateApplicationKey
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: validityYears
        required: false
        schema:
          type: integer
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Created
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Generate a Key Credential
      tags:
      - Application
  /api/v1/apps/{appId}/credentials/keys/{keyId}:
    get:
      description: Gets a specific application key credential by kid
      operationId: getApplicationKey
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.read
      summary: Retrieve a Key Credential
      tags:
      - Application
  /api/v1/apps/{appId}/credentials/keys/{keyId}/clone:
    post:
      description: Clones a X.509 certificate for an application key credential from
        a source application to target application.
      operationId: cloneApplicationKey
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      - description: Unique key of the target Application
        explode: true
        in: query
        name: targetAid
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Created
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Clone a Key Credential
      tags:
      - Application
  /api/v1/apps/{appId}/features:
    get:
      description: List Features for application
      operationId: listFeaturesForApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationFeature'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.read
      summary: List all Features
      tags:
      - Application
  /api/v1/apps/{appId}/features/{name}:
    get:
      description: Fetches a Feature object for an application.
      operationId: getFeatureForApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFeature'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.read
      summary: Retrieve a Feature
      tags:
      - Application
    put:
      description: Updates a Feature object for an application.
      operationId: updateFeatureForApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapabilitiesObject'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFeature'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Update a Feature
      tags:
      - Application
  /api/v1/apps/{appId}/grants:
    get:
      description: Lists all scope consent grants for the application
      operationId: listScopeConsentGrants
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      summary: List all Scope Consent Grants
      tags:
      - Application
    post:
      description: Grants consent for the application to request an OAuth 2.0 Okta
        scope
      operationId: grantConsentToScope
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      summary: Grant Consent to Scope
      tags:
      - Application
      x-codegen-request-body-name: oAuth2ScopeConsentGrant
  /api/v1/apps/{appId}/grants/{grantId}:
    delete:
      description: Revokes permission for the application to request the given scope
      operationId: revokeScopeConsentGrant
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: grantId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      summary: Revoke a Scope Consent Grant
      tags:
      - Application
    get:
      description: Fetches a single scope consent grant for the application
      operationId: getScopeConsentGrant
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: grantId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      summary: Retrieve a Scope Consent Grant
      tags:
      - Application
  /api/v1/apps/{appId}/groups:
    get:
      description: Enumerates group assignments for an application.
      operationId: listApplicationGroupAssignments
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the pagination cursor for the next page of assignments
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of results for a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationGroupAssignment'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.read
      summary: List all Assigned Groups
      tags:
      - Application
  /api/v1/apps/{appId}/groups/{groupId}:
    delete:
      description: Removes a group assignment from an application.
      operationId: deleteApplicationGroupAssignment
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Unassign a Group
      tags:
      - Application
    get:
      description: Fetches an application group assignment
      operationId: getApplicationGroupAssignment
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupAssignment'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.read
      summary: Retrieve an Assigned Group
      tags:
      - Application
    put:
      description: Assigns a group to an application
      operationId: createApplicationGroupAssignment
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationGroupAssignment'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupAssignment'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Assign a Group
      tags:
      - Application
      x-codegen-request-body-name: applicationGroupAssignment
  /api/v1/apps/{appId}/lifecycle/activate:
    post:
      description: Activates an inactive application.
      operationId: activateApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Activate an Application
      tags:
      - Application
  /api/v1/apps/{appId}/lifecycle/deactivate:
    post:
      description: Deactivates an active application.
      operationId: deactivateApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Deactivate an Application
      tags:
      - Application
  /api/v1/apps/{appId}/logo:
    post:
      description: "The file must be in PNG, JPG, or GIF format, and less than 1 MB\
        \ in size. For best results use landscape orientation, a transparent background,\
        \ and a minimum size of 420px by 120px to prevent upscaling."
      operationId: uploadApplicationLogo
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadApplicationLogo_request'
      responses:
        "201":
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Upload a Logo
      tags:
      - Application
  /api/v1/apps/{appId}/tokens:
    delete:
      description: Revokes all tokens for the specified application
      operationId: revokeOAuth2TokensForApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Revoke all OAuth 2.0 Tokens
      tags:
      - Application
    get:
      description: Lists all tokens for the application
      operationId: listOAuth2TokensForApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2Token'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.read
      summary: List all OAuth 2.0 Tokens
      tags:
      - Application
  /api/v1/apps/{appId}/tokens/{tokenId}:
    delete:
      description: Revokes the specified token for the specified application
      operationId: revokeOAuth2TokenForApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Revoke an OAuth 2.0 Token
      tags:
      - Application
    get:
      description: Gets a token for the specified application
      operationId: getOAuth2TokenForApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Token'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.read
      summary: Retrieve an OAuth 2.0 Token
      tags:
      - Application
  /api/v1/apps/{appId}/users:
    get:
      description: "Enumerates all assigned [application users](#application-user-model)\
        \ for an application."
      operationId: listApplicationUsers
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: query_scope
        required: false
        schema:
          type: string
        style: form
      - description: specifies the pagination cursor for the next page of assignments
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: specifies the number of results for a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppUser'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.read
      summary: List all Assigned Users
      tags:
      - Application
    post:
      description: "Assigns an user to an application with [credentials](#application-user-credentials-object)\
        \ and an app-specific [profile](#application-user-profile-object). Profile\
        \ mappings defined for the application are first applied before applying any\
        \ profile properties specified in the request."
      operationId: assignUserToApplication
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Assign a User
      tags:
      - Application
      x-codegen-request-body-name: appUser
  /api/v1/apps/{appId}/users/{userId}:
    delete:
      description: Removes an assignment for a user from an application.
      operationId: deleteApplicationUser
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sendEmail
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-okta-added-version: 1.5.0
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Unassign a User
      tags:
      - Application
    get:
      description: Fetches a specific user assignment for application by `id`.
      operationId: getApplicationUser
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.read
      summary: Retrieve an Assigned User
      tags:
      - Application
    post:
      description: Updates a user's profile for an application
      operationId: updateApplicationUser
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Update an Application Profile for Assigned User
      tags:
      - Application
      x-codegen-request-body-name: appUser
  /api/v1/authenticators:
    get:
      description: Enumerates authenticators in your organization.
      operationId: listAuthenticators
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Authenticator'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authenticators.read
      summary: List all Authenticators
      tags:
      - Authenticator
  /api/v1/authenticators/{authenticatorId}:
    get:
      description: Fetches an authenticator from your Okta organization by `authenticatorId`.
      operationId: getAuthenticator
      parameters:
      - explode: false
        in: path
        name: authenticatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authenticators.read
      summary: Retrieve an Authenticator
      tags:
      - Authenticator
    put:
      description: Updates an authenticator
      operationId: updateAuthenticator
      parameters:
      - explode: false
        in: path
        name: authenticatorId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authenticator'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
          description: OK
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authenticators.manage
      summary: Replace an Authenticator
      tags:
      - Authenticator
      x-codegen-request-body-name: authenticator
  /api/v1/authenticators/{authenticatorId}/lifecycle/activate:
    post:
      description: Activates an authenticator by `authenticatorId`.
      operationId: activateAuthenticator
      parameters:
      - explode: false
        in: path
        name: authenticatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authenticators.manage
      summary: Activate an Authenticator
      tags:
      - Authenticator
  /api/v1/authenticators/{authenticatorId}/lifecycle/deactivate:
    post:
      description: Deactivates an authenticator by `authenticatorId`.
      operationId: deactivateAuthenticator
      parameters:
      - explode: false
        in: path
        name: authenticatorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authenticator'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authenticators.manage
      summary: Deactivate an Authenticator
      tags:
      - Authenticator
  /api/v1/authorizationServers:
    get:
      description: Success
      operationId: listAuthorizationServers
      parameters:
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 200
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthorizationServer'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.read
      summary: List all Authorization Servers
      tags:
      - AuthorizationServer
    post:
      description: Success
      operationId: createAuthorizationServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServer'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Create an Authorization Server
      tags:
      - AuthorizationServer
      x-codegen-request-body-name: authorizationServer
  /api/v1/authorizationServers/{authServerId}:
    delete:
      description: Success
      operationId: deleteAuthorizationServer
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Delete an Authorization Server
      tags:
      - AuthorizationServer
    get:
      description: Success
      operationId: getAuthorizationServer
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.read
      summary: Retrieve an Authorization Server
      tags:
      - AuthorizationServer
    put:
      description: Success
      operationId: updateAuthorizationServer
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServer'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Replace an Authorization Server
      tags:
      - AuthorizationServer
      x-codegen-request-body-name: authorizationServer
  /api/v1/authorizationServers/{authServerId}/claims:
    get:
      description: Success
      operationId: listOAuth2Claims
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2Claim'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.read
      summary: List all Custom Token Claims
      tags:
      - AuthorizationServer
    post:
      description: Success
      operationId: createOAuth2Claim
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Claim'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Create a Custom Token Claim
      tags:
      - AuthorizationServer
      x-codegen-request-body-name: oAuth2Claim
  /api/v1/authorizationServers/{authServerId}/claims/{claimId}:
    delete:
      description: Success
      operationId: deleteOAuth2Claim
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: claimId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Delete a Custom Token Claim
      tags:
      - AuthorizationServer
    get:
      description: Success
      operationId: getOAuth2Claim
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: claimId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.read
      summary: Retrieve a Custom Token Claim
      tags:
      - AuthorizationServer
    put:
      description: Success
      operationId: updateOAuth2Claim
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: claimId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Claim'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Claim'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Replace a Custom Token Claim
      tags:
      - AuthorizationServer
      x-codegen-request-body-name: oAuth2Claim
  /api/v1/authorizationServers/{authServerId}/clients:
    get:
      description: Success
      operationId: listOAuth2ClientsForAuthorizationServer
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2Client'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.read
      summary: List all Clients
      tags:
      - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens:
    delete:
      description: Success
      operationId: revokeRefreshTokensForAuthorizationServerAndClient
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Revoke all Refresh Tokens for a Client
      tags:
      - AuthorizationServer
    get:
      description: Success
      operationId: listRefreshTokensForAuthorizationServerAndClient
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2RefreshToken'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.read
      summary: List all Refresh Tokens for a Client
      tags:
      - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens/{tokenId}:
    delete:
      description: Success
      operationId: revokeRefreshTokenForAuthorizationServerAndClient
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Revoke a Refresh Token for a Client
      tags:
      - AuthorizationServer
    get:
      description: Success
      operationId: getRefreshTokenForAuthorizationServerAndClient
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2RefreshToken'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.read
      summary: Retrieve a Refresh Token for a Client
      tags:
      - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/credentials/keys:
    get:
      description: Success
      operationId: listAuthorizationServerKeys
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JsonWebKey'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.read
      summary: List all Credential Keys
      tags:
      - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/credentials/lifecycle/keyRotate:
    post:
      description: Success
      operationId: rotateAuthorizationServerKeys
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JwkUse'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JsonWebKey'
                type: array
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Rotate all Credential Keys
      tags:
      - AuthorizationServer
      x-codegen-request-body-name: use
  /api/v1/authorizationServers/{authServerId}/lifecycle/activate:
    post:
      description: Success
      operationId: activateAuthorizationServer
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Activate an Authorization Server
      tags:
      - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/lifecycle/deactivate:
    post:
      description: Success
      operationId: deactivateAuthorizationServer
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Deactivate an Authorization Server
      tags:
      - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies:
    get:
      description: Success
      operationId: listAuthorizationServerPolicies
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthorizationServerPolicy'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.read
      summary: List all Policies
      tags:
      - AuthorizationServer
    post:
      description: Success
      operationId: createAuthorizationServerPolicy
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicy'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Create a Policy
      tags:
      - AuthorizationServer
      x-codegen-request-body-name: policy
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}:
    delete:
      description: Success
      operationId: deleteAuthorizationServerPolicy
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Delete a Policy
      tags:
      - AuthorizationServer
    get:
      description: Success
      operationId: getAuthorizationServerPolicy
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.read
      summary: Retrieve a Policy
      tags:
      - AuthorizationServer
    put:
      description: Success
      operationId: updateAuthorizationServerPolicy
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicy'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Replace a Policy
      tags:
      - AuthorizationServer
      x-codegen-request-body-name: policy
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/activate:
    post:
      description: Activate Authorization Server Policy
      operationId: activateAuthorizationServerPolicy
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Activate a Policy
      tags:
      - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/deactivate:
    post:
      description: Deactivate Authorization Server Policy
      operationId: deactivateAuthorizationServerPolicy
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Deactivate a Policy
      tags:
      - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules:
    get:
      description: Enumerates all policy rules for the specified Custom Authorization
        Server and Policy.
      operationId: listAuthorizationServerPolicyRules
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthorizationServerPolicyRule'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.read
      summary: List all Policy Rules
      tags:
      - AuthorizationServer
    post:
      description: Creates a policy rule for the specified Custom Authorization Server
        and Policy.
      operationId: createAuthorizationServerPolicyRule
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Create a Policy Rule
      tags:
      - AuthorizationServer
      x-codegen-request-body-name: policyRule
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}:
    delete:
      description: Deletes a Policy Rule defined in the specified Custom Authorization
        Server and Policy.
      operationId: deleteAuthorizationServerPolicyRule
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Delete a Policy Rule
      tags:
      - AuthorizationServer
    get:
      description: Returns a Policy Rule by ID that is defined in the specified Custom
        Authorization Server and Policy.
      operationId: getAuthorizationServerPolicyRule
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.read
      summary: Retrieve a Policy Rule
      tags:
      - AuthorizationServer
    put:
      description: Updates the configuration of the Policy Rule defined in the specified
        Custom Authorization Server and Policy.
      operationId: updateAuthorizationServerPolicyRule
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationServerPolicyRule'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Replace a Policy Rule
      tags:
      - AuthorizationServer
      x-codegen-request-body-name: policyRule
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/activate:
    post:
      description: Activate Authorization Server Policy Rule
      operationId: activateAuthorizationServerPolicyRule
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Activate a Policy Rule
      tags:
      - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate:
    post:
      description: Deactivate Authorization Server Policy Rule
      operationId: deactivateAuthorizationServerPolicyRule
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Deactivate a Policy Rule
      tags:
      - AuthorizationServer
  /api/v1/authorizationServers/{authServerId}/scopes:
    get:
      description: Success
      operationId: listOAuth2Scopes
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2Scope'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.read
      summary: List all Custom Token Scopes
      tags:
      - AuthorizationServer
    post:
      description: Success
      operationId: createOAuth2Scope
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Scope'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Create a Custom Token Scope
      tags:
      - AuthorizationServer
      x-codegen-request-body-name: oAuth2Scope
  /api/v1/authorizationServers/{authServerId}/scopes/{scopeId}:
    delete:
      description: Success
      operationId: deleteOAuth2Scope
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: scopeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Delete a Custom Token Scope
      tags:
      - AuthorizationServer
    get:
      description: Success
      operationId: getOAuth2Scope
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: scopeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.read
      summary: Retrieve a Custom Token Scope
      tags:
      - AuthorizationServer
    put:
      description: Success
      operationId: updateOAuth2Scope
      parameters:
      - explode: false
        in: path
        name: authServerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: scopeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Scope'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Scope'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.authorizationServers.manage
      summary: Replace a Custom Token Scope
      tags:
      - AuthorizationServer
      x-codegen-request-body-name: oAuth2Scope
  /api/v1/behaviors:
    get:
      description: Enumerates Behavior Detection Rules in your organization with pagination.
      operationId: listBehaviorDetectionRules
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listBehaviorDetectionRules_200_response_inner'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.behaviors.read
      summary: List all Behavior Detection Rules
      tags:
      - Behavior
    post:
      description: Adds a new Behavior Detection Rule to your organization.
      operationId: createBehaviorDetectionRule
      requestBody:
        content:
          application/json:
            examples:
              BehaviorRuleRequest:
                $ref: '#/components/examples/BehaviorRuleRequest'
            schema:
              $ref: '#/components/schemas/listBehaviorDetectionRules_200_response_inner'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                BehaviorRuleReSponse:
                  $ref: '#/components/examples/BehaviorRuleResponse'
              schema:
                $ref: '#/components/schemas/BehaviorRule'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.behaviors.manage
      summary: Create a Behavior Detection Rule
      tags:
      - Behavior
      x-codegen-request-body-name: rule
  /api/v1/behaviors/{behaviorId}:
    delete:
      description: Delete a Behavior Detection Rule by `behaviorId`.
      operationId: deleteBehaviorDetectionRule
      parameters:
      - description: id of the Behavior Detection Rule
        explode: false
        in: path
        name: behaviorId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.behaviors.manage
      summary: Delete a Behavior Detection Rule
      tags:
      - Behavior
    get:
      description: Fetches a Behavior Detection Rule by `behaviorId`.
      operationId: getBehaviorDetectionRule
      parameters:
      - description: id of the Behavior Detection Rule
        explode: false
        in: path
        name: behaviorId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listBehaviorDetectionRules_200_response_inner'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.behaviors.read
      summary: Retrieve a Behavior Detection Rule
      tags:
      - Behavior
    put:
      description: Update a Behavior Detection Rule by `behaviorId`.
      operationId: updateBehaviorDetectionRule
      parameters:
      - description: id of the Behavior Detection Rule
        explode: false
        in: path
        name: behaviorId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              BehaviorRuleRequest:
                $ref: '#/components/examples/BehaviorRuleRequest'
            schema:
              $ref: '#/components/schemas/listBehaviorDetectionRules_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                BehaviorRuleReSponse:
                  $ref: '#/components/examples/BehaviorRuleResponse'
              schema:
                $ref: '#/components/schemas/listBehaviorDetectionRules_200_response_inner'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.behaviors.manage
      summary: Replace a Behavior Detection Rule
      tags:
      - Behavior
      x-codegen-request-body-name: rule
  /api/v1/behaviors/{behaviorId}/lifecycle/activate:
    post:
      description: Activate Behavior Detection Rule
      operationId: activateBehaviorDetectionRule
      parameters:
      - description: id of the Behavior Detection Rule
        explode: false
        in: path
        name: behaviorId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                BehaviorRuleReSponse:
                  $ref: '#/components/examples/BehaviorRuleResponse'
              schema:
                $ref: '#/components/schemas/listBehaviorDetectionRules_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.behaviors.manage
      summary: Activate a Behavior Detection Rule
      tags:
      - Behavior
  /api/v1/behaviors/{behaviorId}/lifecycle/deactivate:
    post:
      description: Deactivate Behavior Detection Rule
      operationId: deactivateBehaviorDetectionRule
      parameters:
      - description: id of the Behavior Detection Rule
        explode: false
        in: path
        name: behaviorId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                BehaviorRuleReSponse:
                  $ref: '#/components/examples/BehaviorRuleResponse'
              schema:
                $ref: '#/components/schemas/listBehaviorDetectionRules_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.behaviors.manage
      summary: Deactivate a Behavior Detection Rule
      tags:
      - Behavior
  /api/v1/brands:
    get:
      description: List all the brands in your org.
      operationId: listBrands
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Brand'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.read
      summary: List all Brands
      tags:
      - Customization
  /api/v1/brands/{brandId}:
    get:
      description: Fetches a brand by `brandId`
      operationId: getBrand
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.read
      summary: Retrieve a Brand
      tags:
      - Customization
    put:
      description: Updates a brand by `brandId`
      operationId: updateBrand
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.manage
      summary: Replace a Brand
      tags:
      - Customization
      x-codegen-request-body-name: brand
  /api/v1/brands/{brandId}/pages/error:
    delete:
      description: Resets the error page.
      operationId: resetErrorPage
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Successfully reset the error page.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.manage
      summary: Reset the Error Page
      tags:
      - Customization
    get:
      description: Retrieves the error page.
      operationId: retrieveErrorPage
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomizablePage'
          description: Successfully retrieved the error page.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.read
      summary: Retrieve the Error Page
      tags:
      - Customization
    put:
      description: Replaces the error page.
      operationId: replaceErrorPage
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomizablePage'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomizablePage'
          description: Successfully replaced the error page.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.manage
      summary: Replace the Error Page
      tags:
      - Customization
  /api/v1/brands/{brandId}/pages/error/preview:
    post:
      description: Previews the error page.
      operationId: previewErrorPage
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomizablePage'
        required: true
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
          description: Successfully previewed the error page.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.read
      summary: Preview the Error Page
      tags:
      - Customization
  /api/v1/brands/{brandId}/pages/sign-in:
    delete:
      description: Reset the sign-in page.
      operationId: resetSignInPage
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Successfully reset the sign-in page.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.manage
      summary: Reset the Sign-in Page
      tags:
      - Customization
    get:
      description: Retrieves the sign-in page.
      operationId: retrieveSignInPage
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
          description: Successfully retrieved the sign-in page.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.read
      summary: Retrieve the Sign-in Page
      tags:
      - Customization
    put:
      description: Replaces the sign-in page.
      operationId: replaceSignInPage
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInPage'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
          description: Successfully replaced the sign-in page.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.manage
      summary: Replace the Sign-in Page
      tags:
      - Customization
  /api/v1/brands/{brandId}/pages/sign-in/preview:
    delete:
      description: Reset the sign-in page preview.
      operationId: resetSignInPagePreview
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Successfully reset the sign-in page preview.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.manage
      summary: Reset the Sign-in Page Preview
      tags:
      - Customization
    get:
      description: Retrieves the sign-in page preview.
      operationId: retrieveSignInPagePreview
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
          description: Successfully retrieved the sign-in page preview.
        "204":
          content: {}
          description: Sign-in page preview does not exist.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.read
      summary: Retrieve the Sign-in Page Preview
      tags:
      - Customization
    put:
      description: Replace the sign-in page preview.
      operationId: replaceSignInPagePreview
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInPage'
        required: true
      responses:
        "303":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
          description: Successfully replaced the sign-in page preview.
          headers:
            Location:
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.manage
      summary: Replace the Sign-in Page Preview
      tags:
      - Customization
  /api/v1/brands/{brandId}/pages/sign-in/widget-versions:
    get:
      description: List all sign-in widget versions.
      operationId: listAllSignInWidgetVersions
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  pattern: ^\d+\.\d+$
                  type: string
                type: array
          description: Successfully listed the sign-in widget versions.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.read
      summary: List all Sign-in Widget Versions
      tags:
      - Customization
  /api/v1/brands/{brandId}/pages/sign-out:
    get:
      description: Retrieves the sign-out page settings.
      operationId: retrieveSignOutPageSettings
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostedPage'
          description: Successfully retrieved the sign-out page settings.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.read
      summary: Retrieve the Sign-out Page Settings
      tags:
      - Customization
    put:
      description: Replaces the sign-out page settings.
      operationId: replaceSignOutPageSettings
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostedPage'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostedPage'
          description: Successfully replaced the sign-out page settings.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.manage
      summary: Replace the Sign-out Page Settings
      tags:
      - Customization
  /api/v1/brands/{brandId}/templates/email:
    get:
      description: Lists all email templates.
      operationId: listEmailTemplates
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](https://developer.okta.com/docs/reference/core-okta-api/#pagination)\
          \ for more information."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: A limit on the number of objects to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: Specifies additional metadata to be included in the response.
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - settings
            - customizationCount
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                List email templates response:
                  $ref: '#/components/examples/ListEmailTemplateResponse'
              schema:
                items:
                  $ref: '#/components/schemas/EmailTemplate'
                type: array
          description: Successfully returned the list of email templates.
          headers:
            Link:
              description: "The pagination header containing links to the current\
                \ and next page of results. See [Pagination](https://developer.okta.com/docs/reference/core-okta-api/#pagination)\
                \ for more information."
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.read
      summary: List all Email Templates
      tags:
      - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}:
    get:
      description: Gets the details of an email template by name.
      operationId: getEmailTemplate
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies additional metadata to be included in the response.
        explode: false
        in: query
        name: expand
        required: false
        schema:
          items:
            enum:
            - settings
            - customizationCount
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Get email template response:
                  $ref: '#/components/examples/GetEmailTemplateResponse'
              schema:
                $ref: '#/components/schemas/EmailTemplate'
          description: Successfully retrieved the email template.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.read
      summary: Retrieve an Email Template
      tags:
      - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations:
    delete:
      description: Deletes all customizations for an email template.
      operationId: deleteAllCustomizations
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Successfully deleted all customizations for the email template.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.manage
      summary: Delete all Email Customizations
      tags:
      - Customization
    get:
      description: Lists all customizations of an email template.
      operationId: listEmailCustomizations
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](https://developer.okta.com/docs/reference/core-okta-api/#pagination)\
          \ for more information."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: A limit on the number of objects to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                List Email customizations response:
                  $ref: '#/components/examples/ListEmailCustomizationResponse'
              schema:
                items:
                  $ref: '#/components/schemas/EmailCustomization'
                type: array
          description: Successfully retrieved all email customizations for the specified
            email template.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.read
      summary: List all Email Customizations
      tags:
      - Customization
    post:
      description: Creates a new email customization.
      operationId: createEmailCustomization
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Create email customization request:
                $ref: '#/components/examples/CreateUpdateEmailCustomizationRequest'
            schema:
              $ref: '#/components/schemas/EmailCustomization'
      responses:
        "201":
          content:
            application/json:
              examples:
                Create email customization response:
                  $ref: '#/components/examples/CreateUpdateEmailCustomizationResponse'
              schema:
                $ref: '#/components/schemas/EmailCustomization'
          description: Successfully created the email customization.
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                Default email customization already exists:
                  $ref: '#/components/examples/ErrorEmailCustomizationDefaultAlreadyExists'
                Email customization already exists for the specified language:
                  $ref: '#/components/examples/ErrorEmailCustomizationLanguageAlreadyExists'
              schema:
                $ref: '#/components/schemas/Error'
          description: Could not create the email customization because it conflicts
            with an existing email customization.
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.manage
      summary: Create an Email Customization
      tags:
      - Customization
      x-codegen-request-body-name: instance
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}:
    delete:
      description: Deletes an email customization by its unique identifier.
      operationId: deleteEmailCustomization
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the email customization.
        explode: false
        in: path
        name: customizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Successfully deleted the email customization.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                Cannot delete default email customization:
                  $ref: '#/components/examples/ErrorEmailCustomizationCannotDeleteDefault'
              schema:
                $ref: '#/components/schemas/Error'
          description: Could not delete the email customization deleted because it
            is the default email customization.
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.manage
      summary: Delete an Email Customization
      tags:
      - Customization
    get:
      description: Gets an email customization by its unique identifier.
      operationId: getEmailCustomization
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the email customization.
        explode: false
        in: path
        name: customizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get email customization response:
                  $ref: '#/components/examples/EmailCustomizationResponse'
              schema:
                $ref: '#/components/schemas/EmailCustomization'
          description: Successfully retrieved the email customization.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.read
      summary: Retrieve an Email Customization
      tags:
      - Customization
    put:
      description: Updates an existing email customization using the property values
        provided.
      operationId: updateEmailCustomization
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the email customization.
        explode: false
        in: path
        name: customizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Update email customization request:
                $ref: '#/components/examples/CreateUpdateEmailCustomizationRequest'
            schema:
              $ref: '#/components/schemas/EmailCustomization'
        description: Request
      responses:
        "200":
          content:
            application/json:
              examples:
                Update email customization response:
                  $ref: '#/components/examples/CreateUpdateEmailCustomizationResponse'
              schema:
                $ref: '#/components/schemas/EmailCustomization'
          description: Successfully updated the email customization.
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                Default email customization already exists:
                  $ref: '#/components/examples/ErrorEmailCustomizationDefaultAlreadyExists'
                Email customization already exists for the specified language:
                  $ref: '#/components/examples/ErrorEmailCustomizationLanguageAlreadyExists'
                Cannot set the default email customization's isDefault to false:
                  $ref: '#/components/examples/ErrorEmailCustomizationCannotClearDefault'
              schema:
                $ref: '#/components/schemas/Error'
          description: Could not update the email customization because the update
            would cause a conflict with an existing email customization.
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.manage
      summary: Replace an Email Customization
      tags:
      - Customization
      x-codegen-request-body-name: instance
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}/preview:
    get:
      description: "Generates a preview of an email customization. All variable references\
        \ (e.g., `${user.profile.firstName}`) are populated using the current user's\
        \ context."
      operationId: getCustomizationPreview
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the email customization.
        explode: false
        in: path
        name: customizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Preview email customization response:
                  $ref: '#/components/examples/PreviewEmailCustomizationResponse'
              schema:
                $ref: '#/components/schemas/EmailPreview'
          description: Successfully generated a preview of the email customization.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.read
      summary: Preview an Email Customization
      tags:
      - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/default-content:
    get:
      description: Gets an email template's default content.
      operationId: getEmailDefaultContent
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: The language to use for the email. Defaults to the current user's
          language if unspecified.
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Get email template default content response:
                  $ref: '#/components/examples/EmailTemplateDefaultContentResponse'
              schema:
                $ref: '#/components/schemas/EmailDefaultContent'
          description: Successfully retrieved the email template's default content.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.read
      summary: Retrieve an Email Template Default Content
      tags:
      - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/default-content/preview:
    get:
      description: "Generates a preview of an email template's default content. All\
        \ variable references (e.g., `${user.profile.firstName}`) are populated using\
        \ the current user's context."
      operationId: getEmailDefaultPreview
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: The language to use for the email. Defaults to the current user's
          language if unspecified.
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Preview email template default content response:
                  $ref: '#/components/examples/PreviewEmailTemplateDefaultContentResponse'
              schema:
                $ref: '#/components/schemas/EmailPreview'
          description: Successfully generated a preview of the email template's default
            content.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.read
      summary: Preview the Email Template Default Content
      tags:
      - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/settings:
    get:
      description: Gets an email template's settings.
      operationId: getEmailSettings
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get email template settings response:
                  $ref: '#/components/examples/EmailSettingsResponse'
              schema:
                $ref: '#/components/schemas/EmailSettings'
          description: Successfully retrieved the email template's settings.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.read
      summary: Retrieve the Email Template Settings
      tags:
      - Customization
    put:
      description: Updates an email template's settings.
      operationId: updateEmailSettings
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSettings'
      responses:
        "204":
          description: Successfully updated the email template's settings.
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "422":
          content:
            application/json:
              examples:
                Invalid email template recipients:
                  $ref: '#/components/examples/ErrorInvalidEmailTemplateRecipients'
              schema:
                $ref: '#/components/schemas/Error'
          description: Could not update the email template's settings due to an invalid
            setting value.
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.manage
      summary: Replace the Email Template Settings
      tags:
      - Customization
  /api/v1/brands/{brandId}/templates/email/{templateName}/test:
    post:
      description: "Sends a test email to the current user’s primary and secondary\
        \ email addresses. The email content is selected based on the following priority:\n\
        1. The email customization for the language specified in the `language` query\
        \ parameter.\n2. The email template's default customization.\n3. The email\
        \ template’s default content, translated to the current user's language."
      operationId: sendTestEmail
      parameters:
      - description: The ID of the brand.
        explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the email template.
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: The language to use for the email. Defaults to the current user's
          language if unspecified.
        explode: true
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/Language'
        style: form
      responses:
        "204":
          content: {}
          description: Successfully sent a test email.
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.read
      summary: Send a Test Email
      tags:
      - Customization
  /api/v1/brands/{brandId}/themes:
    get:
      description: List all the themes in your brand
      operationId: listBrandThemes
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ThemeResponse'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.read
      summary: List all Themes
      tags:
      - Customization
  /api/v1/brands/{brandId}/themes/{themeId}:
    get:
      description: Fetches a theme for a brand
      operationId: getBrandTheme
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponse'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.read
      summary: Retrieve a Theme
      tags:
      - Customization
    put:
      description: Updates a theme for a brand
      operationId: updateBrandTheme
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Theme'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.manage
      summary: Replace a Theme
      tags:
      - Customization
      x-codegen-request-body-name: theme
  /api/v1/brands/{brandId}/themes/{themeId}/background-image:
    delete:
      description: Deletes a Theme background image.
      operationId: deleteBrandThemeBackgroundImage
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.manage
      summary: Delete the Background Image
      tags:
      - Customization
    post:
      description: Updates the background image for your Theme
      operationId: uploadBrandThemeBackgroundImage
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadBrandThemeBackgroundImage_request'
        description: background image file
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.manage
      summary: Upload the Background Image
      tags:
      - Customization
  /api/v1/brands/{brandId}/themes/{themeId}/favicon:
    delete:
      description: Deletes a Theme favicon. The theme will use the default Okta favicon.
      operationId: deleteBrandThemeFavicon
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.manage
      summary: Delete the Favicon
      tags:
      - Customization
    post:
      description: Updates the favicon for your theme
      operationId: uploadBrandThemeFavicon
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadBrandThemeFavicon_request'
        description: favicon file
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.manage
      summary: Upload the Favicon
      tags:
      - Customization
  /api/v1/brands/{brandId}/themes/{themeId}/logo:
    delete:
      description: Deletes a Theme logo. The theme will use the default Okta logo.
      operationId: deleteBrandThemeLogo
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.manage
      summary: Delete the Logo
      tags:
      - Customization
    post:
      description: Updates the logo for your Theme
      operationId: uploadBrandThemeLogo
      parameters:
      - explode: false
        in: path
        name: brandId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadBrandThemeLogo_request'
        description: logo file
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.brands.manage
      summary: Upload the Logo
      tags:
      - Customization
  /api/v1/captchas:
    get:
      description: Enumerates CAPTCHA instances in your organization with pagination.
        A subset of CAPTCHA instances can be returned that match a supported filter
        expression or query.
      operationId: listCaptchaInstances
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CAPTCHAInstance'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.captchas.read
      summary: List all CAPTCHA instances
      tags:
      - CAPTCHA
    post:
      description: "Adds a new CAPTCHA instance to your organization. In the current\
        \ release, we only allow one CAPTCHA instance per org."
      operationId: createCaptchaInstance
      requestBody:
        content:
          application/json:
            examples:
              HCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'
              ReCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'
            schema:
              $ref: '#/components/schemas/CAPTCHAInstance'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
                Error Limit of One CAPTCHA instance per org:
                  $ref: '#/components/examples/ErrorCAPTCHALimitOfOne'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.captchas.manage
      summary: Create a CAPTCHA instance
      tags:
      - CAPTCHA
      x-codegen-request-body-name: instance
  /api/v1/captchas/{captchaId}:
    delete:
      description: "Delete a CAPTCHA instance by `captchaId`. If the CAPTCHA instance\
        \ is currently being used in the org, the delete will not be allowed."
      operationId: deleteCaptchaInstance
      parameters:
      - description: id of the CAPTCHA
        explode: false
        in: path
        name: captchaId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
                Cannot remove CAPTCHA in use:
                  $ref: '#/components/examples/ErrorCAPTCHAOrgWideSetting'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.captchas.manage
      summary: Delete a CAPTCHA Instance
      tags:
      - CAPTCHA
    get:
      description: Fetches a CAPTCHA instance by `captchaId`.
      operationId: getCaptchaInstance
      parameters:
      - description: id of the CAPTCHA
        explode: false
        in: path
        name: captchaId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.captchas.read
      summary: Retrieve a CAPTCHA Instance
      tags:
      - CAPTCHA
    post:
      description: Partially update a CAPTCHA instance by `captchaId`.
      operationId: partialUpdateCaptchaInstance
      parameters:
      - description: id of the CAPTCHA
        explode: false
        in: path
        name: captchaId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              HCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'
              ReCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'
            schema:
              $ref: '#/components/schemas/CAPTCHAInstance'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
          description: OK
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.captchas.manage
      summary: Update a CAPTCHA instance
      tags:
      - CAPTCHA
      x-codegen-request-body-name: instance
    put:
      description: Update a CAPTCHA instance by `captchaId`.
      operationId: updateCaptchaInstance
      parameters:
      - description: id of the CAPTCHA
        explode: false
        in: path
        name: captchaId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              HCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestHCaptcha'
              ReCaptcha:
                $ref: '#/components/examples/CAPTCHAInstanceRequestReCaptcha'
            schema:
              $ref: '#/components/schemas/CAPTCHAInstance'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                HCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseHCaptcha'
                ReCaptcha:
                  $ref: '#/components/examples/CAPTCHAInstanceResponseReCaptcha'
              schema:
                $ref: '#/components/schemas/CAPTCHAInstance'
          description: OK
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.captchas.manage
      summary: Replace a CAPTCHA instance
      tags:
      - CAPTCHA
      x-codegen-request-body-name: instance
  /api/v1/device-assurances:
    get:
      description: Enumerates Device Assurance Policies in your organization.
      operationId: listDeviceAssurancePolicies
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeviceAssurance'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.deviceAssurance.read
      summary: List all Device Assurance Policies
      tags:
      - DeviceAssurance
    post:
      description: Adds a new Device Assurance Policy.
      operationId: createDeviceAssurancePolicy
      requestBody:
        content:
          application/json:
            examples:
              ANDROID:
                $ref: '#/components/examples/DeviceAssuranceAndroidRequest'
              MACOS:
                $ref: '#/components/examples/DeviceAssuranceMacOSRequest'
              WINDOWS:
                $ref: '#/components/examples/DeviceAssuranceWindowsRequest'
              IOS:
                $ref: '#/components/examples/DeviceAssuranceIosRequest'
            schema:
              $ref: '#/components/schemas/DeviceAssurance'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                DeviceAssuranceResponse:
                  $ref: '#/components/examples/DeviceAssuranceResponse'
              schema:
                $ref: '#/components/schemas/DeviceAssurance'
          description: OK
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.deviceAssurance.manage
      summary: Create a Device Assurance Policy
      tags:
      - DeviceAssurance
      x-codegen-request-body-name: deviceAssurance
  /api/v1/device-assurances/{deviceAssuranceId}:
    delete:
      description: "Delete a Device Assurance Policy by `deviceAssuranceId`. If the\
        \ Device Assurance Policy is currently being used in the org Authentication\
        \ Policies, the delete will not be allowed."
      operationId: deleteDeviceAssurancePolicy
      parameters:
      - description: Id of the Device Assurance Policy
        explode: false
        in: path
        name: deviceAssuranceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                Cannot delete device assurance policy in use by authentication policies:
                  $ref: '#/components/examples/ErrorDeviceAssuranceInUse'
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.deviceAssurance.manage
      summary: Delete a Device Assurance Policy
      tags:
      - DeviceAssurance
    get:
      description: Fetches a Device Assurance Policy by `deviceAssuranceId`.
      operationId: getDeviceAssurancePolicy
      parameters:
      - description: Id of the Device Assurance Policy
        explode: false
        in: path
        name: deviceAssuranceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                DeviceAssuranceResponse:
                  $ref: '#/components/examples/DeviceAssuranceResponse'
              schema:
                $ref: '#/components/schemas/DeviceAssurance'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.deviceAssurance.read
      summary: Retrieve a Device Assurance Policy
      tags:
      - DeviceAssurance
    put:
      description: Updates a Device Assurance Policy by `deviceAssuranceId`.
      operationId: updateDeviceAssurancePolicy
      parameters:
      - description: Id of the Device Assurance Policy
        explode: false
        in: path
        name: deviceAssuranceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              DeviceAssuranceResponse:
                $ref: '#/components/examples/DeviceAssuranceResponse'
            schema:
              $ref: '#/components/schemas/DeviceAssurance'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                DeviceAssuranceResponse:
                  $ref: '#/components/examples/DeviceAssuranceResponse'
              schema:
                $ref: '#/components/schemas/DeviceAssurance'
          description: OK
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.deviceAssurance.manage
      summary: Replace a Device Assurance Policy
      tags:
      - DeviceAssurance
      x-codegen-request-body-name: deviceAssurance
  /api/v1/domains:
    get:
      description: List all verified custom Domains for the org.
      operationId: listDomains
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainListResponse'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.domains.read
      summary: List all Domains
      tags:
      - Domain
    post:
      description: Creates your domain.
      operationId: createDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.domains.manage
      summary: Create a Domain
      tags:
      - Domain
      x-codegen-request-body-name: domain
  /api/v1/domains/{domainId}:
    delete:
      description: Deletes a Domain by `id`.
      operationId: deleteDomain
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.domains.manage
      summary: Delete a Domain
      tags:
      - Domain
    get:
      description: Fetches a Domain by `id`.
      operationId: getDomain
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.domains.read
      summary: Retrieve a Domain
      tags:
      - Domain
  /api/v1/domains/{domainId}/certificate:
    put:
      description: Creates the Certificate for the Domain.
      operationId: createCertificate
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCertificate'
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.domains.manage
      summary: Replace the Certificate
      tags:
      - Domain
      x-codegen-request-body-name: certificate
  /api/v1/domains/{domainId}/verify:
    post:
      description: Verifies the Domain by `id`.
      operationId: verifyDomain
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.domains.manage
      summary: Verify a Domain
      tags:
      - Domain
  /api/v1/email-domains:
    get:
      description: List all the email domains in your org.
      operationId: listEmailDomains
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainListResponse'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.email-domains.read
      summary: List all email domains
      tags:
      - EmailDomain
    post:
      description: Creates a custom email domain.
      operationId: createEmailDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailDomain'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.email-domains.manage
      summary: Create an Email Domain
      tags:
      - EmailDomain
      x-codegen-request-body-name: emailDomain
  /api/v1/email-domains/{emailDomainId}:
    delete:
      description: Deletes an Email Domain by `emailDomainId`.
      operationId: deleteEmailDomain
      parameters:
      - explode: false
        in: path
        name: emailDomainId
        required: true
        schema:
          description: The ID of the email domain.
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.email-domains.manage
      summary: Delete an Email Domain
      tags:
      - EmailDomain
    get:
      description: Fetches an Email Domain by `emailDomainId`.
      operationId: getEmailDomain
      parameters:
      - explode: false
        in: path
        name: emailDomainId
        required: true
        schema:
          description: The ID of the email domain.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainResponse'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.email-domains.read
      summary: Retrieve a Email Domain
      tags:
      - EmailDomain
    put:
      description: Updates an email domain by `emailDomainId`
      operationId: updateEmailDomain
      parameters:
      - explode: false
        in: path
        name: emailDomainId
        required: true
        schema:
          description: The ID of the email domain.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailDomain'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainResponse'
          description: OK
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.email-domains.manage
      summary: Update an Email Domain
      tags:
      - EmailDomain
      x-codegen-request-body-name: updateEmailDomain
  /api/v1/email-domains/{emailDomainId}/brands:
    get:
      description: List all brands linked to an email domain.
      operationId: listEmailDomainBrands
      parameters:
      - explode: false
        in: path
        name: emailDomainId
        required: true
        schema:
          description: The ID of the email domain.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Brand'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.email-domains.read
      summary: List all brands linked to an email domain
      tags:
      - EmailDomain
  /api/v1/email-domains/{emailDomainId}/verify:
    post:
      description: Verifies the Email Domain by `id`.
      operationId: verifyEmailDomain
      parameters:
      - explode: false
        in: path
        name: emailDomainId
        required: true
        schema:
          description: The ID of the email domain.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainResponse'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.email-domains.manage
      summary: Verify Email Domain
      tags:
      - EmailDomain
  /api/v1/eventHooks:
    get:
      description: Success
      operationId: listEventHooks
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EventHook'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.eventHooks.read
      summary: List all Event Hooks
      tags:
      - EventHook
    post:
      description: Success
      operationId: createEventHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventHook'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.eventHooks.manage
      summary: Create an Event Hook
      tags:
      - EventHook
      x-codegen-request-body-name: eventHook
  /api/v1/eventHooks/{eventHookId}:
    delete:
      description: Success
      operationId: deleteEventHook
      parameters:
      - explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.eventHooks.manage
      summary: Delete an Event Hook
      tags:
      - EventHook
    get:
      description: Success
      operationId: getEventHook
      parameters:
      - explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.eventHooks.read
      summary: Retrieve an Event Hook
      tags:
      - EventHook
    put:
      description: Success
      operationId: updateEventHook
      parameters:
      - explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventHook'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.eventHooks.manage
      summary: Replace an Event Hook
      tags:
      - EventHook
      x-codegen-request-body-name: eventHook
  /api/v1/eventHooks/{eventHookId}/lifecycle/activate:
    post:
      description: Success
      operationId: activateEventHook
      parameters:
      - explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.eventHooks.manage
      summary: Activate an Event Hook
      tags:
      - EventHook
  /api/v1/eventHooks/{eventHookId}/lifecycle/deactivate:
    post:
      description: Success
      operationId: deactivateEventHook
      parameters:
      - explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.eventHooks.manage
      summary: Deactivate an Event Hook
      tags:
      - EventHook
  /api/v1/eventHooks/{eventHookId}/lifecycle/verify:
    post:
      description: Success
      operationId: verifyEventHook
      parameters:
      - explode: false
        in: path
        name: eventHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.eventHooks.manage
      summary: Verify an Event Hook
      tags:
      - EventHook
  /api/v1/features:
    get:
      description: Success
      operationId: listFeatures
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Feature'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.features.read
      summary: List all Features
      tags:
      - Feature
  /api/v1/features/{featureId}:
    get:
      description: Success
      operationId: getFeature
      parameters:
      - explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.features.read
      summary: Retrieve a Feature
      tags:
      - Feature
  /api/v1/features/{featureId}/dependencies:
    get:
      description: Success
      operationId: listFeatureDependencies
      parameters:
      - explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Feature'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.features.read
      summary: List all Dependencies
      tags:
      - Feature
  /api/v1/features/{featureId}/dependents:
    get:
      description: Success
      operationId: listFeatureDependents
      parameters:
      - explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Feature'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.features.read
      summary: List all Dependents
      tags:
      - Feature
  /api/v1/features/{featureId}/{lifecycle}:
    post:
      description: Success
      operationId: updateFeatureLifecycle
      parameters:
      - explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: lifecycle
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: mode
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.features.manage
      summary: Update a Feature Lifecycle
      tags:
      - Feature
  /api/v1/groups:
    get:
      description: Enumerates groups in your organization with pagination. A subset
        of groups can be returned that match a supported filter expression or query.
      operationId: listGroups
      parameters:
      - description: Searches the name property of groups for matching value
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Filter expression for groups
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the pagination cursor for the next page of groups
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of group results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10000
          format: int32
          type: integer
        style: form
      - description: "If specified, it causes additional metadata to be included in\
          \ the response."
        explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - description: "Searches for groups with a supported filtering expression for\
          \ all attributes except for _embedded, _links, and objectClass"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.read
      summary: List all Groups
      tags:
      - Group
    post:
      description: Adds a new group with `OKTA_GROUP` type to your organization.
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.manage
      summary: Create a Group
      tags:
      - Group
      x-codegen-request-body-name: group
  /api/v1/groups/rules:
    get:
      description: Lists all group rules for your organization.
      operationId: listGroupRules
      parameters:
      - description: Specifies the number of rule results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          type: integer
        style: form
      - description: Specifies the pagination cursor for the next page of rules
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the keyword to search fules for
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "If specified as `groupIdToGroupNameMap`, then show group names"
        explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
        x-okta-added-version: 1.3.0
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupRule'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.read
      summary: List all Group Rules
      tags:
      - Group
    post:
      description: Creates a group rule to dynamically add users to the specified
        group if they match the condition
      operationId: createGroupRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRule'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.manage
      summary: Create a Group Rule
      tags:
      - Group
      x-codegen-request-body-name: groupRule
  /api/v1/groups/rules/{ruleId}:
    delete:
      description: Removes a specific group rule by id from your organization
      operationId: deleteGroupRule
      parameters:
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      - description: Indicates whether to keep or remove users from groups assigned
          by this rule.
        explode: true
        in: query
        name: removeUsers
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "202":
          content: {}
          description: Accepted
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.manage
      summary: Delete a group Rule
      tags:
      - Group
    get:
      description: Fetches a specific group rule by id from your organization
      operationId: getGroupRule
      parameters:
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.read
      summary: Retrieve a Group Rule
      tags:
      - Group
    put:
      description: Updates a group rule. Only `INACTIVE` rules can be updated.
      operationId: updateGroupRule
      parameters:
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRule'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.manage
      summary: Replace a Group Rule
      tags:
      - Group
      x-codegen-request-body-name: groupRule
  /api/v1/groups/rules/{ruleId}/lifecycle/activate:
    post:
      description: Activates a specific group rule by id from your organization
      operationId: activateGroupRule
      parameters:
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.manage
      summary: Activate a Group Rule
      tags:
      - Group
  /api/v1/groups/rules/{ruleId}/lifecycle/deactivate:
    post:
      description: Deactivates a specific group rule by id from your organization
      operationId: deactivateGroupRule
      parameters:
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.manage
      summary: Deactivate a Group Rule
      tags:
      - Group
  /api/v1/groups/{groupId}:
    delete:
      description: Removes a group with `OKTA_GROUP` type from your organization.
      operationId: deleteGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.manage
      summary: Delete a Group
      tags:
      - Group
    get:
      description: Fetches a group from your organization.
      operationId: getGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.read
      summary: List all Group Rules
      tags:
      - Group
    put:
      description: Updates the profile for a group with `OKTA_GROUP` type from your
        organization.
      operationId: updateGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.manage
      summary: Replace a Group
      tags:
      - Group
      x-codegen-request-body-name: group
  /api/v1/groups/{groupId}/apps:
    get:
      description: Enumerates all applications that are assigned to a group.
      operationId: listAssignedApplicationsForGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the pagination cursor for the next page of apps
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of app results for a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listApplications_200_response_inner'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.read
      summary: List all Assigned Applications
      tags:
      - Group
  /api/v1/groups/{groupId}/owners:
    get:
      description: List all owners for a specific group.
      operationId: getGroupOwners
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - description: SCIM Filter expression for group owners. Allows to filter owners
          by type.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the pagination cursor for the next page of owners
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of owner results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupOwner'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.read
      summary: List all Owners
      tags:
      - Group
    post:
      description: Adds a group owner for a specific group.
      operationId: addGroupOwner
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupOwner'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupOwner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.manage
      summary: Add a Group Owner
      tags:
      - Group
  /api/v1/groups/{groupId}/owners/{ownerId}:
    delete:
      description: Delete a group owner from a specific group.
      operationId: deleteGroupOwner
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ownerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.manage
      summary: Delete a Group Owner
      tags:
      - Group
  /api/v1/groups/{groupId}/roles:
    get:
      description: Success
      operationId: listGroupAssignedRoles
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.read
      summary: List all Assigned Roles
      tags:
      - Group
    post:
      description: Assigns a Role to a Group
      operationId: assignRoleToGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: disableNotifications
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRoleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
        "201":
          content: {}
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.manage
      summary: Assign a Role
      tags:
      - Group
      x-codegen-request-body-name: assignRoleRequest
  /api/v1/groups/{groupId}/roles/{roleId}:
    delete:
      description: Unassigns a Role from a Group
      operationId: removeRoleFromGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.manage
      summary: Delete a Role
      tags:
      - Group
    get:
      description: Success
      operationId: getRole
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.read
      summary: Retrieve a Role
      tags:
      - Group
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps:
    get:
      description: "Lists all App targets for an `APP_ADMIN` Role assigned to a Group.\
        \ This methods return list may include full Applications or Instances. The\
        \ response for an instance will have an `ID` value, while Application will\
        \ not have an ID."
      operationId: listApplicationTargetsForApplicationAdministratorRoleForGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CatalogApplication'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.read
      summary: List all Application Targets for an Application Administrator Role
      tags:
      - Group
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}:
    delete:
      description: Success
      operationId: removeApplicationTargetFromApplicationAdministratorRoleGivenToGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.manage
      summary: Delete an Application Target from Application Administrator Role
      tags:
      - Group
    put:
      description: Success
      operationId: addApplicationTargetToAdminRoleGivenToGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.manage
      summary: Assign an Application Target to Administrator Role
      tags:
      - Group
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}:
    delete:
      description: Remove App Instance Target to App Administrator Role given to a
        Group
      operationId: removeApplicationTargetFromAdministratorRoleGivenToGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.manage
      summary: Delete an Application Instance Target to Application Administrator
        Role
      tags:
      - Group
    put:
      description: Add App Instance Target to App Administrator Role given to a Group
      operationId: addApplicationInstanceTargetToAppAdminRoleGivenToGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.manage
      summary: Assign an Application Instance Target to Application Administrator
        Role
      tags:
      - Group
  /api/v1/groups/{groupId}/roles/{roleId}/targets/groups:
    get:
      description: Enumerates group targets for a group role.
      operationId: listGroupTargetsForGroupRole
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.read
      summary: List all Group Targets for a Group Role
      tags:
      - Group
  /api/v1/groups/{groupId}/roles/{roleId}/targets/groups/{targetGroupId}:
    delete:
      description: remove group target for a group role.
      operationId: removeGroupTargetFromGroupAdministratorRoleGivenToGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: targetGroupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - OAuth_2.0:
        - okta.roles.manage
      summary: Delete a Group Target for Group Role
      tags:
      - Group
    put:
      description: Enumerates group targets for a group role.
      operationId: addGroupTargetToGroupAdministratorRoleForGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: targetGroupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - OAuth_2.0:
        - okta.roles.manage
      summary: Assign a Group Target for Group Role
      tags:
      - Group
  /api/v1/groups/{groupId}/users:
    get:
      description: Enumerates all users that are a member of a group.
      operationId: listGroupUsers
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the pagination cursor for the next page of users
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of user results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.read
      summary: List all Member Users
      tags:
      - Group
  /api/v1/groups/{groupId}/users/{userId}:
    delete:
      description: Removes a user from a group with 'OKTA_GROUP' type.
      operationId: removeUserFromGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.manage
      summary: Unassign a User
      tags:
      - Group
    put:
      description: Adds a user to a group with 'OKTA_GROUP' type.
      operationId: addUserToGroup
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.groups.manage
      summary: Assign a User
      tags:
      - Group
  /api/v1/idps:
    get:
      description: Enumerates IdPs in your organization with pagination. A subset
        of IdPs can be returned that match a supported filter expression or query.
      operationId: listIdentityProviders
      parameters:
      - description: Searches the name property of IdPs for matching value
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the pagination cursor for the next page of IdPs
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of IdP results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      - description: Filters IdPs by type
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProvider'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.read
      summary: List all Identity Providers
      tags:
      - IdentityProvider
    post:
      description: Adds a new IdP to your organization.
      operationId: createIdentityProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProvider'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.manage
      summary: Create an Identity Provider
      tags:
      - IdentityProvider
      x-codegen-request-body-name: identityProvider
  /api/v1/idps/credentials/keys:
    get:
      description: Enumerates IdP key credentials.
      operationId: listIdentityProviderKeys
      parameters:
      - description: Specifies the pagination cursor for the next page of keys
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of key results in a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JsonWebKey'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.read
      summary: List all Credential Keys
      tags:
      - IdentityProvider
    post:
      description: Adds a new X.509 certificate credential to the IdP key store.
      operationId: createIdentityProviderKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonWebKey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.manage
      summary: Create an X.509 Certificate Public Key
      tags:
      - IdentityProvider
      x-codegen-request-body-name: jsonWebKey
  /api/v1/idps/credentials/keys/{keyId}:
    delete:
      description: Deletes a specific IdP Key Credential by `kid` if it is not currently
        being used by an Active or Inactive IdP.
      operationId: deleteIdentityProviderKey
      parameters:
      - explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.manage
      summary: Delete a Signing Credential Key
      tags:
      - IdentityProvider
    get:
      description: Gets a specific IdP Key Credential by `kid`
      operationId: getIdentityProviderKey
      parameters:
      - explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.read
      summary: Retrieve an Credential Key
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}:
    delete:
      description: Removes an IdP from your organization.
      operationId: deleteIdentityProvider
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.manage
      summary: Delete an Identity Provider
      tags:
      - IdentityProvider
    get:
      description: Fetches an IdP by `id`.
      operationId: getIdentityProvider
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.read
      summary: Retrieve an Identity Provider
      tags:
      - IdentityProvider
    put:
      description: Updates the configuration for an IdP.
      operationId: updateIdentityProvider
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProvider'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.manage
      summary: Replace an Identity Provider
      tags:
      - IdentityProvider
      x-codegen-request-body-name: identityProvider
  /api/v1/idps/{idpId}/credentials/csrs:
    get:
      description: Enumerates Certificate Signing Requests for an IdP
      operationId: listCsrsForIdentityProvider
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Csr'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.read
      summary: List all Certificate Signing Requests
      tags:
      - IdentityProvider
    post:
      description: Generates a new key pair and returns a Certificate Signing Request
        for it.
      operationId: generateCsrForIdentityProvider
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsrMetadata'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.manage
      summary: Generate a Certificate Signing Request
      tags:
      - IdentityProvider
      x-codegen-request-body-name: metadata
  /api/v1/idps/{idpId}/credentials/csrs/{csrId}:
    delete:
      description: Revoke a Certificate Signing Request and delete the key pair from
        the IdP
      operationId: revokeCsrForIdentityProvider
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: csrId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.manage
      summary: Revoke a Certificate Signing Request
      tags:
      - IdentityProvider
    get:
      description: Gets a specific Certificate Signing Request model by id
      operationId: getCsrForIdentityProvider
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: csrId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.read
      summary: Retrieve a Certificate Signing Request
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}/credentials/csrs/{csrId}/lifecycle/publish:
    post:
      description: Update the Certificate Signing Request with a signed X.509 certificate
        and add it into the signing key credentials for the IdP.
      operationId: publishCsrForIdentityProvider
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: csrId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-x509-ca-cert:
            schema:
              format: binary
              type: string
              x-okta-operationId: publishBinaryCerCertForIdentityProvider
          application/pkix-cert:
            schema:
              format: binary
              type: string
              x-okta-operationId: publishBinaryDerCertForIdentityProvider
          application/x-pem-file:
            schema:
              format: binary
              type: string
              x-okta-operationId: publishBinaryPemCertForIdentityProvider
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.manage
      summary: Publish a Certificate Signing Request
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}/credentials/keys:
    get:
      description: Enumerates signing key credentials for an IdP
      operationId: listIdentityProviderSigningKeys
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JsonWebKey'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.read
      summary: List all Signing Credential Keys
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}/credentials/keys/generate:
    post:
      description: Generates a new X.509 certificate for an IdP signing key credential
        to be used for signing assertions sent to the IdP
      operationId: generateIdentityProviderSigningKey
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - description: expiry of the IdP Key Credential
        explode: true
        in: query
        name: validityYears
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.manage
      summary: Generate a new Signing Credential Key
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}/credentials/keys/{keyId}:
    get:
      description: Gets a specific IdP Key Credential by `kid`
      operationId: getIdentityProviderSigningKey
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.read
      summary: Retrieve a Signing Credential Key
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}/credentials/keys/{keyId}/clone:
    post:
      description: Clones a X.509 certificate for an IdP signing key credential from
        a source IdP to target IdP
      operationId: cloneIdentityProviderKey
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: targetIdpId
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Created
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.manage
      summary: Clone a Signing Credential Key
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}/lifecycle/activate:
    post:
      description: Activates an inactive IdP.
      operationId: activateIdentityProvider
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.manage
      summary: Activate an Identity Provider
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}/lifecycle/deactivate:
    post:
      description: Deactivates an active IdP.
      operationId: deactivateIdentityProvider
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.manage
      summary: Deactivate an Identity Provider
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}/users:
    get:
      description: Find all the users linked to an identity provider
      operationId: listIdentityProviderApplicationUsers
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProviderApplicationUser'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.read
      summary: List all Users
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}/users/{userId}:
    delete:
      description: Removes the link between the Okta user and the IdP user.
      operationId: unlinkUserFromIdentityProvider
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.manage
      summary: Unlink a User from IdP
      tags:
      - IdentityProvider
    get:
      description: Fetches a linked IdP user by ID
      operationId: getIdentityProviderApplicationUser
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderApplicationUser'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.read
      summary: Retrieve a User
      tags:
      - IdentityProvider
    post:
      description: Links an Okta user to an existing Social Identity Provider. This
        does not support the SAML2 Identity Provider Type
      operationId: linkUserToIdentityProvider
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdentityProviderLinkRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderApplicationUser'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Link a User to a Social IdP
      tags:
      - IdentityProvider
      x-codegen-request-body-name: userIdentityProviderLinkRequest
  /api/v1/idps/{idpId}/users/{userId}/credentials/tokens:
    get:
      description: Fetches the tokens minted by the Social Authentication Provider
        when the user authenticates with Okta via Social Auth.
      operationId: listSocialAuthTokens
      parameters:
      - explode: false
        in: path
        name: idpId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SocialAuthToken'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.idps.read
      summary: List all Tokens from a OIDC Identity Provider
      tags:
      - IdentityProvider
  /api/v1/inlineHooks:
    get:
      description: Success
      operationId: listInlineHooks
      parameters:
      - explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InlineHook'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.inlineHooks.read
      summary: List all Inline Hooks
      tags:
      - InlineHook
    post:
      description: Success
      operationId: createInlineHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHook'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.inlineHooks.manage
      summary: Create an Inline Hook
      tags:
      - InlineHook
      x-codegen-request-body-name: inlineHook
  /api/v1/inlineHooks/{inlineHookId}:
    delete:
      description: "Deletes the Inline Hook matching the provided id. Once deleted,\
        \ the Inline Hook is unrecoverable. As a safety precaution, only Inline Hooks\
        \ with a status of INACTIVE are eligible for deletion."
      operationId: deleteInlineHook
      parameters:
      - explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.inlineHooks.manage
      summary: Delete an Inline Hook
      tags:
      - InlineHook
    get:
      description: Gets an inline hook by ID
      operationId: getInlineHook
      parameters:
      - explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.inlineHooks.read
      summary: Retrieve an Inline Hook
      tags:
      - InlineHook
    put:
      description: Updates an inline hook by ID
      operationId: updateInlineHook
      parameters:
      - explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHook'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.inlineHooks.manage
      summary: Replace an Inline Hook
      tags:
      - InlineHook
      x-codegen-request-body-name: inlineHook
  /api/v1/inlineHooks/{inlineHookId}/execute:
    post:
      description: Executes the Inline Hook matching the provided inlineHookId using
        the request body as the input. This will send the provided data through the
        Channel and return a response if it matches the correct data contract. This
        execution endpoint should only be used for testing purposes.
      operationId: executeInlineHook
      parameters:
      - explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHookPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHookResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.inlineHooks.manage
      summary: Execute an Inline Hook
      tags:
      - InlineHook
      x-codegen-request-body-name: payloadData
  /api/v1/inlineHooks/{inlineHookId}/lifecycle/activate:
    post:
      description: Activates the Inline Hook matching the provided id
      operationId: activateInlineHook
      parameters:
      - explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
          description: Success
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.inlineHooks.manage
      summary: Activate an Inline Hook
      tags:
      - InlineHook
  /api/v1/inlineHooks/{inlineHookId}/lifecycle/deactivate:
    post:
      description: Deactivates the Inline Hook matching the provided id
      operationId: deactivateInlineHook
      parameters:
      - explode: false
        in: path
        name: inlineHookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
          description: Success
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.inlineHooks.manage
      summary: Deactivate an Inline Hook
      tags:
      - InlineHook
  /api/v1/logs:
    get:
      description: The Okta System Log API provides read access to your organization’s
        system log. This API provides more functionality than the Events API
      operationId: getLogs
      parameters:
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ASCENDING
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LogEvent'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.logs.read
      summary: List all System Log Events
      tags:
      - SystemLog
  /api/v1/mappings:
    get:
      description: Enumerates Profile Mappings in your organization with pagination.
      operationId: listProfileMappings
      parameters:
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: sourceId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: targetId
        required: false
        schema:
          default: ""
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProfileMapping'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.profileMappings.read
      summary: List all Profile Mappings
      tags:
      - ProfileMapping
  /api/v1/mappings/{mappingId}:
    get:
      description: Fetches a single Profile Mapping referenced by its ID.
      operationId: getProfileMapping
      parameters:
      - explode: false
        in: path
        name: mappingId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileMapping'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.profileMappings.read
      summary: Retrieve a Profile Mapping
      tags:
      - ProfileMapping
    post:
      description: "Updates an existing Profile Mapping by adding, updating, or removing\
        \ one or many Property Mappings."
      operationId: updateProfileMapping
      parameters:
      - explode: false
        in: path
        name: mappingId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileMapping'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileMapping'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.profileMappings.manage
      summary: Update a Profile Mapping
      tags:
      - ProfileMapping
      x-codegen-request-body-name: profileMapping
  /api/v1/meta/layouts/apps/{appName}:
    get:
      description: Takes an Application name as an input parameter and retrieves the
        App Instance page Layout for that Application.
      operationId: getApplicationLayout
      parameters:
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationLayout'
          description: successful operation
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.schemas.read
      summary: Retrieve the UI Layout for an Application
      tags:
      - Schema
  /api/v1/meta/schemas/apps/{appInstanceId}/default:
    get:
      description: Fetches the Schema for an App User
      operationId: getApplicationUserSchema
      parameters:
      - explode: false
        in: path
        name: appInstanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
          description: successful operation
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.schemas.read
      summary: Retrieve the default Application User Schema for an Application
      tags:
      - Schema
    post:
      description: Partial updates on the User Profile properties of the Application
        User Schema.
      operationId: updateApplicationUserProfile
      parameters:
      - explode: false
        in: path
        name: appInstanceId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSchema'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
          description: successful operation
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.schemas.manage
      summary: Update the default Application User Schema for an Application
      tags:
      - Schema
      x-codegen-request-body-name: body
  /api/v1/meta/schemas/group/default:
    get:
      description: Fetches the group schema
      operationId: getGroupSchema
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSchema'
          description: successful operation
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.schemas.read
      summary: Retrieve the default Group Schema
      tags:
      - Schema
    post:
      description: "Updates, adds or removes one or more custom Group Profile properties\
        \ in the schema"
      operationId: updateGroupSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupSchema'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSchema'
          description: successful operation
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.schemas.manage
      summary: Update the default Group Schema
      tags:
      - Schema
  /api/v1/meta/schemas/user/linkedObjects:
    get:
      description: Success
      operationId: listLinkedObjectDefinitions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LinkedObject'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.linkedObjects.read
      summary: List all Linked Object Definitions
      tags:
      - LinkedObject
    post:
      description: Success
      operationId: addLinkedObjectDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedObject'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedObject'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.linkedObjects.manage
      summary: Create a Linked Object Definition
      tags:
      - LinkedObject
      x-codegen-request-body-name: linkedObject
  /api/v1/meta/schemas/user/linkedObjects/{linkedObjectName}:
    delete:
      description: Success
      operationId: deleteLinkedObjectDefinition
      parameters:
      - explode: false
        in: path
        name: linkedObjectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.linkedObjects.manage
      summary: Delete a Linked Object Definition
      tags:
      - LinkedObject
    get:
      description: Success
      operationId: getLinkedObjectDefinition
      parameters:
      - explode: false
        in: path
        name: linkedObjectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedObject'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.linkedObjects.read
      summary: Retrieve a Linked Object Definition
      tags:
      - LinkedObject
  /api/v1/meta/schemas/user/{schemaId}:
    get:
      description: Fetches the schema for a Schema Id.
      operationId: getUserSchema
      parameters:
      - explode: false
        in: path
        name: schemaId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.schemas.read
      summary: Retrieve a User Schema
      tags:
      - Schema
    post:
      description: Partial updates on the User Profile properties of the user schema.
      operationId: updateUserProfile
      parameters:
      - explode: false
        in: path
        name: schemaId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSchema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.schemas.manage
      summary: Update a User Schema
      tags:
      - Schema
      x-codegen-request-body-name: userSchema
  /api/v1/meta/types/user:
    get:
      description: Fetches all User Types in your org
      operationId: listUserTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserType'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.userTypes.read
      summary: List all User Types
      tags:
      - UserType
    post:
      description: "Creates a new User Type. A default User Type is automatically\
        \ created along with your org, and you may add another 9 User Types for a\
        \ maximum of 10."
      operationId: createUserType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserType'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.userTypes.manage
      summary: Create a User Type
      tags:
      - UserType
      x-codegen-request-body-name: userType
  /api/v1/meta/types/user/{typeId}:
    delete:
      description: "Deletes a User Type permanently. This operation is not permitted\
        \ for the default type, nor for any User Type that has existing users"
      operationId: deleteUserType
      parameters:
      - explode: false
        in: path
        name: typeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.userTypes.manage
      summary: Delete a User Type
      tags:
      - UserType
    get:
      description: Fetches a User Type by ID. The special identifier `default` may
        be used to fetch the default User Type.
      operationId: getUserType
      parameters:
      - explode: false
        in: path
        name: typeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.userTypes.read
      summary: Retrieve a User Type
      tags:
      - UserType
    post:
      description: Updates an existing User Type
      operationId: updateUserType
      parameters:
      - explode: false
        in: path
        name: typeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserType'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.userTypes.manage
      summary: Update a User Type
      tags:
      - UserType
      x-codegen-request-body-name: userType
    put:
      description: Replace an existing User Type
      operationId: replaceUserType
      parameters:
      - explode: false
        in: path
        name: typeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserType'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.userTypes.manage
      summary: Replace a User Type
      tags:
      - UserType
      x-codegen-request-body-name: userType
  /api/v1/org:
    get:
      description: Get settings of your organization.
      operationId: getOrgSettings
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.orgs.read
      summary: Retrieve the Org Settings
      tags:
      - OrgSetting
    post:
      description: Partial update settings of your organization.
      operationId: partialUpdateOrgSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgSetting'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.orgs.manage
      summary: Update the Org Settings
      tags:
      - OrgSetting
    put:
      description: Update settings of your organization.
      operationId: updateOrgSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgSetting'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSetting'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.orgs.manage
      summary: Replace the Org Settings
      tags:
      - OrgSetting
      x-codegen-request-body-name: orgSetting
  /api/v1/org/contacts:
    get:
      description: Gets Contact Types of your organization.
      operationId: getOrgContactTypes
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrgContactTypeObj'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.orgs.read
      summary: Retrieve the Org Contact Types
      tags:
      - OrgSetting
  /api/v1/org/contacts/{contactType}:
    get:
      description: Retrieves the URL of the User associated with the specified Contact
        Type.
      operationId: getOrgContactUser
      parameters:
      - explode: false
        in: path
        name: contactType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgContactUser'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.orgs.read
      summary: Retrieve the User of the Contact Type
      tags:
      - OrgSetting
    put:
      description: Updates the User associated with the specified Contact Type.
      operationId: updateOrgContactUser
      parameters:
      - explode: false
        in: path
        name: contactType
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgContactUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgContactUser'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.orgs.manage
      summary: Replace the User of the Contact Type
      tags:
      - OrgSetting
      x-codegen-request-body-name: orgContactUser
  /api/v1/org/email/bounces/remove-list:
    post:
      description: A list of email addresses to be removed from the set of email addresses
        that are bounced.
      operationId: bulkRemoveEmailAddressBounces
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  emailAddresses:
                  - name@company.com
                  - unknown.email@okta.com
                  - name@okta@com
            schema:
              $ref: '#/components/schemas/BouncesRemoveListObj'
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    errors:
                    - emailAddress: unknown.email@okta.com
                      reason: This email address does not belong to any user in your
                        organization.
                    - emailAddress: name@okta@com
                      reason: Invalid email address. The provided email address failed
                        validation against RFC 3696.
              schema:
                $ref: '#/components/schemas/BouncesRemoveListResult'
          description: Removes the provided list of emails from the set of email addresses
            that are bounced so that the provider resumes sending emails to those
            addresses.
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.orgs.manage
      summary: Remove Emails from Email Provider Bounce List
      tags:
      - OrgSetting
  /api/v1/org/logo:
    post:
      description: Updates the logo for your organization.
      operationId: updateOrgLogo
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadBrandThemeLogo_request'
        description: logo file
      responses:
        "201":
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.apps.manage
      summary: Upload the Org Logo
      tags:
      - OrgSetting
  /api/v1/org/preferences:
    get:
      description: Gets preferences of your organization.
      operationId: getOrgPreferences
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.orgs.read
      summary: Retrieve the Org Preferences
      tags:
      - OrgSetting
  /api/v1/org/preferences/hideEndUserFooter:
    post:
      description: Hide the Okta UI footer for all end users of your organization.
      operationId: hideOktaUIFooter
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.orgs.manage
      summary: Update the Preference to Hide the Okta Dashboard Footer
      tags:
      - OrgSetting
  /api/v1/org/preferences/showEndUserFooter:
    post:
      description: Makes the Okta UI footer visible for all end users of your organization.
      operationId: showOktaUIFooter
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgPreferences'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.orgs.manage
      summary: Update the Preference to Show the Okta Dashboard Footer
      tags:
      - OrgSetting
  /api/v1/org/privacy/oktaCommunication:
    get:
      description: Gets Okta Communication Settings of your organization.
      operationId: getOktaCommunicationSettings
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.orgs.read
      summary: Retreive the Okta Communication Settings
      tags:
      - OrgSetting
  /api/v1/org/privacy/oktaCommunication/optIn:
    post:
      description: Opts in all users of this org to Okta Communication emails.
      operationId: optInUsersToOktaCommunicationEmails
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.orgs.manage
      summary: Opt in all Users to Okta Communication emails
      tags:
      - OrgSetting
  /api/v1/org/privacy/oktaCommunication/optOut:
    post:
      description: Opts out all users of this org from Okta Communication emails.
      operationId: optOutUsersFromOktaCommunicationEmails
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaCommunicationSetting'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.orgs.manage
      summary: Opt out all Users from Okta Communication emails
      tags:
      - OrgSetting
  /api/v1/org/privacy/oktaSupport:
    get:
      description: Gets Okta Support Settings of your organization.
      operationId: getOrgOktaSupportSettings
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.orgs.read
      summary: Retrieve the Okta Support Settings
      tags:
      - OrgSetting
  /api/v1/org/privacy/oktaSupport/extend:
    post:
      description: Extends the length of time that Okta Support can access your org
        by 24 hours. This means that 24 hours are added to the remaining access time.
      operationId: extendOktaSupport
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.orgs.manage
      summary: Extend Okta Support Access
      tags:
      - OrgSetting
  /api/v1/org/privacy/oktaSupport/grant:
    post:
      description: Enables you to temporarily allow Okta Support to access your org
        as an administrator for eight hours.
      operationId: grantOktaSupport
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.orgs.manage
      summary: Grant Okta Support Access to your Org
      tags:
      - OrgSetting
  /api/v1/org/privacy/oktaSupport/revoke:
    post:
      description: Revokes Okta Support access to your organization.
      operationId: revokeOktaSupport
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.orgs.manage
      summary: Revoke Okta Support Access
      tags:
      - OrgSetting
  /api/v1/policies:
    get:
      description: Gets all policies with the specified type.
      operationId: listPolicies
      parameters:
      - explode: true
        in: query
        name: type
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          default: ""
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listPolicies_200_response_inner'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.policies.read
      summary: List all Policies
      tags:
      - Policy
    post:
      description: Creates a policy.
      operationId: createPolicy
      parameters:
      - explode: true
        in: query
        name: activate
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listPolicies_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPolicies_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.policies.manage
      summary: Create a Policy
      tags:
      - Policy
      x-codegen-request-body-name: policy
  /api/v1/policies/{policyId}:
    delete:
      description: Removes a policy.
      operationId: deletePolicy
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.policies.manage
      summary: Delete a Policy
      tags:
      - Policy
    get:
      description: Gets a policy.
      operationId: getPolicy
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          default: ""
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPolicies_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.policies.read
      summary: Retrieve a Policy
      tags:
      - Policy
    put:
      description: Updates a policy.
      operationId: updatePolicy
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listPolicies_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPolicies_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.policies.manage
      summary: Replace a Policy
      tags:
      - Policy
      x-codegen-request-body-name: policy
  /api/v1/policies/{policyId}/clone:
    post:
      description: Clones an existing policy.
      operationId: clonePolicy
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPolicies_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.policies.manage
      summary: Clone an existing policy
      tags:
      - Policy
  /api/v1/policies/{policyId}/lifecycle/activate:
    post:
      description: Activates a policy.
      operationId: activatePolicy
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.policies.manage
      summary: Activate a Policy
      tags:
      - Policy
  /api/v1/policies/{policyId}/lifecycle/deactivate:
    post:
      description: Deactivates a policy.
      operationId: deactivatePolicy
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.policies.manage
      summary: Deactivate a Policy
      tags:
      - Policy
  /api/v1/policies/{policyId}/rules:
    get:
      description: Enumerates all policy rules.
      operationId: listPolicyRules
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listPolicyRules_200_response_inner'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.policies.read
      summary: List all Policy Rules
      tags:
      - Policy
    post:
      description: Creates a policy rule.
      operationId: createPolicyRule
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listPolicyRules_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPolicyRules_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.policies.manage
      summary: Create a Policy Rule
      tags:
      - Policy
      x-codegen-request-body-name: policyRule
  /api/v1/policies/{policyId}/rules/{ruleId}:
    delete:
      description: Removes a policy rule.
      operationId: deletePolicyRule
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.policies.manage
      summary: Delete a Policy Rule
      tags:
      - Policy
    get:
      description: Gets a policy rule.
      operationId: getPolicyRule
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPolicyRules_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.policies.read
      summary: Retrieve a Policy Rule
      tags:
      - Policy
    put:
      description: Updates a policy rule.
      operationId: updatePolicyRule
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listPolicyRules_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPolicyRules_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.policies.manage
      summary: Replace a Policy Rule
      tags:
      - Policy
      x-codegen-request-body-name: policyRule
  /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/activate:
    post:
      description: Activates a policy rule.
      operationId: activatePolicyRule
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.policies.manage
      summary: Activate a Policy Rule
      tags:
      - Policy
  /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate:
    post:
      description: Deactivates a policy rule.
      operationId: deactivatePolicyRule
      parameters:
      - explode: false
        in: path
        name: policyId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.policies.manage
      summary: Deactivate a Policy Rule
      tags:
      - Policy
  /api/v1/principal-rate-limits:
    get:
      description: Lists all Principal Rate Limit entities considering the provided
        parameters.
      operationId: listPrincipalRateLimitEntities
      parameters:
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          maximum: 50
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PrincipalRateLimitEntity'
                type: array
          description: OK
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.principalRateLimits.read
      summary: List all Principal Rate Limits
      tags:
      - PrincipalRateLimit
    post:
      description: "Adds a new Principal Rate Limit entity to your organization. In\
        \ the current release, we only allow one Principal Rate Limit entity per org\
        \ and principal."
      operationId: createPrincipalRateLimitEntity
      requestBody:
        content:
          application/json:
            examples:
              SSWSToken:
                $ref: '#/components/examples/PrincipalRateLimitEntityRequestSSWSToken'
              EmptyPercentages:
                $ref: '#/components/examples/PrincipalRateLimitEntityRequestEmptyPercentages'
            schema:
              $ref: '#/components/schemas/PrincipalRateLimitEntity'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                SSWSToken:
                  $ref: '#/components/examples/PrincipalRateLimitEntityResponseSSWSToken'
              schema:
                $ref: '#/components/schemas/PrincipalRateLimitEntity'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.principalRateLimits.manage
      summary: Create a Principal Rate Limit
      tags:
      - PrincipalRateLimit
      x-codegen-request-body-name: entity
  /api/v1/principal-rate-limits/{principalRateLimitId}:
    get:
      description: Fetches a Principal Rate Limit entity by `principalRateLimitId`.
      operationId: getPrincipalRateLimitEntity
      parameters:
      - description: id of the Principal Rate Limit
        explode: false
        in: path
        name: principalRateLimitId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                SSWSToken:
                  $ref: '#/components/examples/PrincipalRateLimitEntityResponseSSWSToken'
              schema:
                $ref: '#/components/schemas/PrincipalRateLimitEntity'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.principalRateLimits.read
      summary: Retrieve a Principal Rate Limit
      tags:
      - PrincipalRateLimit
    put:
      description: Update a  Principal Rate Limit entity by `principalRateLimitId`.
      operationId: updatePrincipalRateLimitEntity
      parameters:
      - description: id of the Principal Rate Limit
        explode: false
        in: path
        name: principalRateLimitId
        required: true
        schema:
          example: abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              SSWSToken:
                $ref: '#/components/examples/PrincipalRateLimitEntityRequestSSWSToken'
              EmptyPercentages:
                $ref: '#/components/examples/PrincipalRateLimitEntityRequestEmptyPercentages'
            schema:
              $ref: '#/components/schemas/PrincipalRateLimitEntity'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                SSWSToken:
                  $ref: '#/components/examples/PrincipalRateLimitEntityResponseSSWSToken'
              schema:
                $ref: '#/components/schemas/PrincipalRateLimitEntity'
          description: OK
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.principalRateLimits.manage
      summary: Replace a Principal Rate Limit
      tags:
      - PrincipalRateLimit
      x-codegen-request-body-name: entity
  /api/v1/push-providers:
    get:
      description: Enumerates push providers in your organization.
      operationId: listPushProviders
      parameters:
      - description: Filters push providers by `providerType`
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/ProviderType'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listPushProviders_200_response_inner'
                type: array
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.pushProviders.read
      summary: List all Push Providers
      tags:
      - PushProvider
    post:
      description: Adds a new push provider to your organization.
      operationId: createPushProvider
      requestBody:
        content:
          application/json:
            examples:
              APNs:
                $ref: '#/components/examples/PushProviderAPNsRequest'
              FCM:
                $ref: '#/components/examples/PushProviderFCMRequest'
            schema:
              $ref: '#/components/schemas/listPushProviders_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                APNs:
                  $ref: '#/components/examples/PushProviderAPNsResponse'
                FCM:
                  $ref: '#/components/examples/PushProviderFCMResponse'
              schema:
                $ref: '#/components/schemas/listPushProviders_200_response_inner'
          description: OK
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.pushProviders.manage
      summary: Create a Push Provider
      tags:
      - PushProvider
      x-codegen-request-body-name: pushProvider
  /api/v1/push-providers/{pushProviderId}:
    delete:
      description: "Delete a push provider by `pushProviderId`. If the push provider\
        \ is currently being used in the org by a custom authenticator, the delete\
        \ will not be allowed."
      operationId: deletePushProvider
      parameters:
      - description: Id of the push provider
        explode: false
        in: path
        name: pushProviderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "409":
          content:
            application/json:
              examples:
                Cannot remove push provider in use by a custom app authenticator:
                  $ref: '#/components/examples/ErrorPushProviderUsedByCustomAppAuthenticator'
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.pushProviders.manage
      summary: Delete a Push Provider
      tags:
      - PushProvider
    get:
      description: Fetches a push provider by `pushProviderId`.
      operationId: getPushProvider
      parameters:
      - description: Id of the push provider
        explode: false
        in: path
        name: pushProviderId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                APNs:
                  $ref: '#/components/examples/PushProviderAPNsResponse'
                FCM:
                  $ref: '#/components/examples/PushProviderFCMResponse'
              schema:
                $ref: '#/components/schemas/listPushProviders_200_response_inner'
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.pushProviders.read
      summary: Retrieve a Push Provider
      tags:
      - PushProvider
    put:
      description: Updates a push provider by `pushProviderId`.
      operationId: updatePushProvider
      parameters:
      - description: Id of the push provider
        explode: false
        in: path
        name: pushProviderId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              APNs:
                $ref: '#/components/examples/PushProviderAPNsRequest'
              FCM:
                $ref: '#/components/examples/PushProviderFCMRequest'
            schema:
              $ref: '#/components/schemas/listPushProviders_200_response_inner'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                APNs:
                  $ref: '#/components/examples/PushProviderAPNsResponse'
                FCM:
                  $ref: '#/components/examples/PushProviderFCMResponse'
              schema:
                $ref: '#/components/schemas/listPushProviders_200_response_inner'
          description: OK
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.pushProviders.manage
      summary: Replace a Push Provider
      tags:
      - PushProvider
      x-codegen-request-body-name: pushProvider
  /api/v1/roles/{roleTypeOrRoleId}/subscriptions:
    get:
      description: When roleType List all subscriptions of a Role. Else when roleId
        List subscriptions of a Custom Role
      operationId: listRoleSubscriptions
      parameters:
      - explode: false
        in: path
        name: roleTypeOrRoleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.read
      summary: List all Subscriptions of a Custom Role
      tags:
      - Subscription
  /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}:
    get:
      description: When roleType Get subscriptions of a Role with a specific notification
        type. Else when roleId Get subscription of a Custom Role with a specific notification
        type.
      operationId: getRoleSubscriptionByNotificationType
      parameters:
      - explode: false
        in: path
        name: roleTypeOrRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.read
      summary: List all Subscriptions of a Custom Role with a specific notification
        type
      tags:
      - Subscription
  /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}/subscribe:
    post:
      description: "When roleType Subscribes a Role to a specific notification type.\
        \ When you change the subscription status of a Role, it overrides the subscription\
        \ of any individual user of that Role. Else when roleId Subscribes a Custom\
        \ Role to a specific notification type. When you change the subscription status\
        \ of a Custom Role, it overrides the subscription of any individual user of\
        \ that Custom Role."
      operationId: subscribeRoleSubscriptionByNotificationType
      parameters:
      - explode: false
        in: path
        name: roleTypeOrRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.manage
      summary: Subscribe a Custom Role to a specific notification type
      tags:
      - Subscription
  /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}/unsubscribe:
    post:
      description: "When roleType Unsubscribes a Role from a specific notification\
        \ type. When you change the subscription status of a Role, it overrides the\
        \ subscription of any individual user of that Role. Else when roleId Unsubscribes\
        \ a Custom Role from a specific notification type. When you change the subscription\
        \ status of a Custom Role, it overrides the subscription of any individual\
        \ user of that Custom Role."
      operationId: unsubscribeRoleSubscriptionByNotificationType
      parameters:
      - explode: false
        in: path
        name: roleTypeOrRoleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.manage
      summary: Unsubscribe a Custom Role from a specific notification type
      tags:
      - Subscription
  /api/v1/sessions:
    post:
      description: "Creates a new session for a user with a valid session token. Use\
        \ this API if, for example, you want to set the session cookie yourself instead\
        \ of allowing Okta to set it, or want to hold the session ID in order to delete\
        \ a session via the API instead of visiting the logout URL."
      operationId: createSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Success
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      summary: Create a Session with Session Token
      tags:
      - Session
      x-codegen-request-body-name: createSessionRequest
  /api/v1/sessions/{sessionId}:
    delete:
      description: End a session.
      operationId: endSession
      parameters:
      - explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.sessions.manage
      summary: Delete a Session
      tags:
      - Session
    get:
      description: Get details about a session.
      operationId: getSession
      parameters:
      - explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Success
        "400":
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.sessions.read
      summary: Retrieve a Session
      tags:
      - Session
  /api/v1/sessions/{sessionId}/lifecycle/refresh:
    post:
      description: Refresh a session.
      operationId: refreshSession
      parameters:
      - explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.sessions.manage
      summary: Refresh a Session
      tags:
      - Session
  /api/v1/templates/sms:
    get:
      description: Enumerates custom SMS templates in your organization. A subset
        of templates can be returned that match a template type.
      operationId: listSmsTemplates
      parameters:
      - explode: true
        in: query
        name: templateType
        required: false
        schema:
          $ref: '#/components/schemas/SmsTemplateType'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SmsTemplate'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.read
      summary: List all SMS Templates
      tags:
      - Template
    post:
      description: Adds a new custom SMS template to your organization.
      operationId: createSmsTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTemplate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.manage
      summary: Create an SMS Template
      tags:
      - Template
      x-codegen-request-body-name: smsTemplate
  /api/v1/templates/sms/{templateId}:
    delete:
      description: Removes an SMS template.
      operationId: deleteSmsTemplate
      parameters:
      - explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.manage
      summary: Delete an SMS Template
      tags:
      - Template
    get:
      description: Fetches a specific template by `id`
      operationId: getSmsTemplate
      parameters:
      - explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.read
      summary: Retrieve an SMS Template
      tags:
      - Template
    post:
      description: 'Updates only some of the SMS template properties:'
      operationId: partialUpdateSmsTemplate
      parameters:
      - explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTemplate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.manage
      summary: Update an SMS Template
      tags:
      - Template
      x-codegen-request-body-name: smsTemplate
    put:
      description: Updates the SMS template.
      operationId: updateSmsTemplate
      parameters:
      - explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTemplate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplate'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.templates.manage
      summary: Replace an SMS Template
      tags:
      - Template
      x-codegen-request-body-name: smsTemplate
  /api/v1/threats/configuration:
    get:
      description: Gets current ThreatInsight configuration
      operationId: getCurrentConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreatInsightConfiguration'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.threatInsights.read
      summary: Retrieve the ThreatInsight Configuration
      tags:
      - ThreatInsight
    post:
      description: Updates ThreatInsight configuration
      operationId: updateConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreatInsightConfiguration'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreatInsightConfiguration'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.threatInsights.manage
      summary: Update the ThreatInsight Configuration
      tags:
      - ThreatInsight
      x-codegen-request-body-name: threatInsightConfiguration
  /api/v1/trustedOrigins:
    get:
      description: Success
      operationId: listOrigins
      parameters:
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TrustedOrigin'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.trustedOrigins.read
      summary: List all Trusted Origins
      tags:
      - TrustedOrigin
    post:
      description: Success
      operationId: createOrigin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustedOrigin'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.trustedOrigins.manage
      summary: Create a Trusted Origin
      tags:
      - TrustedOrigin
      x-codegen-request-body-name: trustedOrigin
  /api/v1/trustedOrigins/{trustedOriginId}:
    delete:
      description: Success
      operationId: deleteOrigin
      parameters:
      - explode: false
        in: path
        name: trustedOriginId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.trustedOrigins.manage
      summary: Delete a Trusted Origin
      tags:
      - TrustedOrigin
    get:
      description: Success
      operationId: getOrigin
      parameters:
      - explode: false
        in: path
        name: trustedOriginId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.trustedOrigins.read
      summary: Retrieve a Trusted Origin
      tags:
      - TrustedOrigin
    put:
      description: Success
      operationId: updateOrigin
      parameters:
      - explode: false
        in: path
        name: trustedOriginId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustedOrigin'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.trustedOrigins.manage
      summary: Replace a Trusted Origin
      tags:
      - TrustedOrigin
      x-codegen-request-body-name: trustedOrigin
  /api/v1/trustedOrigins/{trustedOriginId}/lifecycle/activate:
    post:
      description: Success
      operationId: activateOrigin
      parameters:
      - explode: false
        in: path
        name: trustedOriginId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.trustedOrigins.manage
      summary: Activate a Trusted Origin
      tags:
      - TrustedOrigin
  /api/v1/trustedOrigins/{trustedOriginId}/lifecycle/deactivate:
    post:
      description: Success
      operationId: deactivateOrigin
      parameters:
      - explode: false
        in: path
        name: trustedOriginId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedOrigin'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.trustedOrigins.manage
      summary: Deactivate a Trusted Origin
      tags:
      - TrustedOrigin
  /api/v1/users:
    get:
      description: Lists users in your organization with pagination in most cases.  A
        subset of users can be returned that match a supported filter expression or
        search criteria.
      operationId: listUsers
      parameters:
      - description: "Finds a user that matches firstName, lastName, and email properties"
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: "The cursor to use for pagination. It is an opaque string that\
          \ specifies your current location in the list and is obtained from the `Link`\
          \ response header. See [Pagination](https://developer.okta.com/docs/reference/core-okta-api/#pagination)\
          \ for more information."
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of results returned. Defaults to 10 if `q`
          is provided.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 200
          format: int32
          type: integer
        style: form
      - description: Filters users with a supported expression for a subset of properties
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Searches for users with a supported filtering expression for
          most properties. Okta recommends using this parameter for search for best
          performance.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                User List:
                  $ref: '#/components/examples/ListUsersResponse'
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: List all Users
      tags:
      - User
    post:
      description: Creates a new user in your Okta organization with or without credentials.
      operationId: createUser
      parameters:
      - description: Executes activation lifecycle operation when creating the user
        explode: true
        in: query
        name: activate
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Indicates whether to create a user with a specified authentication
          provider
        explode: true
        in: query
        name: provider
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "With activate=true, set nextLogin to \"changePassword\" to have\
          \ the password be EXPIRED, so user must change it the next time they log\
          \ in."
        explode: true
        in: query
        name: nextLogin
        required: false
        schema:
          $ref: '#/components/schemas/UserNextLogin'
        style: form
        x-okta-added-version: 0.14.0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "400":
          content:
            application/json:
              examples:
                Create user with too many groups specified:
                  $ref: '#/components/examples/ErrorCreateUserWithTooManyManyGroupsResponse'
                Create user with expired password and activate set to `false`:
                  $ref: '#/components/examples/ErrorCreateUserWithExpiredPasswordWithoutActivation'
                Create user with expired password and `null` password:
                  $ref: '#/components/examples/ErrorCreateUserWithExpiredPasswordWithNullPassword'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Create a User
      tags:
      - User
      x-codegen-request-body-name: body
  /api/v1/users/{associatedUserId}/linkedObjects/{primaryRelationshipName}/{primaryUserId}:
    put:
      description: Sets a linked object for two users.
      operationId: setLinkedObjectForUser
      parameters:
      - explode: false
        in: path
        name: associatedUserId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: primaryRelationshipName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: primaryUserId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - OAuth_2.0:
        - okta.users.manage
      summary: Create a Linked Object for two User
      tags:
      - User
  /api/v1/users/{userId}:
    delete:
      description: Deletes a user permanently.  This operation can only be performed
        on users that have a `DEPROVISIONED` status.  **This action cannot be recovered!**
      operationId: deactivateOrDeleteUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sendEmail
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-okta-added-version: 1.5.0
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Delete a User
      tags:
      - User
    get:
      description: Fetches a user from your Okta organization.
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: Retrieve a User
      tags:
      - User
    post:
      description: "Fetch a user by `id`, `login`, or `login shortname` if the short\
        \ name is unambiguous."
      operationId: partialUpdateUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: strict
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Update a User
      tags:
      - User
      x-codegen-request-body-name: user
    put:
      description: Update a user's profile and/or credentials using strict-update
        semantics.
      operationId: updateUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: strict
        required: false
        schema:
          type: boolean
        style: form
        x-okta-added-version: 1.10.0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Replace a User
      tags:
      - User
      x-codegen-request-body-name: user
  /api/v1/users/{userId}/appLinks:
    get:
      description: Fetches appLinks for all direct or indirect (via group membership)
        assigned applications.
      operationId: listAppLinks
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppLink'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: List all Assigned Application Links
      tags:
      - User
  /api/v1/users/{userId}/clients:
    get:
      description: Lists all client resources for which the specified user has grants
        or tokens.
      operationId: listUserClients
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2Client'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: List all Clients
      tags:
      - User
  /api/v1/users/{userId}/clients/{clientId}/grants:
    delete:
      description: Revokes all grants for the specified user and client
      operationId: revokeGrantsForUserAndClient
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Revoke all Grants for a Client
      tags:
      - User
    get:
      description: Lists all grants for a specified user and client
      operationId: listGrantsForUserAndClient
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: List all Grants for a Client
      tags:
      - User
  /api/v1/users/{userId}/clients/{clientId}/tokens:
    delete:
      description: Revokes all refresh tokens issued for the specified User and Client.
      operationId: revokeTokensForUserAndClient
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Revoke all Refresh Tokens for a Client
      tags:
      - User
    get:
      description: Lists all refresh tokens issued for the specified User and Client.
      operationId: listRefreshTokensForUserAndClient
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2RefreshToken'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: List all Refresh Tokens for a Client
      tags:
      - User
  /api/v1/users/{userId}/clients/{clientId}/tokens/{tokenId}:
    delete:
      description: Revokes the specified refresh token.
      operationId: revokeTokenForUserAndClient
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Revoke a Token for a Client
      tags:
      - User
    get:
      description: Gets a refresh token issued for the specified User and Client.
      operationId: getRefreshTokenForUserAndClient
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2RefreshToken'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: Retrieve a Refresh Token for a Client
      tags:
      - User
  /api/v1/users/{userId}/credentials/change_password:
    post:
      description: "Changes a user's password by validating the user's current password.\
        \ This operation can only be performed on users in `STAGED`, `ACTIVE`, `PASSWORD_EXPIRED`,\
        \ or `RECOVERY` status that have a valid password credential"
      operationId: changePassword
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: strict
        required: false
        schema:
          type: boolean
        style: form
        x-okta-added-version: 1.10.0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Change Password
      tags:
      - User
      x-codegen-request-body-name: changePasswordRequest
  /api/v1/users/{userId}/credentials/change_recovery_question:
    post:
      description: "Changes a user's recovery question & answer credential by validating\
        \ the user's current password.  This operation can only be performed on users\
        \ in **STAGED**, **ACTIVE** or **RECOVERY** `status` that have a valid password\
        \ credential"
      operationId: changeRecoveryQuestion
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Change Recovery Question
      tags:
      - User
      x-codegen-request-body-name: userCredentials
  /api/v1/users/{userId}/credentials/forgot_password:
    post:
      description: Initiate forgot password flow. Generates a one-time token (OTT)
        that can be used to reset a user's password.
      operationId: forgotPassword
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sendEmail
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordResponse'
          description: Reset url
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Initiate Forgot Password
      tags:
      - User
  /api/v1/users/{userId}/credentials/forgot_password_recovery_question:
    post:
      description: Resets the user's password to the specified password if the provided
        answer to the recovery question is correct.
      operationId: forgotPasswordSetNewPassword
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sendEmail
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
          description: Credentials
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Reset Password with Recovery Question
      tags:
      - User
      x-codegen-request-body-name: userCredentials
  /api/v1/users/{userId}/factors:
    get:
      description: Enumerates all the enrolled factors for the specified user
      operationId: listFactors
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listFactors_200_response_inner'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: List all Factors
      tags:
      - UserFactor
    post:
      description: Enrolls a user with a supported factor.
      operationId: enrollFactor
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: updatePhone
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: id of SMS template (only for SMS factor)
        explode: true
        in: query
        name: templateId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: tokenLifetimeSeconds
        required: false
        schema:
          default: 300
          format: int32
          type: integer
        style: form
        x-okta-added-version: 1.3.0
      - explode: true
        in: query
        name: activate
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-okta-added-version: 1.3.0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listFactors_200_response_inner'
        description: Factor
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listFactors_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Enroll a Factor
      tags:
      - UserFactor
      x-codegen-request-body-name: body
  /api/v1/users/{userId}/factors/catalog:
    get:
      description: Enumerates all the supported factors that can be enrolled for the
        specified user
      operationId: listSupportedFactors
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listFactors_200_response_inner'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: List all Supported Factors
      tags:
      - UserFactor
  /api/v1/users/{userId}/factors/questions:
    get:
      description: Enumerates all available security questions for a user's `question`
        factor
      operationId: listSupportedSecurityQuestions
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SecurityQuestion'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      summary: List all Supported Security Questions
      tags:
      - UserFactor
  /api/v1/users/{userId}/factors/{factorId}:
    delete:
      description: "Unenrolls an existing factor for the specified user, allowing\
        \ the user to enroll a new factor."
      operationId: deleteFactor
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: factorId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: removeEnrollmentRecovery
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Delete a Factor
      tags:
      - UserFactor
    get:
      description: Fetches a factor for the specified user
      operationId: getFactor
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: factorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listFactors_200_response_inner'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: Retrieve a Factor
      tags:
      - UserFactor
  /api/v1/users/{userId}/factors/{factorId}/lifecycle/activate:
    post:
      description: The `sms` and `token:software:totp` factor types require activation
        to complete the enrollment process.
      operationId: activateFactor
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: factorId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateFactorRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listFactors_200_response_inner'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Activate a Factor
      tags:
      - UserFactor
      x-codegen-request-body-name: body
  /api/v1/users/{userId}/factors/{factorId}/transactions/{transactionId}:
    get:
      description: Polls factors verification transaction for status.
      operationId: getFactorTransactionStatus
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: factorId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: transactionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyUserFactorResponse'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: Retrieve a Factor Transaction Status
      tags:
      - UserFactor
  /api/v1/users/{userId}/factors/{factorId}/verify:
    post:
      description: Verifies an OTP for a `token` or `token:hardware` factor
      operationId: verifyFactor
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: factorId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: templateId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: tokenLifetimeSeconds
        required: false
        schema:
          default: 300
          format: int32
          type: integer
        style: form
        x-okta-added-version: 1.3.0
      - explode: false
        in: header
        name: X-Forwarded-For
        required: false
        schema:
          type: string
        style: simple
        x-okta-added-version: 1.11.0
      - explode: false
        in: header
        name: User-Agent
        required: false
        schema:
          type: string
        style: simple
        x-okta-added-version: 1.11.0
      - explode: false
        in: header
        name: Accept-Language
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyFactorRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyUserFactorResponse'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Verify an MFA Factor
      tags:
      - UserFactor
      x-codegen-request-body-name: body
  /api/v1/users/{userId}/grants:
    delete:
      description: Revokes all grants for a specified user
      operationId: revokeUserGrants
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Revoke all User Grants
      tags:
      - User
    get:
      description: Lists all grants for the specified user
      operationId: listUserGrants
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: scopeId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: List all User Grants
      tags:
      - User
  /api/v1/users/{userId}/grants/{grantId}:
    delete:
      description: Revokes one grant for a specified user
      operationId: revokeUserGrant
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: grantId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Revoke a User Grant
      tags:
      - User
    get:
      description: Gets a grant for the specified user
      operationId: getUserGrant
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: grantId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: Retrieve a User Grant
      tags:
      - User
  /api/v1/users/{userId}/groups:
    get:
      description: Fetches the groups of which the user is a member.
      operationId: listUserGroups
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: List all Groups
      tags:
      - User
  /api/v1/users/{userId}/idps:
    get:
      description: Lists the IdPs associated with the user.
      operationId: listUserIdentityProviders
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProvider'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: List all Identity Providers
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/activate:
    post:
      description: Activates a user.  This operation can only be performed on users
        with a `STAGED` status.  Activation of a user is an asynchronous operation.
        The user will have the `transitioningToStatus` property with a value of `ACTIVE`
        during activation to indicate that the user hasn't completed the asynchronous
        operation.  The user will have a status of `ACTIVE` when the activation process
        is complete.
      operationId: activateUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: Sends an activation email to the user if true
        explode: true
        in: query
        name: sendEmail
        required: true
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivationToken'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Activate a User
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/deactivate:
    post:
      description: "Deactivates a user. This operation can only be performed on users\
        \ that do not have a `DEPROVISIONED` status. While the asynchronous operation\
        \ (triggered by HTTP header `Prefer: respond-async`) is proceeding the user's\
        \ `transitioningToStatus` property is `DEPROVISIONED`. The user's status is\
        \ `DEPROVISIONED` when the deactivation process is complete."
      operationId: deactivateUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sendEmail
        required: false
        schema:
          default: false
          type: boolean
        style: form
        x-okta-added-version: 1.5.0
      responses:
        "200":
          content: {}
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Deactivate a User
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/expire_password:
    post:
      description: This operation transitions the user to the status of `PASSWORD_EXPIRED`
        so that the user is required to change their password at their next login.
      operationId: expirePassword
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Expire Password
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/expire_password_with_temp_password:
    post:
      description: "This operation transitions the user to the status of `PASSWORD_EXPIRED`\
        \ so that the user is required to change their password at their next login,\
        \ and also sets the user's password to a temporary password returned in the\
        \ response."
      operationId: expirePasswordAndGetTemporaryPassword
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TempPassword'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Expire Password and Set Temporary Password
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/reactivate:
    post:
      description: "Reactivates a user.  This operation can only be performed on users\
        \ with a `PROVISIONED` status.  This operation restarts the activation workflow\
        \ if for some reason the user activation was not completed when using the\
        \ activationToken from [Activate User](#activate-user)."
      operationId: reactivateUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: Sends an activation email to the user if true
        explode: true
        in: query
        name: sendEmail
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivationToken'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Reactivate a User
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/reset_factors:
    post:
      description: This operation resets all factors for the specified user. All MFA
        factor enrollments returned to the unenrolled state. The user's status remains
        ACTIVE. This link is present only if the user is currently enrolled in one
        or more MFA factors.
      operationId: resetFactors
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Reset all Factors
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/reset_password:
    post:
      description: Generates a one-time token (OTT) that can be used to reset a user's
        password.  The OTT link can be automatically emailed to the user or returned
        to the API caller and distributed using a custom flow.
      operationId: resetPassword
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: sendEmail
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordToken'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Reset Password
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/suspend:
    post:
      description: Suspends a user.  This operation can only be performed on users
        with an `ACTIVE` status.  The user will have a status of `SUSPENDED` when
        the process is complete.
      operationId: suspendUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: OK
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Suspend a User
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/unlock:
    post:
      description: Unlocks a user with a `LOCKED_OUT` status and returns them to `ACTIVE`
        status.  Users will be able to login with their current password.
      operationId: unlockUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Unlock a User
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/unsuspend:
    post:
      description: Unsuspends a user and returns them to the `ACTIVE` state.  This
        operation can only be performed on users that have a `SUSPENDED` status.
      operationId: unsuspendUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Unsuspend a User
      tags:
      - User
  /api/v1/users/{userId}/linkedObjects/{relationshipName}:
    delete:
      description: "Delete linked objects for a user, relationshipName can be ONLY\
        \ a primary relationship name"
      operationId: removeLinkedObjectForUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: relationshipName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Delete a Linked Object
      tags:
      - User
    get:
      description: "Get linked objects for a user, relationshipName can be a primary\
        \ or associated relationship name"
      operationId: getLinkedObjectsForUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: relationshipName
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ResponseLinks'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: List all Linked Objects
      tags:
      - User
  /api/v1/users/{userId}/roles:
    get:
      description: Lists all roles assigned to a user.
      operationId: listAssignedRolesForUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.read
      summary: List all Assigned Roles
      tags:
      - User
    post:
      description: Assigns a role to a user.
      operationId: assignRoleToUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: disableNotifications
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRoleRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Created
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.manage
      summary: Assign a Role
      tags:
      - User
      x-codegen-request-body-name: assignRoleRequest
  /api/v1/users/{userId}/roles/{roleId}:
    delete:
      description: Unassigns a role from a user.
      operationId: removeRoleFromUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.manage
      summary: Delete a Role
      tags:
      - User
    get:
      description: Gets role that is assigned to user.
      operationId: getUserRole
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.read
      summary: Retrieve a Role
      tags:
      - User
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps:
    get:
      description: "Lists all App targets for an `APP_ADMIN` Role assigned to a User.\
        \ This methods return list may include full Applications or Instances. The\
        \ response for an instance will have an `ID` value, while Application will\
        \ not have an ID."
      operationId: listApplicationTargetsForApplicationAdministratorRoleForUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CatalogApplication'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.read
      summary: List all Application Targets for Application Administrator Role
      tags:
      - User
    put:
      description: Assign all Apps as Target to Role
      operationId: addAllAppsAsTargetToRole
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.manage
      summary: Assign all Apps as Target to Role
      tags:
      - User
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}:
    delete:
      description: Success
      operationId: removeApplicationTargetFromApplicationAdministratorRoleForUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.manage
      summary: Unassign an Application Target from Application Administrator Role
      tags:
      - User
    put:
      description: Success
      operationId: addApplicationTargetToAdminRoleForUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.manage
      summary: Assign an Application Target to Administrator Role
      tags:
      - User
  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}:
    delete:
      description: Remove App Instance Target to App Administrator Role given to a
        User
      operationId: removeApplicationTargetFromAdministratorRoleForUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.manage
      summary: Unassign an Application Instance Target to Application Administrator
        Role
      tags:
      - User
    put:
      description: Add App Instance Target to App Administrator Role given to a User
      operationId: addApplicationTargetToAppAdminRoleForUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.manage
      summary: Assign an Application Instance Target to an Application Administrator
        Role
      tags:
      - User
  /api/v1/users/{userId}/roles/{roleId}/targets/groups:
    get:
      description: Success
      operationId: listGroupTargetsForRole
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.read
      summary: List all Group Targets for Role
      tags:
      - User
  /api/v1/users/{userId}/roles/{roleId}/targets/groups/{groupId}:
    delete:
      description: Unassign a Group Target from Role
      operationId: removeGroupTargetFromRole
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.manage
      summary: Unassign a Group Target from Role
      tags:
      - User
    put:
      description: Assign a Group Target to Role
      operationId: addGroupTargetToRole
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.roles.manage
      summary: Assign a Group Target to Role
      tags:
      - User
  /api/v1/users/{userId}/sessions:
    delete:
      description: Removes all active identity provider sessions. This forces the
        user to authenticate on the next operation. Optionally revokes OpenID Connect
        and OAuth refresh and access tokens issued to the user.
      operationId: clearUserSessions
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: Revoke issued OpenID Connect and OAuth refresh and access tokens
        explode: true
        in: query
        name: oauthTokens
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Delete all User Sessions
      tags:
      - User
  /api/v1/users/{userId}/subscriptions:
    get:
      description: List subscriptions of a User. Only lists subscriptions for current
        user. An AccessDeniedException message is sent if requests are made from other
        users.
      operationId: listUserSubscriptions
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: List all Subscriptions
      tags:
      - Subscription
  /api/v1/users/{userId}/subscriptions/{notificationType}:
    get:
      description: Get the subscriptions of a User with a specific notification type.
        Only gets subscriptions for current user. An AccessDeniedException message
        is sent if requests are made from other users.
      operationId: getUserSubscriptionByNotificationType
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.read
      summary: List all Subscriptions by type
      tags:
      - Subscription
  /api/v1/users/{userId}/subscriptions/{notificationType}/subscribe:
    post:
      description: Subscribes a User to a specific notification type. Only the current
        User can subscribe to a specific notification type. An AccessDeniedException
        message is sent if requests are made from other users.
      operationId: subscribeUserSubscriptionByNotificationType
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Subscribe to a specific notification type
      tags:
      - Subscription
  /api/v1/users/{userId}/subscriptions/{notificationType}/unsubscribe:
    post:
      description: Unsubscribes a User from a specific notification type. Only the
        current User can unsubscribe from a specific notification type. An AccessDeniedException
        message is sent if requests are made from other users.
      operationId: unsubscribeUserSubscriptionByNotificationType
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: notificationType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.users.manage
      summary: Unsubscribe from a specific notification type
      tags:
      - Subscription
  /api/v1/zones:
    get:
      description: Enumerates network zones added to your organization with pagination.
        A subset of zones can be returned that match a supported filter expression
        or query.
      operationId: listNetworkZones
      parameters:
      - description: Specifies the pagination cursor for the next page of network
          zones
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the number of results for a page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: -1
          format: int32
          type: integer
        style: form
      - description: Filters zones by usage or id expression
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NetworkZone'
                type: array
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.networkZones.read
      summary: List all Network Zones
      tags:
      - NetworkZone
    post:
      description: Adds a new network zone to your Okta organization.
      operationId: createNetworkZone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkZone'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.networkZones.manage
      summary: Create a Network Zone
      tags:
      - NetworkZone
      x-codegen-request-body-name: zone
  /api/v1/zones/{zoneId}:
    delete:
      description: Removes network zone.
      operationId: deleteNetworkZone
      parameters:
      - explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.networkZones.manage
      summary: Delete a Network Zone
      tags:
      - NetworkZone
    get:
      description: Fetches a network zone from your Okta organization by `id`.
      operationId: getNetworkZone
      parameters:
      - explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.networkZones.read
      summary: Retrieve a Network Zone
      tags:
      - NetworkZone
    put:
      description: Updates a network zone in your organization.
      operationId: updateNetworkZone
      parameters:
      - explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkZone'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
          description: Success
        "400":
          content:
            application/json:
              examples:
                API Validation Failed:
                  $ref: '#/components/examples/ErrorApiValidationFailed'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.networkZones.manage
      summary: Replace a Network Zone
      tags:
      - NetworkZone
      x-codegen-request-body-name: zone
  /api/v1/zones/{zoneId}/lifecycle/activate:
    post:
      description: Activate Network Zone
      operationId: activateNetworkZone
      parameters:
      - explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.networkZones.manage
      summary: Activate a Network Zone
      tags:
      - NetworkZone
  /api/v1/zones/{zoneId}/lifecycle/deactivate:
    post:
      description: Deactivates a network zone.
      operationId: deactivateNetworkZone
      parameters:
      - explode: false
        in: path
        name: zoneId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkZone'
          description: Success
        "403":
          content:
            application/json:
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorResourceNotFound'
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "429":
          content:
            application/json:
              examples:
                Resource Not Found:
                  $ref: '#/components/examples/ErrorTooManyRequests'
              schema:
                $ref: '#/components/schemas/Error'
          description: Too Many Requests
      security:
      - API_Token: []
      - OAuth_2.0:
        - okta.networkZones.manage
      summary: Deactivate a Network Zone
      tags:
      - NetworkZone
components:
  examples:
    ApiTokenListMetadataResponse:
      value:
      - name: My API Token
        userId: 00uabcdefg1234567890
        tokenWindow: P30D
        id: 00Tabcdefg1234567890
        clientName: Okta API
        expiresAt: 2021-12-11T20:38:10.000Z
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: "https://${yourOktaDomain}/api/v1/api-tokens/00Tabcdefg1234567890"
            hints:
              allow:
              - GET
              - DELETE
          user:
            href: "https://${yourOktaDomain}/api/v1/users/00uabcdefg1234567890"
            hints:
              allow:
              - GET
      - name: Another API Token
        userId: 00uabcdefg1234567890
        tokenWindow: PT5M
        id: 00T1234567890abcdefg
        clientName: Okta API
        expiresAt: 2021-11-11T20:43:10.000Z
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: "https://${yourOktaDomain}/api/v1/api-tokens/00T1234567890abcdefg"
            hints:
              allow:
              - GET
              - DELETE
          user:
            href: "https://${yourOktaDomain}/api/v1/users/00uabcdefg1234567890"
            hints:
              allow:
              - GET
    ApiTokenMetadataResponse:
      value:
        name: My API Token
        userId: 00uXXXXXXXXXXXXXXXXX
        tokenWindow: P30D
        id: 00Tabcdefg1234567890
        clientName: Okta API
        expiresAt: 2021-12-11T20:38:10.000Z
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: "https://${yourOktaDomain}/api/v1/api-tokens/00Tabcdefg1234567890"
            hints:
              allow:
              - GET
              - DELETE
          user:
            href: "https://${yourOktaDomain}/api/v1/users/00uXXXXXXXXXXXXXXXXX"
            hints:
              allow:
              - GET
    BehaviorRuleRequest:
      value:
        name: My Behavior Rule
        type: VELOCITY
    BehaviorRuleResponse:
      value:
        id: abcd1234
        name: My Behavior Rule
        type: VELOCITY
        settings:
          velocityKph: 805
        status: ACTIVE
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _link:
          self:
            href: https://your-subdomain.okta.com/api/v1/behaviors/abcd1234
            hints:
              allow:
              - GET
              - POST
              - PUT
              - DELETE
    CAPTCHAInstanceRequestHCaptcha:
      value:
        name: myHCaptcha
        secretKey: xxxxxxxxxxx
        siteKey: xxxxxxxxxxx
        type: HCAPTCHA
    CAPTCHAInstanceRequestReCaptcha:
      value:
        name: myReCaptcha
        secretKey: xxxxxxxxxxx
        siteKey: yyyyyyyyyyyyyyy
        type: RECAPTCHA_V2
    CAPTCHAInstanceResponseHCaptcha:
      value:
        id: abcd1234
        name: myHCaptcha
        siteKey: xxxxxxxxxxx
        type: HCAPTCHA
        _link:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas/abcd1234
            hints:
              allow:
              - GET
              - POST
              - PUT
              - DELETE
    CAPTCHAInstanceResponseReCaptcha:
      value:
        id: abcd4567
        name: myReCaptcha
        siteKey: yyyyyyyyyyyyyyy
        type: RECAPTCHA_V2
        _link:
          self:
            href: https://your-subdomain.okta.com/api/v1/captchas/abcd4567
            hints:
              allow:
              - GET
              - POST
              - PUT
              - DELETE
    CreateUpdateEmailCustomizationRequest:
      value:
        language: fr
        subject: "Bienvenue dans ${org.name}!"
        body: "<!DOCTYPE html><html><body><p>Bonjour ${user.profile.firstName}. <a\
          \ href=\"${activationLink}\">Activer le compte</a></p></body></html>"
        isDefault: false
    CreateUpdateEmailCustomizationResponse:
      value:
        language: fr
        subject: "Bienvenue dans ${org.name}!"
        body: "<!DOCTYPE html><html><body><p>Bonjour ${user.profile.firstName}. <a\
          \ href=\"${activationLink}\">Activer le compte</a></p></body></html>"
        isDefault: false
        id: oel11u6DqUiMbQkpl0g4
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          template:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
          preview:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview"
            hints:
              allow:
              - GET
          test:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/test"
            hints:
              allow:
              - POST
    DeviceAssuranceAndroidRequest:
      value:
        name: Device Assurance Android
        osVersion:
          minimum: 12.4.5
        diskEncryptionType:
          include:
          - USER
          - FULL
        jailbreak: false
        platform: ANDROID
        screenLockType:
          include:
          - BIOMETRIC
        secureHardwarePresent: true
    DeviceAssuranceIosRequest:
      value:
        name: Device Assurance IOS
        osVersion:
          minimum: 12.4.5
        jailbreak: false
        platform: IOS
        screenLockType:
          include:
          - BIOMETRIC
    DeviceAssuranceMacOSRequest:
      value:
        name: Device Assurance macOS
        osVersion:
          minimum: 12.4.5
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: MACOS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
    DeviceAssuranceResponse:
      value:
        id: dae3m8o4rWhwReDeM1c5
        name: Device Assurance Example
        lastUpdate: 2022-01-01T00:00:00.000Z
        createdUpdate: 2022-01-01T00:00:00.000Z
        lastUpdatedBy: 00u217pyf72CdUrBt1c5
        createdBy: 00u217pyf72CdUrBt1c5
        osVersion:
          minimum: 12.4.5.9
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/device-assurances/dae3m8o4rWhwReDeM1c5
            hints:
              allow:
              - DELETE
              - GET
              - PUT
    DeviceAssuranceWindowsRequest:
      value:
        name: Device Assurance Windows
        osVersion:
          minimum: 12.4.5.9
        diskEncryptionType:
          include:
          - ALL_INTERNAL_VOLUMES
        platform: WINDOWS
        screenLockType:
          include:
          - PASSCODE
          - BIOMETRIC
        secureHardwarePresent: true
    EmailCustomizationResponse:
      value:
        language: en
        isDefault: true
        subject: "Welcome to ${org.name}!"
        body: "<!DOCTYPE html><html><body><p>Hello, ${user.profile.firstName}. Click\
          \ <a href=\"${activationLink}\">here</a> to activate your account.</body></html>"
        id: oel11u6DqUiMbQkpl0g4
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          template:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
          preview:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview"
            hints:
              allow:
              - GET
          test:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/test"
            hints:
              allow:
              - POST
    EmailSettingsResponse:
      value:
        recipients: ALL_USERS
        _links:
          self:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/settings"
            hints:
              allow:
              - GET
              - PUT
          template:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
    EmailTemplateDefaultContentResponse:
      value:
        subject: "Welcome to ${org.name}!"
        body: "<!DOCTYPE html><html><body><p>Hello, ${user.profile.firstName}. Click\
          \ <a href=\"${activationLink}\">here</a> to activate your account.</body></html>"
        _links:
          self:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/default-content"
            hints:
              allow:
              - GET
          template:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
          preview:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/default-content/preview"
            hints:
              allow:
              - GET
    ErrorAccessDenied:
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorApiValidationFailed:
      value:
        errorCode: E0000001
        errorSummary: "Api validation failed: {0}"
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorCAPTCHALimitOfOne:
      value:
        errorCode: E0000165
        errorSummary: CAPTCHA count limit reached. At most one CAPTCHA instance is
          allowed per Org.
        errorLink: E0000165
        errorId: oaejrB1fWL1S7mc-2KcG-SOtw
        errorCauses: []
    ErrorCAPTCHAOrgWideSetting:
      value:
        errorCode: E0000149
        errorSummary: "Current CAPTCHA is associated with org-wide settings, cannot\
          \ be removed."
        errorLink: E0000149
        errorId: samplezsusshPdiTWiITwqBt8
        errorCauses: []
    ErrorCreateUserWithExpiredPasswordWithNullPassword:
      value:
        errorCode: E0000124
        errorSummary: "Could not create user. To create a user and expire their password\
          \ immediately, a password must be specified"
        errorLink: E0000124
        errorId: oaeXxuZgXBySvqi1FvtkwoYCA
        errorCauses:
        - errorSummary: "Could not create user. To create a user and expire their\
            \ password immediately, a password must be specified"
    ErrorCreateUserWithExpiredPasswordWithoutActivation:
      value:
        errorCode: E0000125
        errorSummary: "Could not create user. To create a user and expire their password\
          \ immediately, \"activate\" must be true"
        errorLink: E0000125
        errorId: oaeDd77L9R-TJaD7j_rXsQ31w
        errorCauses:
        - errorSummary: "Could not create user. To create a user and expire their\
            \ password immediately, \"activate\" must be true"
    ErrorCreateUserWithTooManyManyGroupsResponse:
      value:
        errorCode: E0000093
        errorSummary: Target count limit exceeded
        errorLink: E0000093
        errorId: oaePVSLIYnIQsC0B-ptBIllVA
        errorCauses:
        - errorSummary: The number of group targets is too large.
    ErrorDeviceAssuranceInUse:
      value:
        errorSummary: Device assurance is in use and cannot be deleted.
        errorId: oaenwA1ra80S9W-pvbh4m6haA
        errorCauses: []
    ErrorEmailCustomizationCannotClearDefault:
      value:
        errorCode: E0000185
        errorSummary: The isDefault parameter of the default email template customization
          can't be set to false.
        errorLink: E0000185
        errorId: oaejrB1fWL1S7mc-2KcG-SOtw
        errorCauses: []
    ErrorEmailCustomizationCannotDeleteDefault:
      value:
        errorCode: E0000184
        errorSummary: A default email template customization can't be deleted.
        errorLink: E0000184
        errorId: oaeAdRqprFuTyKokyYPbURJkA
        errorCauses: []
    ErrorEmailCustomizationDefaultAlreadyExists:
      value:
        errorCode: E0000182
        errorSummary: A default email template customization already exists.
        errorLink: E0000182
        errorId: oaeXYwTiMvASsC3O4HCzjFaCA
        errorCauses: []
    ErrorEmailCustomizationLanguageAlreadyExists:
      value:
        errorCode: E0000183
        errorSummary: An email template customization for that language already exists.
        errorLink: E0000183
        errorId: oaeUcGELffqRay0u1OPdnPypw
        errorCauses: []
    ErrorInvalidEmailTemplateRecipients:
      value:
        errorCode: E0000189
        errorSummary: This template does not support the recipients value.
        errorLink: E0000189
        errorId: oae8L1-UkcNTeGi5xVQ28_lww
        errorCauses: []
    ErrorPushProviderUsedByCustomAppAuthenticator:
      value:
        errorCode: E0000187
        errorSummary: Cannot delete push provider because it is being used by a custom
          app authenticator.
        errorLink: E0000187
        errorId: oaenwA1ra80S9W-pvbh4m6haA
        errorCauses: []
    ErrorResourceNotFound:
      value:
        errorCode: E0000007
        errorSummary: "Not found: {0}"
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
    ErrorTooManyRequests:
      value:
        errorCode: E0000047
        errorSummary: You exceeded the maximum number of requests. Try again in a
          while.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    GetEmailTemplateResponse:
      value:
        name: UserActivation
        _links:
          self:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
          settings:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/settings"
            hints:
              allow:
              - GET
              - PUT
          defaultContent:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/default-content"
            hints:
              allow:
              - GET
          customizations:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations"
            hints:
              allow:
              - GET
              - POST
              - DELETE
          test:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/test"
            hints:
              allow:
              - POST
    ListEmailCustomizationResponse:
      value:
      - language: en
        isDefault: true
        subject: "Welcome to ${org.name}!"
        body: "<!DOCTYPE html><html><body><p>Hello, ${user.profile.firstName}. Click\
          \ <a href=\"${activationLink}\">here</a> to activate your account.</body></html>"
        id: oel11u6DqUiMbQkpl0g4
        created: 2021-11-09T20:38:10.000Z
        lastUpdated: 2021-11-11T20:38:10.000Z
        _links:
          self:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4"
            hints:
              allow:
              - GET
              - PUT
              - DELETE
          template:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
          preview:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview"
            hints:
              allow:
              - GET
          test:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/test"
            hints:
              allow:
              - POST
    ListEmailTemplateResponse:
      value:
      - name: UserActivation
        _links:
          self:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
          settings:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/settings"
            hints:
              allow:
              - GET
              - PUT
          defaultContent:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/default-content"
            hints:
              allow:
              - GET
          customizations:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations"
            hints:
              allow:
              - GET
              - POST
              - DELETE
          test:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/test"
            hints:
              allow:
              - POST
    ListUsersResponse:
      value:
      - id: 00u118oQYT4TBGuay0g4
        status: ACTIVE
        created: 2022-04-04T15:56:05.000Z
        activated: null
        statusChanged: null
        lastLogin: 2022-05-04T19:50:52.000Z
        lastUpdated: 2022-05-05T18:15:44.000Z
        passwordChanged: 2022-04-04T16:00:22.000Z
        type:
          id: oty1162QAr8hJjTaq0g4
        profile:
          firstName: Alice
          lastName: Smith
          mobilePhone: null
          secondEmail: null
          login: alice.smith@example.com
          email: alice.smith@example.com
        credentials:
          password: {}
          provider:
            type: OKTA
            name: OKTA
        _links:
          self:
            href: http://your-subdomain.okta.com/api/v1/users/00u118oQYT4TBGuay0g4
    PreviewEmailCustomizationResponse:
      value:
        subject: Welcome to Okta!
        body: "<!DOCTYPE html><html><body><p>Hello, John. Click <a href=\"https://${yourOktaDomain}/...\"\
          >here</a> to activate your account.</body></html>"
        _links:
          self:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/customizations/oel2kk1zYJBJbeaGo0g4/preview"
            hints:
              allow:
              - GET
          template:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
          test:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/test"
            hints:
              allow:
              - POST
    PreviewEmailTemplateDefaultContentResponse:
      value:
        subject: Welcome to Okta!
        body: "<!DOCTYPE html><html><body><p>Hello, John. Click <a href=\"https://${yourOktaDomain}/...\"\
          >here</a> to activate your account.</body></html>"
        _links:
          self:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/default-content/preview"
            hints:
              allow:
              - GET
          template:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation"
            hints:
              allow:
              - GET
          defaultContent:
            href: "https://${yourOktaDomain}/api/v1/brands/${brandId}/templates/email/UserActivation/test/default-content"
            hints:
              allow:
              - POST
    PrincipalRateLimitEntityRequestEmptyPercentages:
      value:
        principalId: token1234
        principalType: SSWS_TOKEN
    PrincipalRateLimitEntityRequestSSWSToken:
      value:
        principalId: token1234
        principalType: SSWS_TOKEN
        defaultPercentage: 50
        defaultConcurrencyPercentage: 75
    PrincipalRateLimitEntityResponseSSWSToken:
      value:
        id: abcd1234
        orgId: org1234
        principalId: token1234
        principalType: SSWS_TOKEN
        defaultPercentage: 50
        defaultConcurrencyPercentage: 75
        createdDate: 2022-05-19T20:05:32.720Z
        createdBy: user1234
        lastUpdate: 2022-05-20T21:13:07.410Z
        lastUpdatedBy: user4321
    PushProviderAPNsRequest:
      value:
        name: APNs Example
        providerType: APNS
        configuration:
          keyId: KEY_ID
          teamId: TEAM_ID
          tokenSigningKey: '-----BEGIN PRIVATE KEY-----\nPRIVATE_KEY\n-----END PRIVATE
            KEY-----\n'
          fileName: fileName.p8
    PushProviderAPNsResponse:
      value:
        id: ppctekcmngGaqeiBxB0g4
        name: APNs Example
        providerType: APNS
        lastUpdatedDate: 2022-01-01T00:00:00.000Z
        configuration:
          keyId: KEY_ID
          teamId: TEAM_ID
          fileName: fileName.p8
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/push-providers/ppctekcmngGaqeiBxB0g4
            hints:
              allow:
              - DELETE
              - GET
              - PUT
    PushProviderFCMRequest:
      value:
        name: FCM Example
        providerType: FCM
        configuration:
          serviceAccountJson:
            type: service_account
            project_id: PROJECT_ID
            private_key_id: KEY_ID
            private_key: '-----BEGIN PRIVATE KEY-----\nPRIVATE_KEY\n-----END PRIVATE
              KEY-----\n'
            client_email: SERVICE_ACCOUNT_EMAIL
            client_id: CLIENT_ID
            auth_uri: https://accounts.google.com/o/oauth2/auth
            token_uri: https://accounts.google.com/o/oauth2/token
            auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
            client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/SERVICE_ACCOUNT_EMAIL
          fileName: fileName.json
    PushProviderFCMResponse:
      value:
        id: ppctekcmngGaqeiBxB0g4
        name: FCM Example
        providerType: FCM
        lastUpdatedDate: 2022-01-01T00:00:00.000Z
        configuration:
          projectId: PROJECT_ID
          fileName: fileName.p8
        _links:
          self:
            href: https://your-subdomain.okta.com/api/v1/push-providers/ppctekcmngGaqeiBxB0g4
            hints:
              allow:
              - DELETE
              - GET
              - PUT
  parameters:
    pathApiTokenId:
      description: id of the API Token
      explode: false
      in: path
      name: apiTokenId
      required: true
      schema:
        example: 00Tabcdefg1234567890
        type: string
      style: simple
    pathBehaviorId:
      description: id of the Behavior Detection Rule
      explode: false
      in: path
      name: behaviorId
      required: true
      schema:
        example: abcd1234
        type: string
      style: simple
    pathBrandId:
      description: The ID of the brand.
      explode: false
      in: path
      name: brandId
      required: true
      schema:
        type: string
      style: simple
    pathCaptchaId:
      description: id of the CAPTCHA
      explode: false
      in: path
      name: captchaId
      required: true
      schema:
        example: abcd1234
        type: string
      style: simple
    pathCustomizationId:
      description: The ID of the email customization.
      explode: false
      in: path
      name: customizationId
      required: true
      schema:
        type: string
      style: simple
    pathDeviceAssuranceId:
      description: Id of the Device Assurance Policy
      explode: false
      in: path
      name: deviceAssuranceId
      required: true
      schema:
        type: string
      style: simple
    pathEmailDomainId:
      explode: false
      in: path
      name: emailDomainId
      required: true
      schema:
        description: The ID of the email domain.
        type: string
      style: simple
    pathPoolId:
      description: Id of the agent pool for which the settings will apply
      explode: false
      in: path
      name: poolId
      required: true
      schema:
        type: string
      style: simple
    pathPrincipalRateLimitId:
      description: id of the Principal Rate Limit
      explode: false
      in: path
      name: principalRateLimitId
      required: true
      schema:
        example: abcd1234
        type: string
      style: simple
    pathPushProviderId:
      description: Id of the push provider
      explode: false
      in: path
      name: pushProviderId
      required: true
      schema:
        type: string
      style: simple
    pathTemplateName:
      description: The name of the email template.
      explode: false
      in: path
      name: templateName
      required: true
      schema:
        type: string
      style: simple
    pathUpdateId:
      description: Id of the update
      explode: false
      in: path
      name: updateId
      required: true
      schema:
        type: string
      style: simple
    pathUserId:
      explode: false
      in: path
      name: userId
      required: true
      schema:
        type: string
      style: simple
    queryAfter:
      description: "The cursor to use for pagination. It is an opaque string that\
        \ specifies your current location in the list and is obtained from the `Link`\
        \ response header. See [Pagination](https://developer.okta.com/docs/reference/core-okta-api/#pagination)\
        \ for more information."
      explode: true
      in: query
      name: after
      required: false
      schema:
        type: string
      style: form
    queryExpandEmailTemplate:
      description: Specifies additional metadata to be included in the response.
      explode: false
      in: query
      name: expand
      required: false
      schema:
        items:
          enum:
          - settings
          - customizationCount
          type: string
        type: array
      style: form
    queryLanguage:
      description: The language to use for the email. Defaults to the current user's
        language if unspecified.
      explode: true
      in: query
      name: language
      required: false
      schema:
        $ref: '#/components/schemas/Language'
      style: form
    queryLimit:
      description: A limit on the number of objects to return.
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 20
        maximum: 200
        minimum: 1
        type: integer
      style: form
    queryLimitPerPoolType:
      description: Maximum number of AgentPools being returned
      explode: true
      in: query
      name: limitPerPoolType
      required: false
      schema:
        default: 5
        type: integer
      style: form
    queryPoolType:
      description: Agent type to search for
      explode: true
      in: query
      name: poolType
      required: false
      schema:
        $ref: '#/components/schemas/AgentType'
      style: form
    queryScheduled:
      description: Scope the list only to scheduled or ad-hoc updates. If the parameter
        is not provided we will return the whole list of updates.
      explode: true
      in: query
      name: scheduled
      required: false
      schema:
        type: boolean
      style: form
  responses:
    ErrorApiValidationFailed400:
      content:
        application/json:
          examples:
            API Validation Failed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Request
    ErrorAccessDenied403:
      content:
        application/json:
          examples:
            Access Denied:
              $ref: '#/components/examples/ErrorAccessDenied'
          schema:
            $ref: '#/components/schemas/Error'
      description: Forbidden
    ErrorResourceNotFound404:
      content:
        application/json:
          examples:
            Resource Not Found:
              $ref: '#/components/examples/ErrorResourceNotFound'
          schema:
            $ref: '#/components/schemas/Error'
      description: Not Found
    ErrorTooManyRequests429:
      content:
        application/json:
          examples:
            Resource Not Found:
              $ref: '#/components/examples/ErrorTooManyRequests'
          schema:
            $ref: '#/components/schemas/Error'
      description: Too Many Requests
  schemas:
    APNSConfiguration:
      properties:
        fileName:
          description: (Optional) File name for Admin Console display
          type: string
        keyId:
          description: 10-character Key ID obtained from the Apple developer account
          type: string
        teamId:
          description: 10-character Team ID used to develop the iOS app
          type: string
        tokenSigningKey:
          description: APNs private authentication token signing key
          type: string
          writeOnly: true
    APNSPushProvider:
      allOf:
      - $ref: '#/components/schemas/PushProvider'
      - $ref: '#/components/schemas/APNSPushProvider_allOf'
    AccessPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - $ref: '#/components/schemas/AccessPolicy_allOf'
    AccessPolicyConstraint:
      properties:
        methods:
          items:
            type: string
          type: array
        reauthenticateIn:
          type: string
        types:
          items:
            type: string
          type: array
      type: object
    AccessPolicyConstraints:
      properties:
        knowledge:
          $ref: '#/components/schemas/KnowledgeConstraint'
        possession:
          $ref: '#/components/schemas/PossessionConstraint'
      type: object
    AccessPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - $ref: '#/components/schemas/AccessPolicyRule_allOf'
    AccessPolicyRuleActions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleActions'
      - $ref: '#/components/schemas/AccessPolicyRuleActions_allOf'
    AccessPolicyRuleApplicationSignOn:
      properties:
        access:
          type: string
        verificationMethod:
          $ref: '#/components/schemas/VerificationMethod'
      type: object
    AccessPolicyRuleConditions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleConditions'
      - $ref: '#/components/schemas/AccessPolicyRuleConditions_allOf'
    AccessPolicyRuleCustomCondition:
      properties:
        condition:
          type: string
    AcsEndpoint:
      properties:
        index:
          type: integer
        url:
          type: string
      type: object
    ActivateFactorRequest:
      example:
        attestation: attestation
        stateToken: stateToken
        clientData: clientData
        passCode: passCode
        registrationData: registrationData
      properties:
        attestation:
          type: string
        clientData:
          type: string
        passCode:
          type: string
        registrationData:
          type: string
        stateToken:
          type: string
      type: object
    Agent:
      description: Agent details
      example:
        operationalStatus: operationalStatus
        isLatestGAedVersion: true
        _links:
          hints:
            allow:
            - null
            - null
          href: href
        updateStatus: updateStatus
        name: name
        poolId: poolId
        id: id
        type: type
        version: version
        updateMessage: updateMessage
        isHidden: true
        lastConnection: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: string
        isHidden:
          type: boolean
        isLatestGAedVersion:
          type: boolean
        lastConnection:
          format: date-time
          type: string
        name:
          type: string
        operationalStatus:
          description: Operational status of a given agent
          type: string
          x-okta-known-values:
          - DEGRADED
          - DISRUPTED
          - INACTIVE
          - OPERATIONAL
        poolId:
          type: string
        type:
          description: Agent types that are being monitored
          type: string
          x-okta-known-values:
          - AD
          - IWA
          - LDAP
          - MFA
          - OPP
          - RUM
          - Radius
        updateMessage:
          type: string
        updateStatus:
          description: Status for one agent regarding the status to auto-update that
            agent
          type: string
          x-okta-known-values:
          - Cancelled
          - Failed
          - InProgress
          - PendingCompletion
          - Scheduled
          - Success
        version:
          type: string
        _links:
          $ref: '#/components/schemas/HrefObject'
      type: object
    AgentPool:
      description: "An AgentPool is a collection of agents that serve a common purpose.\
        \ An AgentPool has a unique ID within an org, and contains a collection of\
        \ agents disjoint to every other AgentPool (i.e. no two AgentPools share an\
        \ Agent)."
      example:
        operationalStatus: operationalStatus
        name: name
        id: id
        type: type
        agents:
        - operationalStatus: operationalStatus
          isLatestGAedVersion: true
          _links:
            hints:
              allow:
              - null
              - null
            href: href
          updateStatus: updateStatus
          name: name
          poolId: poolId
          id: id
          type: type
          version: version
          updateMessage: updateMessage
          isHidden: true
          lastConnection: 2000-01-23T04:56:07.000+00:00
        - operationalStatus: operationalStatus
          isLatestGAedVersion: true
          _links:
            hints:
              allow:
              - null
              - null
            href: href
          updateStatus: updateStatus
          name: name
          poolId: poolId
          id: id
          type: type
          version: version
          updateMessage: updateMessage
          isHidden: true
          lastConnection: 2000-01-23T04:56:07.000+00:00
      properties:
        agents:
          items:
            $ref: '#/components/schemas/Agent'
          type: array
        id:
          readOnly: true
          type: string
        name:
          type: string
        operationalStatus:
          description: Operational status of a given agent
          type: string
          x-okta-known-values:
          - DEGRADED
          - DISRUPTED
          - INACTIVE
          - OPERATIONAL
        type:
          description: Agent types that are being monitored
          type: string
          x-okta-known-values:
          - AD
          - IWA
          - LDAP
          - MFA
          - OPP
          - RUM
          - Radius
      type: object
    AgentPoolUpdate:
      description: Various information about agent auto update configuration
      example:
        reason: reason
        schedule:
          cron: cron
          duration: 6
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          delay: 0
          timezone: timezone
        agentType: agentType
        notifyAdmin: true
        _links:
          hints:
            allow:
            - null
            - null
          href: href
        sortOrder: 1
        name: name
        id: id
        enabled: true
        agents:
        - operationalStatus: operationalStatus
          isLatestGAedVersion: true
          _links:
            hints:
              allow:
              - null
              - null
            href: href
          updateStatus: updateStatus
          name: name
          poolId: poolId
          id: id
          type: type
          version: version
          updateMessage: updateMessage
          isHidden: true
          lastConnection: 2000-01-23T04:56:07.000+00:00
        - operationalStatus: operationalStatus
          isLatestGAedVersion: true
          _links:
            hints:
              allow:
              - null
              - null
            href: href
          updateStatus: updateStatus
          name: name
          poolId: poolId
          id: id
          type: type
          version: version
          updateMessage: updateMessage
          isHidden: true
          lastConnection: 2000-01-23T04:56:07.000+00:00
        status: status
        targetVersion: targetVersion
      properties:
        agents:
          items:
            $ref: '#/components/schemas/Agent'
          type: array
        agentType:
          description: Agent types that are being monitored
          type: string
          x-okta-known-values:
          - AD
          - IWA
          - LDAP
          - MFA
          - OPP
          - RUM
          - Radius
        enabled:
          type: boolean
        id:
          readOnly: true
          type: string
        name:
          type: string
        notifyAdmin:
          type: boolean
        reason:
          type: string
        schedule:
          $ref: '#/components/schemas/AutoUpdateSchedule'
        sortOrder:
          type: integer
        status:
          description: Overall state for the auto-update job from admin perspective
          type: string
          x-okta-known-values:
          - Cancelled
          - Failed
          - InProgress
          - Paused
          - Scheduled
          - Success
        targetVersion:
          type: string
        _links:
          $ref: '#/components/schemas/HrefObject'
      type: object
    AgentPoolUpdateSetting:
      description: Setting for auto-update
      example:
        releaseChannel: releaseChannel
        agentType: agentType
        latestVersion: latestVersion
        poolId: poolId
        continueOnError: true
        minimalSupportedVersion: minimalSupportedVersion
        poolName: poolName
      properties:
        agentType:
          description: Agent types that are being monitored
          type: string
          x-okta-known-values:
          - AD
          - IWA
          - LDAP
          - MFA
          - OPP
          - RUM
          - Radius
        continueOnError:
          type: boolean
        latestVersion:
          type: string
        minimalSupportedVersion:
          type: string
        poolId:
          readOnly: true
          type: string
        poolName:
          type: string
        releaseChannel:
          description: Release channel for auto-update
          type: string
          x-okta-known-values:
          - BETA
          - EA
          - GA
          - TEST
      type: object
    AgentType:
      description: Agent types that are being monitored
      type: string
      x-okta-known-values:
      - AD
      - IWA
      - LDAP
      - MFA
      - OPP
      - RUM
      - Radius
    AgentUpdateInstanceStatus:
      description: Status for one agent regarding the status to auto-update that agent
      type: string
      x-okta-known-values:
      - Cancelled
      - Failed
      - InProgress
      - PendingCompletion
      - Scheduled
      - Success
    AgentUpdateJobStatus:
      description: Overall state for the auto-update job from admin perspective
      type: string
      x-okta-known-values:
      - Cancelled
      - Failed
      - InProgress
      - Paused
      - Scheduled
      - Success
    AllowedForEnum:
      type: string
      x-okta-known-values:
      - any
      - none
      - recovery
      - sso
    ApiToken:
      description: An API token for an Okta User. This token is NOT scoped any further
        and can be used for any API the user has permissions to call.
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        tokenWindow: tokenWindow
        _link:
          self:
            hints:
              allow:
              - null
              - null
            href: href
        clientName: clientName
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        userId: userId
        expiresAt: 2000-01-23T04:56:07.000+00:00
      properties:
        clientName:
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        tokenWindow:
          description: "A time duration specified as an [ISO-8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations)."
          pattern: ^P(?!$)(\d+Y)?(\d+M)?(\d+W)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+S)?)?$
          type: string
        userId:
          type: string
        _link:
          $ref: '#/components/schemas/ApiToken__link'
      required:
      - name
      title: API Token
      type: object
    AppAndInstanceConditionEvaluatorAppOrInstance:
      properties:
        id:
          readOnly: true
          type: string
        name:
          type: string
        type:
          type: string
          x-okta-known-values:
          - APP
          - APP_TYPE
      type: object
    AppAndInstancePolicyRuleCondition:
      properties:
        exclude:
          items:
            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'
          type: array
        include:
          items:
            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'
          type: array
      type: object
    AppAndInstanceType:
      type: string
      x-okta-known-values:
      - APP
      - APP_TYPE
    AppInstancePolicyRuleCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
    AppLink:
      example:
        appInstanceId: appInstanceId
        credentialsSetup: true
        hidden: true
        appName: appName
        appAssignmentId: appAssignmentId
        sortOrder: 0
        linkUrl: linkUrl
        id: id
        label: label
        logoUrl: logoUrl
      properties:
        appAssignmentId:
          readOnly: true
          type: string
        appInstanceId:
          readOnly: true
          type: string
        appName:
          readOnly: true
          type: string
        credentialsSetup:
          readOnly: true
          type: boolean
        hidden:
          readOnly: true
          type: boolean
        id:
          readOnly: true
          type: string
        label:
          readOnly: true
          type: string
        linkUrl:
          readOnly: true
          type: string
        logoUrl:
          readOnly: true
          type: string
        sortOrder:
          readOnly: true
          type: integer
      type: object
    AppUser:
      example:
        credentials:
          password:
            value: value
          userName: userName
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          key: "{}"
        syncState: syncState
        externalId: externalId
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        passwordChanged: 2000-01-23T04:56:07.000+00:00
        lastSync: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: "{}"
        scope: scope
        statusChanged: 2000-01-23T04:56:07.000+00:00
        id: id
        status: status
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/AppUserCredentials'
        externalId:
          readOnly: true
          type: string
        id:
          readOnly: false
          type: string
        lastSync:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        passwordChanged:
          format: date-time
          readOnly: true
          type: string
        profile:
          additionalProperties:
            properties: {}
            type: object
          type: object
        scope:
          type: string
        status:
          readOnly: true
          type: string
        statusChanged:
          format: date-time
          readOnly: true
          type: string
        syncState:
          readOnly: true
          type: string
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    AppUserCredentials:
      example:
        password:
          value: value
        userName: userName
      properties:
        password:
          $ref: '#/components/schemas/AppUserPasswordCredential'
        userName:
          type: string
      type: object
    AppUserPasswordCredential:
      example:
        value: value
      properties:
        value:
          format: password
          type: string
      type: object
    Application:
      discriminator:
        mapping:
          AUTO_LOGIN: '#/components/schemas/AutoLoginApplication'
          BASIC_AUTH: '#/components/schemas/BasicAuthApplication'
          BOOKMARK: '#/components/schemas/BookmarkApplication'
          BROWSER_PLUGIN: '#/components/schemas/BrowserPluginApplication'
          OPENID_CONNECT: '#/components/schemas/OpenIdConnectApplication'
          SAML_1_1: '#/components/schemas/SamlApplication'
          SAML_2_0: '#/components/schemas/SamlApplication'
          SECURE_PASSWORD_STORE: '#/components/schemas/SecurePasswordStoreApplication'
          WS_FEDERATION: '#/components/schemas/WsFederationApplication'
        propertyName: signOnMode
      properties:
        accessibility:
          $ref: '#/components/schemas/ApplicationAccessibility'
        created:
          format: date-time
          readOnly: true
          type: string
        features:
          items:
            type: string
          type: array
        id:
          readOnly: true
          type: string
        label:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        licensing:
          $ref: '#/components/schemas/ApplicationLicensing'
        profile:
          additionalProperties:
            properties: {}
            type: object
          type: object
        signOnMode:
          type: string
          x-okta-known-values:
          - AUTO_LOGIN
          - BASIC_AUTH
          - BOOKMARK
          - BROWSER_PLUGIN
          - OPENID_CONNECT
          - SAML_1_1
          - SAML_2_0
          - SECURE_PASSWORD_STORE
          - WS_FEDERATION
        status:
          readOnly: true
          type: string
          x-okta-known-values:
          - ACTIVE
          - DELETED
          - INACTIVE
        visibility:
          $ref: '#/components/schemas/ApplicationVisibility'
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties: {}
          readOnly: true
          type: object
      type: object
    ApplicationAccessibility:
      properties:
        errorRedirectUrl:
          type: string
        loginRedirectUrl:
          type: string
        selfService:
          type: boolean
      type: object
    ApplicationCredentials:
      properties:
        signing:
          $ref: '#/components/schemas/ApplicationCredentialsSigning'
        userNameTemplate:
          $ref: '#/components/schemas/ApplicationCredentialsUsernameTemplate'
      type: object
    ApplicationCredentialsOAuthClient:
      properties:
        autoKeyRotation:
          type: boolean
        client_id:
          type: string
        client_secret:
          type: string
        token_endpoint_auth_method:
          type: string
          x-okta-known-values:
          - client_secret_basic
          - client_secret_jwt
          - client_secret_post
          - none
          - private_key_jwt
      type: object
    ApplicationCredentialsScheme:
      type: string
      x-okta-known-values:
      - ADMIN_SETS_CREDENTIALS
      - EDIT_PASSWORD_ONLY
      - EDIT_USERNAME_AND_PASSWORD
      - EXTERNAL_PASSWORD_SYNC
      - SHARED_USERNAME_AND_PASSWORD
    ApplicationCredentialsSigning:
      properties:
        kid:
          type: string
        lastRotated:
          format: date-time
          readOnly: true
          type: string
        nextRotation:
          format: date-time
          readOnly: true
          type: string
        rotationMode:
          type: string
        use:
          type: string
          x-okta-known-values:
          - sig
      type: object
    ApplicationCredentialsSigningUse:
      type: string
      x-okta-known-values:
      - sig
    ApplicationCredentialsUsernameTemplate:
      properties:
        pushStatus:
          type: string
        suffix:
          type: string
        template:
          type: string
        type:
          type: string
      type: object
    ApplicationFeature:
      example:
        capabilities:
          create:
            lifecycleCreate:
              status: status
          update:
            password:
              seed: seed
              change: change
              status: status
            profile:
              status: status
            lifecycleDeactivate:
              status: status
        _links:
          key: "{}"
        name: name
        description: description
        status: status
      properties:
        capabilities:
          $ref: '#/components/schemas/CapabilitiesObject'
        description:
          type: string
        name:
          type: string
        status:
          type: string
          x-okta-known-values:
          - DISABLED
          - ENABLED
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
      type: object
    ApplicationGroupAssignment:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        profile:
          key: "{}"
        id: id
        priority: 0
      properties:
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        priority:
          type: integer
        profile:
          additionalProperties:
            properties: {}
            type: object
          type: object
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    ApplicationLayout:
      example:
        elements:
        - null
        - null
        scope: scope
        options:
          key: ""
        rule:
          condition:
            schema:
              key: ""
            scope: scope
          effect: effect
        label: label
        type: type
      properties:
        elements:
          items:
            $ref: '#/components/schemas/ApplicationLayoutElements'
          type: array
        label:
          type: string
        options:
          additionalProperties: {}
          type: object
        rule:
          $ref: '#/components/schemas/ApplicationLayout_rule'
        scope:
          type: string
        type:
          type: string
      type: object
    ApplicationLayoutElements:
      additionalProperties: true
      type: object
    ApplicationLayoutRuleCondition:
      example:
        schema:
          key: ""
        scope: scope
      properties:
        schema:
          additionalProperties: {}
          type: object
        scope:
          type: string
      type: object
    ApplicationLicensing:
      properties:
        seatCount:
          type: integer
      type: object
    ApplicationLifecycleStatus:
      readOnly: true
      type: string
      x-okta-known-values:
      - ACTIVE
      - DELETED
      - INACTIVE
    ApplicationSettings:
      properties:
        identityStoreId:
          type: string
        implicitAssignment:
          type: boolean
        inlineHookId:
          type: string
        notes:
          $ref: '#/components/schemas/ApplicationSettingsNotes'
        notifications:
          $ref: '#/components/schemas/ApplicationSettingsNotifications'
      type: object
    ApplicationSettingsNotes:
      properties:
        admin:
          type: string
        enduser:
          type: string
      type: object
    ApplicationSettingsNotifications:
      properties:
        vpn:
          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpn'
      type: object
    ApplicationSettingsNotificationsVpn:
      properties:
        helpUrl:
          type: string
        message:
          type: string
        network:
          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpnNetwork'
      type: object
    ApplicationSettingsNotificationsVpnNetwork:
      properties:
        connection:
          type: string
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
    ApplicationSignOnMode:
      type: string
      x-okta-known-values:
      - AUTO_LOGIN
      - BASIC_AUTH
      - BOOKMARK
      - BROWSER_PLUGIN
      - OPENID_CONNECT
      - SAML_1_1
      - SAML_2_0
      - SECURE_PASSWORD_STORE
      - WS_FEDERATION
    ApplicationVisibility:
      properties:
        appLinks:
          additionalProperties:
            type: boolean
          type: object
        autoLaunch:
          type: boolean
        autoSubmitToolbar:
          type: boolean
        hide:
          $ref: '#/components/schemas/ApplicationVisibilityHide'
      type: object
    ApplicationVisibilityHide:
      properties:
        iOS:
          type: boolean
        web:
          type: boolean
      type: object
    AssignRoleRequest:
      example:
        type: type
      properties:
        type:
          type: string
          x-okta-known-values:
          - API_ACCESS_MANAGEMENT_ADMIN
          - APP_ADMIN
          - GROUP_MEMBERSHIP_ADMIN
          - HELP_DESK_ADMIN
          - MOBILE_ADMIN
          - ORG_ADMIN
          - READ_ONLY_ADMIN
          - REPORT_ADMIN
          - SUPER_ADMIN
          - USER_ADMIN
      type: object
    AuthenticationProvider:
      example:
        name: name
        type: type
      properties:
        name:
          type: string
        type:
          type: string
          x-okta-known-values:
          - ACTIVE_DIRECTORY
          - FEDERATION
          - IMPORT
          - LDAP
          - OKTA
          - SOCIAL
      type: object
    AuthenticationProviderType:
      type: string
      x-okta-known-values:
      - ACTIVE_DIRECTORY
      - FEDERATION
      - IMPORT
      - LDAP
      - OKTA
      - SOCIAL
    Authenticator:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        settings:
          appInstanceId: appInstanceId
          allowedFor: allowedFor
          userVerification: userVerification
          channelBinding:
            style: style
            required: required
          compliance:
            fips: fips
          tokenLifetimeInMinutes: 6
        provider:
          configuration:
            hostName: hostName
            instanceId: instanceId
            authPort: 0
            userNameTemplate:
              template: template
            sharedSecret: sharedSecret
          type: type
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        type: type
        key: key
        status: status
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        key:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        provider:
          $ref: '#/components/schemas/AuthenticatorProvider'
        settings:
          $ref: '#/components/schemas/AuthenticatorSettings'
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        type:
          type: string
          x-okta-known-values:
          - app
          - email
          - federated
          - password
          - phone
          - security_key
          - security_question
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
      type: object
    AuthenticatorProvider:
      example:
        configuration:
          hostName: hostName
          instanceId: instanceId
          authPort: 0
          userNameTemplate:
            template: template
          sharedSecret: sharedSecret
        type: type
      properties:
        configuration:
          $ref: '#/components/schemas/AuthenticatorProviderConfiguration'
        type:
          type: string
    AuthenticatorProviderConfiguration:
      example:
        hostName: hostName
        instanceId: instanceId
        authPort: 0
        userNameTemplate:
          template: template
        sharedSecret: sharedSecret
      properties:
        authPort:
          type: integer
        hostName:
          type: string
        instanceId:
          type: string
        sharedSecret:
          type: string
        userNameTemplate:
          $ref: '#/components/schemas/AuthenticatorProviderConfigurationUserNameTemplate'
    AuthenticatorProviderConfigurationUserNameTemplate:
      example:
        template: template
      properties:
        template:
          type: string
    AuthenticatorSettings:
      example:
        appInstanceId: appInstanceId
        allowedFor: allowedFor
        userVerification: userVerification
        channelBinding:
          style: style
          required: required
        compliance:
          fips: fips
        tokenLifetimeInMinutes: 6
      properties:
        allowedFor:
          type: string
          x-okta-known-values:
          - any
          - none
          - recovery
          - sso
        appInstanceId:
          type: string
        channelBinding:
          $ref: '#/components/schemas/ChannelBinding'
        compliance:
          $ref: '#/components/schemas/Compliance'
        tokenLifetimeInMinutes:
          type: integer
        userVerification:
          type: string
          x-okta-known-values:
          - PREFERRED
          - REQUIRED
      type: object
    AuthenticatorStatus:
      type: string
      x-okta-known-values:
      - ACTIVE
      - INACTIVE
    AuthenticatorType:
      type: string
      x-okta-known-values:
      - app
      - email
      - federated
      - password
      - phone
      - security_key
      - security_question
    AuthorizationServer:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        credentials:
          signing:
            nextRotation: 2000-01-23T04:56:07.000+00:00
            use: use
            kid: kid
            rotationMode: rotationMode
            lastRotated: 2000-01-23T04:56:07.000+00:00
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        audiences:
        - audiences
        - audiences
        description: description
        id: id
        issuer: issuer
        issuerMode: issuerMode
        status: status
      properties:
        audiences:
          items:
            type: string
          type: array
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/AuthorizationServerCredentials'
        description:
          type: string
        id:
          readOnly: true
          type: string
        issuer:
          type: string
        issuerMode:
          type: string
          x-okta-known-values:
          - CUSTOM_URL
          - DYNAMIC
          - ORG_URL
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    AuthorizationServerCredentials:
      example:
        signing:
          nextRotation: 2000-01-23T04:56:07.000+00:00
          use: use
          kid: kid
          rotationMode: rotationMode
          lastRotated: 2000-01-23T04:56:07.000+00:00
      properties:
        signing:
          $ref: '#/components/schemas/AuthorizationServerCredentialsSigningConfig'
      type: object
    AuthorizationServerCredentialsRotationMode:
      type: string
      x-okta-known-values:
      - AUTO
      - MANUAL
    AuthorizationServerCredentialsSigningConfig:
      example:
        nextRotation: 2000-01-23T04:56:07.000+00:00
        use: use
        kid: kid
        rotationMode: rotationMode
        lastRotated: 2000-01-23T04:56:07.000+00:00
      properties:
        kid:
          type: string
        lastRotated:
          format: date-time
          readOnly: true
          type: string
        nextRotation:
          format: date-time
          readOnly: true
          type: string
        rotationMode:
          type: string
          x-okta-known-values:
          - AUTO
          - MANUAL
        use:
          type: string
          x-okta-known-values:
          - sig
      type: object
    AuthorizationServerCredentialsUse:
      type: string
      x-okta-known-values:
      - sig
    AuthorizationServerPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - $ref: '#/components/schemas/AccessPolicy_allOf'
    AuthorizationServerPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - $ref: '#/components/schemas/AuthorizationServerPolicyRule_allOf'
    AuthorizationServerPolicyRuleActions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleActions'
      - $ref: '#/components/schemas/AuthorizationServerPolicyRuleActions_allOf'
    AuthorizationServerPolicyRuleConditions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleConditions'
      - $ref: '#/components/schemas/AuthorizationServerPolicyRuleConditions_allOf'
    AutoLoginApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - $ref: '#/components/schemas/AutoLoginApplication_allOf'
    AutoLoginApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - $ref: '#/components/schemas/AutoLoginApplicationSettings_allOf'
    AutoLoginApplicationSettingsSignOn:
      properties:
        loginUrl:
          type: string
        redirectUrl:
          type: string
      type: object
    AutoUpdateSchedule:
      description: The schedule of auto-update configured by admin.
      example:
        cron: cron
        duration: 6
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        delay: 0
        timezone: timezone
      properties:
        cron:
          type: string
        delay:
          description: delay in days
          type: integer
        duration:
          description: duration in minutes
          type: integer
        lastUpdated:
          description: "last time when the updated finished (success or failed, exclude\
            \ cancelled), null if job haven't finished once yet."
          format: date-time
          type: string
        timezone:
          type: string
      type: object
    BaseEmailDomain:
      properties:
        displayName:
          type: string
        userName:
          type: string
      required:
      - displayName
      - userName
      type: object
    BasicApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - $ref: '#/components/schemas/BasicApplicationSettings_allOf'
    BasicApplicationSettingsApplication:
      properties:
        authURL:
          type: string
        url:
          type: string
      type: object
    BasicAuthApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - $ref: '#/components/schemas/BasicAuthApplication_allOf'
      x-okta-defined-as:
        name: template_basic_auth
    BeforeScheduledActionPolicyRuleCondition:
      properties:
        duration:
          $ref: '#/components/schemas/Duration'
        lifecycleAction:
          $ref: '#/components/schemas/ScheduledUserLifecycleAction'
      type: object
    BehaviorRule:
      discriminator:
        mapping:
          ANOMALOUS_LOCATION: '#/components/schemas/BehaviorRuleAnomalousLocation'
          ANOMALOUS_IP: '#/components/schemas/BehaviorRuleAnomalousIP'
          ANOMALOUS_DEVICE: '#/components/schemas/BehaviorRuleAnomalousDevice'
          VELOCITY: '#/components/schemas/BehaviorRuleVelocity'
        propertyName: type
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _link:
          self:
            hints:
              allow:
              - null
              - null
            href: href
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        type: type
        status: status
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          maxLength: 128
          type: string
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        type:
          type: string
          x-okta-known-values:
          - ANOMALOUS_DEVICE
          - ANOMALOUS_IP
          - ANOMALOUS_LOCATION
          - VELOCITY
        _link:
          $ref: '#/components/schemas/ApiToken__link'
      required:
      - name
      - type
      title: Behavior Detection Rule
      type: object
    BehaviorRuleAnomalousDevice:
      allOf:
      - $ref: '#/components/schemas/BehaviorRule'
      - $ref: '#/components/schemas/BehaviorRuleAnomalousDevice_allOf'
    BehaviorRuleAnomalousIP:
      allOf:
      - $ref: '#/components/schemas/BehaviorRule'
      - $ref: '#/components/schemas/BehaviorRuleAnomalousIP_allOf'
    BehaviorRuleAnomalousLocation:
      allOf:
      - $ref: '#/components/schemas/BehaviorRule'
      - $ref: '#/components/schemas/BehaviorRuleAnomalousLocation_allOf'
    BehaviorRuleSettings:
      title: Behavior Detection Rule Settings
      type: object
    BehaviorRuleSettingsAnomalousDevice:
      allOf:
      - $ref: '#/components/schemas/BehaviorRuleSettingsHistoryBased'
    BehaviorRuleSettingsAnomalousIP:
      allOf:
      - $ref: '#/components/schemas/BehaviorRuleSettingsHistoryBased'
      - $ref: '#/components/schemas/BehaviorRuleSettingsAnomalousIP_allOf'
    BehaviorRuleSettingsAnomalousLocation:
      allOf:
      - $ref: '#/components/schemas/BehaviorRuleSettingsHistoryBased'
      - $ref: '#/components/schemas/BehaviorRuleSettingsAnomalousLocation_allOf'
    BehaviorRuleSettingsHistoryBased:
      allOf:
      - $ref: '#/components/schemas/BehaviorRuleSettings'
      - $ref: '#/components/schemas/Behavior_Detection_Rule_Settings_based_on_Event_History'
    BehaviorRuleSettingsVelocity:
      allOf:
      - $ref: '#/components/schemas/BehaviorRuleSettings'
      - $ref: '#/components/schemas/Behavior_Detection_Rule_Settings_based_on_device_velocity_in_kilometers_per_hour_'
    BehaviorRuleType:
      type: string
      x-okta-known-values:
      - ANOMALOUS_DEVICE
      - ANOMALOUS_IP
      - ANOMALOUS_LOCATION
      - VELOCITY
    BehaviorRuleVelocity:
      allOf:
      - $ref: '#/components/schemas/BehaviorRule'
      - $ref: '#/components/schemas/BehaviorRuleVelocity_allOf'
    BookmarkApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - $ref: '#/components/schemas/BookmarkApplication_allOf'
      x-okta-defined-as:
        name: bookmark
    BookmarkApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - $ref: '#/components/schemas/BookmarkApplicationSettings_allOf'
    BookmarkApplicationSettingsApplication:
      properties:
        requestIntegration:
          type: boolean
        url:
          type: string
      type: object
    BouncesRemoveListError:
      example:
        reason: reason
        emailAddress: emailAddress
      properties:
        emailAddress:
          type: string
        reason:
          type: string
      type: object
    BouncesRemoveListObj:
      example:
        emailAddresses:
        - emailAddresses
        - emailAddresses
      properties:
        emailAddresses:
          items:
            type: string
          type: array
      type: object
    BouncesRemoveListResult:
      example:
        errors:
        - reason: reason
          emailAddress: emailAddress
        - reason: reason
          emailAddress: emailAddress
      properties:
        errors:
          items:
            $ref: '#/components/schemas/BouncesRemoveListError'
          type: array
      type: object
    Brand:
      example:
        agreeToCustomPrivacyPolicy: true
        defaultApp:
          appInstanceId: appInstanceId
          appLinkName: appLinkName
        optOutOfUserCommunications: true
        removePoweredByOkta: true
        _links:
          key: "{}"
        id: id
        displayLanguage: displayLanguage
        customPrivacyPolicyUrl: customPrivacyPolicyUrl
      properties:
        agreeToCustomPrivacyPolicy:
          type: boolean
        customPrivacyPolicyUrl:
          type: string
        defaultApp:
          $ref: '#/components/schemas/Brand_defaultApp'
        displayLanguage:
          description: "The language specified as an [IETF BCP 47 language tag](https://datatracker.ietf.org/doc/html/rfc5646)."
          type: string
        id:
          readOnly: true
          type: string
        optOutOfUserCommunications:
          type: boolean
        removePoweredByOkta:
          type: boolean
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
      type: object
    BrowserPluginApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - $ref: '#/components/schemas/BrowserPluginApplication_allOf'
    CAPTCHAInstance:
      description: ""
      example:
        siteKey: siteKey
        secretKey: secretKey
        _link:
          self:
            hints:
              allow:
              - null
              - null
            href: href
        name: name
        id: id
        type: type
      properties:
        id:
          readOnly: true
          type: string
        name:
          type: string
        secretKey:
          type: string
          writeOnly: true
        siteKey:
          type: string
        type:
          type: string
          x-okta-known-values:
          - HCAPTCHA
          - RECAPTCHA_V2
        _link:
          $ref: '#/components/schemas/ApiToken__link'
      title: CAPTCHAInstance
      type: object
    CAPTCHAType:
      type: string
      x-okta-known-values:
      - HCAPTCHA
      - RECAPTCHA_V2
    CallUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - $ref: '#/components/schemas/CallUserFactor_allOf'
    CallUserFactorProfile:
      properties:
        phoneExtension:
          type: string
        phoneNumber:
          type: string
      type: object
    CapabilitiesCreateObject:
      example:
        lifecycleCreate:
          status: status
      properties:
        lifecycleCreate:
          $ref: '#/components/schemas/LifecycleCreateSettingObject'
      type: object
    CapabilitiesObject:
      example:
        create:
          lifecycleCreate:
            status: status
        update:
          password:
            seed: seed
            change: change
            status: status
          profile:
            status: status
          lifecycleDeactivate:
            status: status
      properties:
        create:
          $ref: '#/components/schemas/CapabilitiesCreateObject'
        update:
          $ref: '#/components/schemas/CapabilitiesUpdateObject'
      type: object
    CapabilitiesUpdateObject:
      example:
        password:
          seed: seed
          change: change
          status: status
        profile:
          status: status
        lifecycleDeactivate:
          status: status
      properties:
        lifecycleDeactivate:
          $ref: '#/components/schemas/LifecycleDeactivateSettingObject'
        password:
          $ref: '#/components/schemas/PasswordSettingObject'
        profile:
          $ref: '#/components/schemas/ProfileSettingObject'
      type: object
    CatalogApplication:
      example:
        features:
        - features
        - features
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        website: website
        verificationStatus: verificationStatus
        _links:
          key: "{}"
        displayName: displayName
        name: name
        description: description
        id: id
        category: category
        signOnModes:
        - signOnModes
        - signOnModes
        status: status
      properties:
        category:
          type: string
        description:
          type: string
        displayName:
          type: string
        features:
          items:
            type: string
          type: array
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        signOnModes:
          items:
            type: string
          type: array
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        verificationStatus:
          type: string
        website:
          type: string
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    CatalogApplicationStatus:
      type: string
      x-okta-known-values:
      - ACTIVE
      - INACTIVE
    ChangeEnum:
      type: string
      x-okta-known-values:
      - CHANGE
      - KEEP_EXISTING
    ChangePasswordRequest:
      example:
        oldPassword:
          hook:
            type: type
          value: value
          hash:
            salt: salt
            saltOrder: saltOrder
            workFactor: 0
            value: value
            algorithm: algorithm
        newPassword:
          hook:
            type: type
          value: value
          hash:
            salt: salt
            saltOrder: saltOrder
            workFactor: 0
            value: value
            algorithm: algorithm
      properties:
        newPassword:
          $ref: '#/components/schemas/PasswordCredential'
        oldPassword:
          $ref: '#/components/schemas/PasswordCredential'
      type: object
    ChannelBinding:
      example:
        style: style
        required: required
      properties:
        required:
          type: string
          x-okta-known-values:
          - ALWAYS
          - HIGH_RISK_ONLY
          - NEVER
        style:
          type: string
      type: object
    ClientPolicyCondition:
      properties:
        include:
          items:
            type: string
          type: array
      type: object
    Compliance:
      example:
        fips: fips
      properties:
        fips:
          type: string
          x-okta-known-values:
          - OPTIONAL
          - REQUIRED
      type: object
    ContextPolicyRuleCondition:
      allOf:
      - $ref: '#/components/schemas/DevicePolicyRuleCondition'
      - $ref: '#/components/schemas/ContextPolicyRuleCondition_allOf'
    CreateSessionRequest:
      example:
        sessionToken: sessionToken
      properties:
        sessionToken:
          type: string
      type: object
    CreateUserRequest:
      example:
        credentials:
          password:
            hook:
              type: type
            value: value
            hash:
              salt: salt
              saltOrder: saltOrder
              workFactor: 0
              value: value
              algorithm: algorithm
          provider:
            name: name
            type: type
          recovery_question:
            answer: answer
            question: question
        groupIds:
        - groupIds
        - groupIds
        profile:
          profileUrl: profileUrl
          lastName: lastName
          zipCode: zipCode
          preferredLanguage: preferredLanguage
          city: city
          displayName: displayName
          timezone: timezone
          locale: locale
          login: login
          title: title
          employeeNumber: employeeNumber
          division: division
          honorificSuffix: honorificSuffix
          countryCode: countryCode
          state: state
          department: department
          email: email
          manager: manager
          costCenter: costCenter
          nickName: nickName
          secondEmail: secondEmail
          honorificPrefix: honorificPrefix
          managerId: managerId
          firstName: firstName
          primaryPhone: primaryPhone
          postalAddress: postalAddress
          mobilePhone: mobilePhone
          streetAddress: streetAddress
          organization: organization
          middleName: middleName
          userType: userType
        type:
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          lastUpdatedBy: lastUpdatedBy
          default: true
          createdBy: createdBy
          _links:
            key: "{}"
          created: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          name: name
          description: description
          id: id
      properties:
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        groupIds:
          items:
            type: string
          type: array
        profile:
          $ref: '#/components/schemas/UserProfile'
        type:
          $ref: '#/components/schemas/UserType'
      required:
      - profile
      type: object
    Csr:
      example:
        kty: kty
        csr: csr
        created: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        csr:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        kty:
          readOnly: true
          type: string
      type: object
    CsrMetadata:
      example:
        subject:
          commonName: commonName
          localityName: localityName
          organizationName: organizationName
          organizationalUnitName: organizationalUnitName
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
        subjectAltNames:
          dnsNames:
          - dnsNames
          - dnsNames
      properties:
        subject:
          $ref: '#/components/schemas/CsrMetadataSubject'
        subjectAltNames:
          $ref: '#/components/schemas/CsrMetadataSubjectAltNames'
      type: object
    CsrMetadataSubject:
      example:
        commonName: commonName
        localityName: localityName
        organizationName: organizationName
        organizationalUnitName: organizationalUnitName
        countryName: countryName
        stateOrProvinceName: stateOrProvinceName
      properties:
        commonName:
          type: string
        countryName:
          type: string
        localityName:
          type: string
        organizationalUnitName:
          type: string
        organizationName:
          type: string
        stateOrProvinceName:
          type: string
      type: object
    CsrMetadataSubjectAltNames:
      example:
        dnsNames:
        - dnsNames
        - dnsNames
      properties:
        dnsNames:
          items:
            type: string
          type: array
      type: object
    CustomHotpUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - $ref: '#/components/schemas/CustomHotpUserFactor_allOf'
    CustomHotpUserFactorProfile:
      properties:
        sharedSecret:
          type: string
      type: object
    CustomizablePage:
      example:
        pageContent: pageContent
      properties:
        pageContent:
          type: string
      required:
      - pageContent
      type: object
    DNSRecord:
      example:
        fqdn: fqdn
        recordType: recordType
        values:
        - values
        - values
        expiration: expiration
      properties:
        expiration:
          type: string
        fqdn:
          type: string
        recordType:
          type: string
          x-okta-known-values:
          - CNAME
          - TXT
        values:
          items:
            type: string
          type: array
      type: object
    DNSRecordType:
      type: string
      x-okta-known-values:
      - CNAME
      - TXT
    DeviceAccessPolicyRuleCondition:
      allOf:
      - $ref: '#/components/schemas/DevicePolicyRuleCondition'
      - $ref: '#/components/schemas/DeviceAccessPolicyRuleCondition_allOf'
    DeviceAssurance:
      example:
        lastUpdatedBy: lastUpdatedBy
        _links:
          self:
            hints:
              allow:
              - null
              - null
            href: href
        platform: platform
        lastUpdatedDate: lastUpdatedDate
        createdDate: createdDate
        osVersion:
          minimum: minimum
        createdBy: createdBy
        name: name
        jailbreak: true
        diskEncryptionType:
          include:
          - null
          - null
        id: id
        screenLockType:
          include:
          - null
          - null
        secureHardwarePresent: true
      properties:
        createdBy:
          readOnly: true
          type: string
        createdDate:
          readOnly: true
          type: string
        diskEncryptionType:
          $ref: '#/components/schemas/DeviceAssurance_diskEncryptionType'
        id:
          readOnly: true
          type: string
        jailbreak:
          type: boolean
        lastUpdatedBy:
          readOnly: true
          type: string
        lastUpdatedDate:
          readOnly: true
          type: string
        name:
          description: Display name of the Device Assurance Policy
          type: string
        osVersion:
          $ref: '#/components/schemas/VersionObject'
        platform:
          type: string
          x-okta-known-values:
          - ANDROID
          - IOS
          - MACOS
          - WINDOWS
        screenLockType:
          $ref: '#/components/schemas/DeviceAssurance_screenLockType'
        secureHardwarePresent:
          type: boolean
        _links:
          $ref: '#/components/schemas/ApiToken__link'
      title: DeviceAssurance
      type: object
    DevicePolicyMDMFramework:
      type: string
      x-okta-known-values:
      - AFW
      - NATIVE
      - SAFE
    DevicePolicyPlatformType:
      type: string
      x-okta-known-values:
      - ANDROID
      - IOS
      - OSX
      - WINDOWS
    DevicePolicyRuleCondition:
      properties:
        migrated:
          type: boolean
        platform:
          $ref: '#/components/schemas/DevicePolicyRuleConditionPlatform'
        rooted:
          type: boolean
        trustLevel:
          type: string
          x-okta-known-values:
          - ANY
          - TRUSTED
      type: object
    DevicePolicyRuleConditionPlatform:
      properties:
        supportedMDMFrameworks:
          items:
            $ref: '#/components/schemas/DevicePolicyMDMFramework'
          type: array
        types:
          items:
            $ref: '#/components/schemas/DevicePolicyPlatformType'
          type: array
      type: object
    DevicePolicyTrustLevel:
      type: string
      x-okta-known-values:
      - ANY
      - TRUSTED
    DiskEncryptionType:
      type: string
      x-okta-known-values:
      - ALL_INTERNAL_VOLUMES
      - FULL
      - USER
    Domain:
      example:
        certificateSourceType: certificateSourceType
        dnsRecords:
        - fqdn: fqdn
          recordType: recordType
          values:
          - values
          - values
          expiration: expiration
        - fqdn: fqdn
          recordType: recordType
          values:
          - values
          - values
          expiration: expiration
        domain: domain
        publicCertificate:
          subject: subject
          fingerprint: fingerprint
          expiration: expiration
        id: id
        validationStatus: validationStatus
      properties:
        certificateSourceType:
          type: string
          x-okta-known-values:
          - MANUAL
          - OKTA_MANAGED
        dnsRecords:
          items:
            $ref: '#/components/schemas/DNSRecord'
          type: array
        domain:
          type: string
        id:
          type: string
        publicCertificate:
          $ref: '#/components/schemas/DomainCertificateMetadata'
        validationStatus:
          type: string
          x-okta-known-values:
          - COMPLETED
          - IN_PROGRESS
          - NOT_STARTED
          - VERIFIED
      type: object
    DomainCertificate:
      example:
        privateKey: privateKey
        certificateChain: certificateChain
        certificate: certificate
        type: type
      properties:
        certificate:
          type: string
        certificateChain:
          type: string
        privateKey:
          type: string
        type:
          type: string
          x-okta-known-values:
          - PEM
      type: object
    DomainCertificateMetadata:
      example:
        subject: subject
        fingerprint: fingerprint
        expiration: expiration
      properties:
        expiration:
          type: string
        fingerprint:
          type: string
        subject:
          type: string
      type: object
    DomainCertificateSourceType:
      type: string
      x-okta-known-values:
      - MANUAL
      - OKTA_MANAGED
    DomainCertificateType:
      type: string
      x-okta-known-values:
      - PEM
    DomainLinks:
      example:
        certificate: "{}"
        self: "{}"
        verify: "{}"
      properties:
        certificate:
          properties: {}
          type: object
        self:
          properties: {}
          type: object
        verify:
          properties: {}
          type: object
      type: object
    DomainListResponse:
      example:
        domains:
        - _links:
            certificate: "{}"
            self: "{}"
            verify: "{}"
          certificateSourceType: certificateSourceType
          dnsRecords:
          - fqdn: fqdn
            recordType: recordType
            values:
            - values
            - values
            expiration: expiration
          - fqdn: fqdn
            recordType: recordType
            values:
            - values
            - values
            expiration: expiration
          domain: domain
          publicCertificate:
            subject: subject
            fingerprint: fingerprint
            expiration: expiration
          id: id
          validationStatus: validationStatus
        - _links:
            certificate: "{}"
            self: "{}"
            verify: "{}"
          certificateSourceType: certificateSourceType
          dnsRecords:
          - fqdn: fqdn
            recordType: recordType
            values:
            - values
            - values
            expiration: expiration
          - fqdn: fqdn
            recordType: recordType
            values:
            - values
            - values
            expiration: expiration
          domain: domain
          publicCertificate:
            subject: subject
            fingerprint: fingerprint
            expiration: expiration
          id: id
          validationStatus: validationStatus
      properties:
        domains:
          items:
            $ref: '#/components/schemas/DomainResponse'
          type: array
      type: object
    DomainResponse:
      example:
        _links:
          certificate: "{}"
          self: "{}"
          verify: "{}"
        certificateSourceType: certificateSourceType
        dnsRecords:
        - fqdn: fqdn
          recordType: recordType
          values:
          - values
          - values
          expiration: expiration
        - fqdn: fqdn
          recordType: recordType
          values:
          - values
          - values
          expiration: expiration
        domain: domain
        publicCertificate:
          subject: subject
          fingerprint: fingerprint
          expiration: expiration
        id: id
        validationStatus: validationStatus
      properties:
        certificateSourceType:
          type: string
          x-okta-known-values:
          - MANUAL
          - OKTA_MANAGED
        dnsRecords:
          items:
            $ref: '#/components/schemas/DNSRecord'
          type: array
        domain:
          type: string
        id:
          type: string
        publicCertificate:
          $ref: '#/components/schemas/DomainCertificateMetadata'
        validationStatus:
          type: string
          x-okta-known-values:
          - COMPLETED
          - IN_PROGRESS
          - NOT_STARTED
          - VERIFIED
        _links:
          $ref: '#/components/schemas/DomainLinks'
      type: object
    DomainValidationStatus:
      type: string
      x-okta-known-values:
      - COMPLETED
      - IN_PROGRESS
      - NOT_STARTED
      - VERIFIED
    Duration:
      properties:
        number:
          type: integer
        unit:
          type: string
      type: object
    EmailContent:
      properties:
        body:
          description: "The email's HTML body. May contain [variable references](https://velocity.apache.org/engine/1.7/user-guide.html#references)."
          type: string
        subject:
          description: "The email's subject. May contain [variable references](https://velocity.apache.org/engine/1.7/user-guide.html#references)."
          type: string
      required:
      - body
      - subject
      type: object
    EmailCustomization:
      allOf:
      - $ref: '#/components/schemas/EmailContent'
      - $ref: '#/components/schemas/EmailCustomization_allOf'
    EmailDefaultContent:
      allOf:
      - $ref: '#/components/schemas/EmailContent'
      - $ref: '#/components/schemas/EmailDefaultContent_allOf'
    EmailDomain:
      allOf:
      - $ref: '#/components/schemas/BaseEmailDomain'
      example:
        domain: domain
      properties:
        domain:
          type: string
      required:
      - domain
      type: object
    EmailDomainListResponse:
      example:
        email-domains:
        - dnsValidationRecords:
          - fqdn: fqdn
            recordType: recordType
            values:
            - values
            - values
            expiration: expiration
          - fqdn: fqdn
            recordType: recordType
            values:
            - values
            - values
            expiration: expiration
          domain: domain
          id: id
          validationStatus: validationStatus
        - dnsValidationRecords:
          - fqdn: fqdn
            recordType: recordType
            values:
            - values
            - values
            expiration: expiration
          - fqdn: fqdn
            recordType: recordType
            values:
            - values
            - values
            expiration: expiration
          domain: domain
          id: id
          validationStatus: validationStatus
      properties:
        email-domains:
          items:
            $ref: '#/components/schemas/EmailDomainResponse'
          type: array
      type: object
    EmailDomainResponse:
      allOf:
      - $ref: '#/components/schemas/BaseEmailDomain'
      example:
        dnsValidationRecords:
        - fqdn: fqdn
          recordType: recordType
          values:
          - values
          - values
          expiration: expiration
        - fqdn: fqdn
          recordType: recordType
          values:
          - values
          - values
          expiration: expiration
        domain: domain
        id: id
        validationStatus: validationStatus
      properties:
        dnsValidationRecords:
          items:
            $ref: '#/components/schemas/DNSRecord'
          type: array
        domain:
          type: string
        id:
          type: string
        validationStatus:
          type: string
          x-okta-known-values:
          - DELETED
          - ERROR
          - NOT_STARTED
          - POLLING
          - VERIFIED
      type: object
    EmailDomainStatus:
      type: string
      x-okta-known-values:
      - DELETED
      - ERROR
      - NOT_STARTED
      - POLLING
      - VERIFIED
    EmailPreview:
      example:
        _links:
          template:
            hints:
              allow:
              - null
              - null
            href: href
          contentSource:
            hints:
              allow:
              - null
              - null
            href: href
          defaultContent:
            hints:
              allow:
              - null
              - null
            href: href
          test:
            hints:
              allow:
              - null
              - null
            href: href
          self:
            hints:
              allow:
              - null
              - null
            href: href
        subject: subject
        body: body
      properties:
        body:
          description: The email's HTML body.
          readOnly: true
          type: string
        subject:
          description: The email's subject.
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/EmailPreview__links'
      type: object
    EmailSettings:
      example:
        recipients: ALL_USERS
      properties:
        recipients:
          enum:
          - ALL_USERS
          - ADMINS_ONLY
          - NO_USERS
          type: string
      required:
      - recipients
      type: object
    EmailTemplate:
      example:
        _embedded:
          customizationCount: 0
          settings:
            recipients: ALL_USERS
        _links:
          settings:
            hints:
              allow:
              - null
              - null
            href: href
          defaultContent:
            hints:
              allow:
              - null
              - null
            href: href
          test:
            hints:
              allow:
              - null
              - null
            href: href
          self:
            hints:
              allow:
              - null
              - null
            href: href
          customizations:
            hints:
              allow:
              - null
              - null
            href: href
        name: name
      properties:
        name:
          description: The name of this email template.
          readOnly: true
          type: string
        _embedded:
          $ref: '#/components/schemas/EmailTemplate__embedded'
        _links:
          $ref: '#/components/schemas/EmailTemplate__links'
      type: object
    EmailTemplateTouchPointVariant:
      type: string
      x-okta-known-values:
      - FULL_THEME
      - OKTA_DEFAULT
    EmailUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - $ref: '#/components/schemas/EmailUserFactor_allOf'
    EmailUserFactorProfile:
      properties:
        email:
          type: string
      type: object
    EnabledStatus:
      type: string
      x-okta-known-values:
      - DISABLED
      - ENABLED
    EndUserDashboardTouchPointVariant:
      type: string
      x-okta-known-values:
      - FULL_THEME
      - LOGO_ON_FULL_WHITE_BACKGROUND
      - OKTA_DEFAULT
      - WHITE_LOGO_BACKGROUND
    Error:
      properties:
        errorCauses:
          items:
            $ref: '#/components/schemas/Error_errorCauses_inner'
          type: array
        errorCode:
          description: An Okta code for this type of error
          type: string
        errorId:
          description: A unique identifier for this error. This can be used by Okta
            Support to help with troubleshooting.
          type: string
        errorLink:
          description: An Okta code for this type of error
          type: string
        errorSummary:
          description: A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific error.
          type: string
      title: Error
      type: object
    ErrorPageTouchPointVariant:
      type: string
      x-okta-known-values:
      - BACKGROUND_IMAGE
      - BACKGROUND_SECONDARY_COLOR
      - OKTA_DEFAULT
    EventHook:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        verificationStatus: verificationStatus
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        channel:
          type: type
          config:
            headers:
            - value: value
              key: key
            - value: value
              key: key
            authScheme:
              type: type
              value: value
              key: key
            uri: uri
          version: version
        name: name
        id: id
        events:
          type: type
          items:
          - items
          - items
        status: status
      properties:
        channel:
          $ref: '#/components/schemas/EventHookChannel'
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          type: string
        events:
          $ref: '#/components/schemas/EventSubscriptions'
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        verificationStatus:
          type: string
          x-okta-known-values:
          - UNVERIFIED
          - VERIFIED
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    EventHookChannel:
      example:
        type: type
        config:
          headers:
          - value: value
            key: key
          - value: value
            key: key
          authScheme:
            type: type
            value: value
            key: key
          uri: uri
        version: version
      properties:
        config:
          $ref: '#/components/schemas/EventHookChannelConfig'
        type:
          type: string
          x-okta-known-values:
          - HTTP
        version:
          type: string
      type: object
    EventHookChannelConfig:
      example:
        headers:
        - value: value
          key: key
        - value: value
          key: key
        authScheme:
          type: type
          value: value
          key: key
        uri: uri
      properties:
        authScheme:
          $ref: '#/components/schemas/EventHookChannelConfigAuthScheme'
        headers:
          items:
            $ref: '#/components/schemas/EventHookChannelConfigHeader'
          type: array
        uri:
          type: string
      type: object
    EventHookChannelConfigAuthScheme:
      example:
        type: type
        value: value
        key: key
      properties:
        key:
          type: string
        type:
          type: string
          x-okta-known-values:
          - HEADER
        value:
          type: string
      type: object
    EventHookChannelConfigAuthSchemeType:
      type: string
      x-okta-known-values:
      - HEADER
    EventHookChannelConfigHeader:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    EventHookChannelType:
      type: string
      x-okta-known-values:
      - HTTP
    EventHookVerificationStatus:
      type: string
      x-okta-known-values:
      - UNVERIFIED
      - VERIFIED
    EventSubscriptionType:
      type: string
      x-okta-known-values:
      - EVENT_TYPE
      - FLOW_EVENT
    EventSubscriptions:
      discriminator:
        propertyName: type
      example:
        type: type
        items:
        - items
        - items
      properties:
        items:
          items:
            type: string
          type: array
        type:
          type: string
          x-okta-known-values:
          - EVENT_TYPE
          - FLOW_EVENT
      type: object
    FCMConfiguration:
      properties:
        fileName:
          description: (Optional) File name for Admin Console display
          type: string
        projectId:
          description: Project ID of FCM configuration
          readOnly: true
          type: string
        serviceAccountJson:
          description: "JSON containing the private service account key and service\
            \ account details. See [Creating and managing service account keys](https://cloud.google.com/iam/docs/creating-managing-service-account-keys)\
            \ for more information on creating service account keys in JSON."
          type: object
          writeOnly: true
    FCMPushProvider:
      allOf:
      - $ref: '#/components/schemas/PushProvider'
      - $ref: '#/components/schemas/FCMPushProvider_allOf'
    FactorProvider:
      type: string
      x-okta-known-values:
      - CUSTOM
      - DUO
      - FIDO
      - GOOGLE
      - OKTA
      - RSA
      - SYMANTEC
      - YUBICO
    FactorResultType:
      type: string
      x-okta-known-values:
      - CANCELLED
      - CHALLENGE
      - ERROR
      - FAILED
      - PASSCODE_REPLAYED
      - REJECTED
      - SUCCESS
      - TIMEOUT
      - TIME_WINDOW_EXCEEDED
      - WAITING
    FactorStatus:
      type: string
      x-okta-known-values:
      - ACTIVE
      - DISABLED
      - ENROLLED
      - EXPIRED
      - INACTIVE
      - NOT_SETUP
      - PENDING_ACTIVATION
    FactorType:
      type: string
      x-okta-known-values:
      - call
      - email
      - hotp
      - push
      - question
      - sms
      - token
      - token:hardware
      - token:hotp
      - token:software:totp
      - u2f
      - web
      - webauthn
    Feature:
      example:
        stage:
          state: state
          value: value
        _links:
          key: "{}"
        name: name
        description: description
        id: id
        type: type
        status: status
      properties:
        description:
          type: string
        id:
          readOnly: true
          type: string
        name:
          type: string
        stage:
          $ref: '#/components/schemas/FeatureStage'
        status:
          type: string
          x-okta-known-values:
          - DISABLED
          - ENABLED
        type:
          type: string
          x-okta-known-values:
          - self-service
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    FeatureStage:
      example:
        state: state
        value: value
      properties:
        state:
          type: string
          x-okta-known-values:
          - CLOSED
          - OPEN
        value:
          type: string
          x-okta-known-values:
          - BETA
          - EA
      type: object
    FeatureStageState:
      type: string
      x-okta-known-values:
      - CLOSED
      - OPEN
    FeatureStageValue:
      type: string
      x-okta-known-values:
      - BETA
      - EA
    FeatureType:
      type: string
      x-okta-known-values:
      - self-service
    FipsEnum:
      type: string
      x-okta-known-values:
      - OPTIONAL
      - REQUIRED
    ForgotPasswordResponse:
      example:
        resetPasswordUrl: resetPasswordUrl
      properties:
        resetPasswordUrl:
          readOnly: true
          type: string
      type: object
    GrantOrTokenStatus:
      type: string
      x-okta-known-values:
      - ACTIVE
      - REVOKED
    GrantTypePolicyRuleCondition:
      properties:
        include:
          items:
            type: string
          type: array
      type: object
    Group:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        lastMembershipUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: "{}"
        _links:
          key: ""
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          name: name
          description: description
        objectClass:
        - objectClass
        - objectClass
        id: id
        type: type
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastMembershipUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        objectClass:
          items:
            type: string
          readOnly: true
          type: array
        profile:
          $ref: '#/components/schemas/GroupProfile'
        type:
          type: string
          x-okta-known-values:
          - APP_GROUP
          - BUILT_IN
          - OKTA_GROUP
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties: {}
          readOnly: true
          type: object
      type: object
    GroupCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
    GroupOwner:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        originType: originType
        originId: originId
        displayName: displayName
        id: id
        type: type
        resolved: true
      properties:
        displayName:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        originId:
          type: string
        originType:
          type: string
          x-okta-known-values:
          - APPLICATION
          - OKTA_DIRECTORY
        resolved:
          type: boolean
        type:
          type: string
          x-okta-known-values:
          - GROUP
          - UNKNOWN
          - USER
      type: object
    GroupOwnerOriginType:
      type: string
      x-okta-known-values:
      - APPLICATION
      - OKTA_DIRECTORY
    GroupOwnerType:
      type: string
      x-okta-known-values:
      - GROUP
      - UNKNOWN
      - USER
    GroupPolicyRuleCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
    GroupProfile:
      example:
        name: name
        description: description
      properties:
        description:
          type: string
        name:
          type: string
      type: object
      x-okta-extensible: true
    GroupRule:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        conditions:
          expression:
            type: type
            value: value
          people:
            groups:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
            users:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
        type: type
        actions:
          assignUserToGroups:
            groupIds:
            - groupIds
            - groupIds
        status: status
      properties:
        actions:
          $ref: '#/components/schemas/GroupRuleAction'
        conditions:
          $ref: '#/components/schemas/GroupRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
          - INVALID
        type:
          type: string
      type: object
    GroupRuleAction:
      example:
        assignUserToGroups:
          groupIds:
          - groupIds
          - groupIds
      properties:
        assignUserToGroups:
          $ref: '#/components/schemas/GroupRuleGroupAssignment'
      type: object
    GroupRuleConditions:
      example:
        expression:
          type: type
          value: value
        people:
          groups:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
          users:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
      properties:
        expression:
          $ref: '#/components/schemas/GroupRuleExpression'
        people:
          $ref: '#/components/schemas/GroupRulePeopleCondition'
      type: object
    GroupRuleExpression:
      example:
        type: type
        value: value
      properties:
        type:
          type: string
        value:
          type: string
      type: object
    GroupRuleGroupAssignment:
      example:
        groupIds:
        - groupIds
        - groupIds
      properties:
        groupIds:
          items:
            type: string
          type: array
      type: object
    GroupRuleGroupCondition:
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
    GroupRulePeopleCondition:
      example:
        groups:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
        users:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
      properties:
        groups:
          $ref: '#/components/schemas/GroupRuleGroupCondition'
        users:
          $ref: '#/components/schemas/GroupRuleUserCondition'
      type: object
    GroupRuleStatus:
      type: string
      x-okta-known-values:
      - ACTIVE
      - INACTIVE
      - INVALID
    GroupRuleUserCondition:
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
    GroupSchema:
      example:
        lastUpdated: lastUpdated
        $schema: $schema
        _links:
          key: "{}"
        created: created
        name: name
        description: description
        id: id
        title: title
        type: type
        definitions:
          custom:
            id: id
            type: type
            properties:
              key:
                minLength: 6
                externalNamespace: externalNamespace
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
            required:
            - required
            - required
          base:
            id: id
            type: type
            properties:
              name:
                minLength: 6
                externalNamespace: externalNamespace
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              description:
                minLength: 6
                externalNamespace: externalNamespace
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
            required:
            - required
            - required
        properties:
          profile:
            allOf:
            - $ref: $ref
            - $ref: $ref
      properties:
        $schema:
          readOnly: true
          type: string
        created:
          readOnly: true
          type: string
        definitions:
          $ref: '#/components/schemas/GroupSchemaDefinitions'
        description:
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaProperties'
        title:
          type: string
        type:
          readOnly: true
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
      type: object
      x-okta-allow-null-property-value-for-updates: true
    GroupSchemaAttribute:
      example:
        minLength: 6
        externalNamespace: externalNamespace
        description: description
        union: union
        title: title
        type: type
        enum:
        - enum
        - enum
        required: true
        master:
          priority:
          - type: type
            value: value
          - type: type
            value: value
          type: type
        oneOf:
        - const: const
          title: title
        - const: const
          title: title
        permissions:
        - principal: principal
          action: action
        - principal: principal
          action: action
        externalName: externalName
        scope: scope
        unique: unique
        mutability: mutability
        items:
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          type: type
          enum:
          - enum
          - enum
        maxLength: 0
      properties:
        description:
          type: string
        enum:
          items:
            type: string
          type: array
        externalName:
          type: string
        externalNamespace:
          type: string
        items:
          $ref: '#/components/schemas/UserSchemaAttributeItems'
        master:
          $ref: '#/components/schemas/UserSchemaAttributeMaster'
        maxLength:
          type: integer
        minLength:
          type: integer
        mutability:
          type: string
        oneOf:
          items:
            $ref: '#/components/schemas/UserSchemaAttributeEnum'
          type: array
        permissions:
          items:
            $ref: '#/components/schemas/UserSchemaAttributePermission'
          type: array
        required:
          type: boolean
        scope:
          type: string
          x-okta-known-values:
          - NONE
          - SELF
        title:
          type: string
        type:
          type: string
          x-okta-known-values:
          - array
          - boolean
          - integer
          - number
          - string
        union:
          type: string
          x-okta-known-values:
          - DISABLE
          - ENABLE
        unique:
          type: string
      type: object
    GroupSchemaBase:
      example:
        id: id
        type: type
        properties:
          name:
            minLength: 6
            externalNamespace: externalNamespace
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          description:
            minLength: 6
            externalNamespace: externalNamespace
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
        required:
        - required
        - required
      properties:
        id:
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/GroupSchemaBaseProperties'
        required:
          items:
            type: string
          type: array
        type:
          type: string
      type: object
    GroupSchemaBaseProperties:
      example:
        name:
          minLength: 6
          externalNamespace: externalNamespace
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        description:
          minLength: 6
          externalNamespace: externalNamespace
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
      properties:
        description:
          $ref: '#/components/schemas/GroupSchemaAttribute'
        name:
          $ref: '#/components/schemas/GroupSchemaAttribute'
      type: object
    GroupSchemaCustom:
      example:
        id: id
        type: type
        properties:
          key:
            minLength: 6
            externalNamespace: externalNamespace
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
        required:
        - required
        - required
      properties:
        id:
          readOnly: true
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/GroupSchemaAttribute'
          type: object
        required:
          items:
            type: string
          type: array
        type:
          type: string
      type: object
    GroupSchemaDefinitions:
      example:
        custom:
          id: id
          type: type
          properties:
            key:
              minLength: 6
              externalNamespace: externalNamespace
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
          required:
          - required
          - required
        base:
          id: id
          type: type
          properties:
            name:
              minLength: 6
              externalNamespace: externalNamespace
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            description:
              minLength: 6
              externalNamespace: externalNamespace
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
          required:
          - required
          - required
      properties:
        base:
          $ref: '#/components/schemas/GroupSchemaBase'
        custom:
          $ref: '#/components/schemas/GroupSchemaCustom'
      type: object
    GroupType:
      type: string
      x-okta-known-values:
      - APP_GROUP
      - BUILT_IN
      - OKTA_GROUP
    HardwareUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - $ref: '#/components/schemas/HardwareUserFactor_allOf'
    HardwareUserFactorProfile:
      properties:
        credentialId:
          type: string
      type: object
    HostedPage:
      example:
        type: type
        url: url
      properties:
        type:
          type: string
          x-okta-known-values:
          - EXTERNALLY_HOSTED
          - OKTA_DEFAULT
        url:
          type: string
      required:
      - type
      type: object
    HostedPageType:
      type: string
      x-okta-known-values:
      - EXTERNALLY_HOSTED
      - OKTA_DEFAULT
    HrefObject:
      description: Used for links
      example:
        hints:
          allow:
          - null
          - null
        href: href
      properties:
        hints:
          $ref: '#/components/schemas/HrefObject_hints'
        href:
          type: string
      title: hrefObject
      type: object
    HttpMethod:
      type: string
      x-okta-known-values:
      - DELETE
      - GET
      - POST
      - PUT
    IdentityProvider:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        protocol:
          algorithms:
            request:
              signature:
                scope: scope
                algorithm: algorithm
            response:
              signature:
                scope: scope
                algorithm: algorithm
          relayState:
            format: format
          settings:
            nameFormat: nameFormat
          endpoints:
            acs:
              destination: destination
              binding: binding
              type: type
              url: url
            authorization:
              destination: destination
              binding: binding
              type: type
              url: url
            userInfo:
              destination: destination
              binding: binding
              type: type
              url: url
            metadata:
              destination: destination
              binding: binding
              type: type
              url: url
            jwks:
              destination: destination
              binding: binding
              type: type
              url: url
            slo:
              destination: destination
              binding: binding
              type: type
              url: url
            sso:
              destination: destination
              binding: binding
              type: type
              url: url
            token:
              destination: destination
              binding: binding
              type: type
              url: url
          credentials:
            trust:
              revocation: revocation
              audience: audience
              revocationCacheLifetime: 0
              kid: kid
              issuer: issuer
            client:
              client_secret: client_secret
              client_id: client_id
            signing:
              kid: kid
          scopes:
          - scopes
          - scopes
          type: type
          issuer:
            destination: destination
            binding: binding
            type: type
            url: url
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        type: type
        issuerMode: issuerMode
        policy: null
        status: status
      properties:
        created:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        issuerMode:
          type: string
          x-okta-known-values:
          - CUSTOM_URL
          - DYNAMIC
          - ORG_URL
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        policy:
          $ref: '#/components/schemas/IdentityProviderPolicy'
        protocol:
          $ref: '#/components/schemas/Protocol'
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        type:
          type: string
          x-okta-known-values:
          - AgentlessDSSO
          - FACEBOOK
          - GOOGLE
          - IWA
          - LINKEDIN
          - MICROSOFT
          - OIDC
          - OKTA
          - SAML2
          - X509
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    IdentityProviderApplicationUser:
      example:
        lastUpdated: lastUpdated
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        created: created
        profile:
          key: "{}"
        externalId: externalId
        id: id
      properties:
        created:
          type: string
        externalId:
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          type: string
        profile:
          additionalProperties:
            properties: {}
            type: object
          type: object
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    IdentityProviderCredentials:
      example:
        trust:
          revocation: revocation
          audience: audience
          revocationCacheLifetime: 0
          kid: kid
          issuer: issuer
        client:
          client_secret: client_secret
          client_id: client_id
        signing:
          kid: kid
      properties:
        client:
          $ref: '#/components/schemas/IdentityProviderCredentialsClient'
        signing:
          $ref: '#/components/schemas/IdentityProviderCredentialsSigning'
        trust:
          $ref: '#/components/schemas/IdentityProviderCredentialsTrust'
      type: object
    IdentityProviderCredentialsClient:
      example:
        client_secret: client_secret
        client_id: client_id
      properties:
        client_id:
          type: string
        client_secret:
          type: string
      type: object
    IdentityProviderCredentialsSigning:
      example:
        kid: kid
      properties:
        kid:
          type: string
      type: object
    IdentityProviderCredentialsTrust:
      example:
        revocation: revocation
        audience: audience
        revocationCacheLifetime: 0
        kid: kid
        issuer: issuer
      properties:
        audience:
          type: string
        issuer:
          type: string
        kid:
          type: string
        revocation:
          type: string
          x-okta-known-values:
          - CRL
          - DELTA_CRL
          - OCSP
        revocationCacheLifetime:
          type: integer
      type: object
    IdentityProviderCredentialsTrustRevocation:
      type: string
      x-okta-known-values:
      - CRL
      - DELTA_CRL
      - OCSP
    IdentityProviderPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - $ref: '#/components/schemas/IdentityProviderPolicy_allOf'
    IdentityProviderPolicyProvider:
      type: string
      x-okta-known-values:
      - ANY
      - OKTA
      - SPECIFIC_IDP
    IdentityProviderPolicyRuleCondition:
      properties:
        idpIds:
          items:
            type: string
          type: array
        provider:
          type: string
          x-okta-known-values:
          - ANY
          - OKTA
          - SPECIFIC_IDP
      type: object
    IdentityProviderType:
      type: string
      x-okta-known-values:
      - AgentlessDSSO
      - FACEBOOK
      - GOOGLE
      - IWA
      - LINKEDIN
      - MICROSOFT
      - OIDC
      - OKTA
      - SAML2
      - X509
    IdpPolicyRuleAction:
      properties:
        providers:
          items:
            $ref: '#/components/schemas/IdpPolicyRuleActionProvider'
          type: array
      type: object
    IdpPolicyRuleActionProvider:
      properties:
        id:
          readOnly: true
          type: string
        type:
          type: string
      type: object
    IframeEmbedScopeAllowedApps:
      type: string
      x-okta-known-values:
      - OKTA_ENDUSER
    ImageUploadResponse:
      example:
        url: url
      properties:
        url:
          readOnly: true
          type: string
      type: object
    InactivityPolicyRuleCondition:
      properties:
        number:
          type: integer
        unit:
          type: string
      type: object
    InlineHook:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        channel:
          type: type
          config:
            headers:
            - value: value
              key: key
            - value: value
              key: key
            method: method
            authScheme:
              type: type
              value: value
              key: key
            uri: uri
          version: version
        name: name
        id: id
        type: type
        version: version
        status: status
      properties:
        channel:
          $ref: '#/components/schemas/InlineHookChannel'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        type:
          type: string
          x-okta-known-values:
          - com.okta.import.transform
          - com.okta.oauth2.tokens.transform
          - com.okta.saml.tokens.transform
          - com.okta.user.credential.password.import
          - com.okta.user.pre-registration
        version:
          type: string
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    InlineHookChannel:
      example:
        type: type
        config:
          headers:
          - value: value
            key: key
          - value: value
            key: key
          method: method
          authScheme:
            type: type
            value: value
            key: key
          uri: uri
        version: version
      properties:
        config:
          $ref: '#/components/schemas/InlineHookChannelConfig'
        type:
          type: string
          x-okta-known-values:
          - HTTP
        version:
          type: string
      type: object
    InlineHookChannelConfig:
      example:
        headers:
        - value: value
          key: key
        - value: value
          key: key
        method: method
        authScheme:
          type: type
          value: value
          key: key
        uri: uri
      properties:
        authScheme:
          $ref: '#/components/schemas/InlineHookChannelConfigAuthScheme'
        headers:
          items:
            $ref: '#/components/schemas/InlineHookChannelConfigHeaders'
          type: array
        method:
          type: string
        uri:
          type: string
      type: object
    InlineHookChannelConfigAuthScheme:
      example:
        type: type
        value: value
        key: key
      properties:
        key:
          type: string
        type:
          type: string
        value:
          type: string
      type: object
    InlineHookChannelConfigHeaders:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    InlineHookChannelType:
      type: string
      x-okta-known-values:
      - HTTP
    InlineHookPayload:
      type: object
      x-okta-extensible: true
    InlineHookResponse:
      example:
        commands:
        - type: type
          value:
          - op: op
            path: path
            value: value
          - op: op
            path: path
            value: value
        - type: type
          value:
          - op: op
            path: path
            value: value
          - op: op
            path: path
            value: value
      properties:
        commands:
          items:
            $ref: '#/components/schemas/InlineHookResponseCommands'
          type: array
      type: object
    InlineHookResponseCommandValue:
      example:
        op: op
        path: path
        value: value
      properties:
        op:
          type: string
        path:
          type: string
        value:
          type: string
      type: object
    InlineHookResponseCommands:
      example:
        type: type
        value:
        - op: op
          path: path
          value: value
        - op: op
          path: path
          value: value
      properties:
        type:
          type: string
        value:
          items:
            $ref: '#/components/schemas/InlineHookResponseCommandValue'
          type: array
      type: object
    InlineHookStatus:
      type: string
      x-okta-known-values:
      - ACTIVE
      - INACTIVE
    InlineHookType:
      type: string
      x-okta-known-values:
      - com.okta.import.transform
      - com.okta.oauth2.tokens.transform
      - com.okta.saml.tokens.transform
      - com.okta.user.credential.password.import
      - com.okta.user.pre-registration
    IssuerMode:
      type: string
      x-okta-known-values:
      - CUSTOM_URL
      - DYNAMIC
      - ORG_URL
    JsonWebKey:
      example:
        e: e
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        use: use
        kid: kid
        x5c:
        - x5c
        - x5c
        expiresAt: 2000-01-23T04:56:07.000+00:00
        "n": "n"
        kty: kty
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        x5t#S256: x5t#S256
        x5t: x5t
        key_ops:
        - key_ops
        - key_ops
        x5u: x5u
        alg: alg
        status: status
      properties:
        alg:
          type: string
        created:
          format: date-time
          type: string
        e:
          type: string
        expiresAt:
          format: date-time
          type: string
        key_ops:
          items:
            type: string
          type: array
        kid:
          type: string
        kty:
          type: string
        lastUpdated:
          format: date-time
          type: string
        "n":
          type: string
        status:
          type: string
        use:
          type: string
        x5c:
          items:
            type: string
          type: array
        x5t:
          type: string
        x5t#S256:
          type: string
        x5u:
          type: string
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    JwkUse:
      example:
        use: use
      properties:
        use:
          type: string
          x-okta-known-values:
          - sig
      type: object
    JwkUseType:
      type: string
      x-okta-known-values:
      - sig
    KnowledgeConstraint:
      allOf:
      - $ref: '#/components/schemas/AccessPolicyConstraint'
    Language:
      description: "The language specified as an [IETF BCP 47 language tag](https://datatracker.ietf.org/doc/html/rfc5646)."
      type: string
    LifecycleCreateSettingObject:
      example:
        status: status
      properties:
        status:
          type: string
          x-okta-known-values:
          - DISABLED
          - ENABLED
      type: object
    LifecycleDeactivateSettingObject:
      example:
        status: status
      properties:
        status:
          type: string
          x-okta-known-values:
          - DISABLED
          - ENABLED
      type: object
    LifecycleExpirationPolicyRuleCondition:
      properties:
        lifecycleStatus:
          type: string
        number:
          type: integer
        unit:
          type: string
      type: object
    LifecycleStatus:
      type: string
      x-okta-known-values:
      - ACTIVE
      - INACTIVE
    LinkedObject:
      example:
        _links:
          key: "{}"
        associated:
          name: name
          description: description
          title: title
          type: type
        primary:
          name: name
          description: description
          title: title
          type: type
      properties:
        associated:
          $ref: '#/components/schemas/LinkedObjectDetails'
        primary:
          $ref: '#/components/schemas/LinkedObjectDetails'
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    LinkedObjectDetails:
      example:
        name: name
        description: description
        title: title
        type: type
      properties:
        description:
          type: string
        name:
          type: string
        title:
          type: string
        type:
          type: string
          x-okta-known-values:
          - USER
      type: object
    LinkedObjectDetailsType:
      type: string
      x-okta-known-values:
      - USER
    LocationGranularity:
      type: string
      x-okta-known-values:
      - CITY
      - COUNTRY
      - LAT_LONG
      - SUBDIVISION
    LogActor:
      example:
        alternateId: alternateId
        displayName: displayName
        detail:
          key: "{}"
        id: id
        type: type
      properties:
        alternateId:
          readOnly: true
          type: string
        detail:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        displayName:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
      type: object
    LogAuthenticationContext:
      example:
        credentialType: credentialType
        authenticationProvider: authenticationProvider
        credentialProvider: credentialProvider
        externalSessionId: externalSessionId
        interface: interface
        authenticationStep: 0
        issuer:
          id: id
          type: type
      properties:
        authenticationProvider:
          type: string
          x-okta-known-values:
          - ACTIVE_DIRECTORY
          - FACTOR_PROVIDER
          - FEDERATION
          - LDAP
          - OKTA_AUTHENTICATION_PROVIDER
          - SOCIAL
        authenticationStep:
          readOnly: true
          type: integer
        credentialProvider:
          type: string
          x-okta-known-values:
          - DUO
          - GOOGLE
          - OKTA_AUTHENTICATION_PROVIDER
          - OKTA_CREDENTIAL_PROVIDER
          - RSA
          - SYMANTEC
          - YUBIKEY
        credentialType:
          type: string
          x-okta-known-values:
          - ASSERTION
          - EMAIL
          - IWA
          - JWT
          - OAuth 2.0
          - OTP
          - PASSWORD
          - SMS
        externalSessionId:
          readOnly: true
          type: string
        interface:
          readOnly: true
          type: string
        issuer:
          $ref: '#/components/schemas/LogIssuer'
      type: object
    LogAuthenticationProvider:
      type: string
      x-okta-known-values:
      - ACTIVE_DIRECTORY
      - FACTOR_PROVIDER
      - FEDERATION
      - LDAP
      - OKTA_AUTHENTICATION_PROVIDER
      - SOCIAL
    LogClient:
      example:
        zone: zone
        ipAddress: ipAddress
        userAgent:
          os: os
          browser: browser
          rawUserAgent: rawUserAgent
        id: id
        device: device
        geographicalContext:
          country: country
          city: city
          postalCode: postalCode
          state: state
          geolocation:
            lon: 1.4658129805029452
            lat: 6.027456183070403
      properties:
        device:
          readOnly: true
          type: string
        geographicalContext:
          $ref: '#/components/schemas/LogGeographicalContext'
        id:
          readOnly: true
          type: string
        ipAddress:
          readOnly: true
          type: string
        userAgent:
          $ref: '#/components/schemas/LogUserAgent'
        zone:
          readOnly: true
          type: string
      type: object
    LogCredentialProvider:
      type: string
      x-okta-known-values:
      - DUO
      - GOOGLE
      - OKTA_AUTHENTICATION_PROVIDER
      - OKTA_CREDENTIAL_PROVIDER
      - RSA
      - SYMANTEC
      - YUBIKEY
    LogCredentialType:
      type: string
      x-okta-known-values:
      - ASSERTION
      - EMAIL
      - IWA
      - JWT
      - OAuth 2.0
      - OTP
      - PASSWORD
      - SMS
    LogDebugContext:
      example:
        debugData:
          key: "{}"
      properties:
        debugData:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    LogEvent:
      example:
        severity: severity
        request:
          ipChain:
          - ip: ip
            source: source
            geographicalContext:
              country: country
              city: city
              postalCode: postalCode
              state: state
              geolocation:
                lon: 1.4658129805029452
                lat: 6.027456183070403
            version: version
          - ip: ip
            source: source
            geographicalContext:
              country: country
              city: city
              postalCode: postalCode
              state: state
              geolocation:
                lon: 1.4658129805029452
                lat: 6.027456183070403
            version: version
        authenticationContext:
          credentialType: credentialType
          authenticationProvider: authenticationProvider
          credentialProvider: credentialProvider
          externalSessionId: externalSessionId
          interface: interface
          authenticationStep: 0
          issuer:
            id: id
            type: type
        eventType: eventType
        published: 2000-01-23T04:56:07.000+00:00
        securityContext:
          asNumber: 5
          domain: domain
          isp: isp
          isProxy: true
          asOrg: asOrg
        uuid: uuid
        version: version
        target:
        - alternateId: alternateId
          displayName: displayName
          id: id
          detailEntry:
            key: "{}"
          type: type
        - alternateId: alternateId
          displayName: displayName
          id: id
          detailEntry:
            key: "{}"
          type: type
        actor:
          alternateId: alternateId
          displayName: displayName
          detail:
            key: "{}"
          id: id
          type: type
        debugContext:
          debugData:
            key: "{}"
        displayMessage: displayMessage
        client:
          zone: zone
          ipAddress: ipAddress
          userAgent:
            os: os
            browser: browser
            rawUserAgent: rawUserAgent
          id: id
          device: device
          geographicalContext:
            country: country
            city: city
            postalCode: postalCode
            state: state
            geolocation:
              lon: 1.4658129805029452
              lat: 6.027456183070403
        legacyEventType: legacyEventType
        outcome:
          result: result
          reason: reason
        transaction:
          detail:
            key: "{}"
          id: id
          type: type
      properties:
        actor:
          $ref: '#/components/schemas/LogActor'
        authenticationContext:
          $ref: '#/components/schemas/LogAuthenticationContext'
        client:
          $ref: '#/components/schemas/LogClient'
        debugContext:
          $ref: '#/components/schemas/LogDebugContext'
        displayMessage:
          readOnly: true
          type: string
        eventType:
          readOnly: true
          type: string
        legacyEventType:
          readOnly: true
          type: string
        outcome:
          $ref: '#/components/schemas/LogOutcome'
        published:
          format: date-time
          readOnly: true
          type: string
        request:
          $ref: '#/components/schemas/LogRequest'
        securityContext:
          $ref: '#/components/schemas/LogSecurityContext'
        severity:
          type: string
          x-okta-known-values:
          - DEBUG
          - ERROR
          - INFO
          - WARN
        target:
          items:
            $ref: '#/components/schemas/LogTarget'
          readOnly: true
          type: array
        transaction:
          $ref: '#/components/schemas/LogTransaction'
        uuid:
          readOnly: true
          type: string
        version:
          readOnly: true
          type: string
      type: object
    LogGeographicalContext:
      example:
        country: country
        city: city
        postalCode: postalCode
        state: state
        geolocation:
          lon: 1.4658129805029452
          lat: 6.027456183070403
      properties:
        city:
          readOnly: true
          type: string
        country:
          readOnly: true
          type: string
        geolocation:
          $ref: '#/components/schemas/LogGeolocation'
        postalCode:
          readOnly: true
          type: string
        state:
          readOnly: true
          type: string
      type: object
    LogGeolocation:
      example:
        lon: 1.4658129805029452
        lat: 6.027456183070403
      properties:
        lat:
          format: double
          readOnly: true
          type: number
        lon:
          format: double
          readOnly: true
          type: number
      type: object
    LogIpAddress:
      example:
        ip: ip
        source: source
        geographicalContext:
          country: country
          city: city
          postalCode: postalCode
          state: state
          geolocation:
            lon: 1.4658129805029452
            lat: 6.027456183070403
        version: version
      properties:
        geographicalContext:
          $ref: '#/components/schemas/LogGeographicalContext'
        ip:
          readOnly: true
          type: string
        source:
          readOnly: true
          type: string
        version:
          readOnly: true
          type: string
      type: object
    LogIssuer:
      example:
        id: id
        type: type
      properties:
        id:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
      type: object
    LogOutcome:
      example:
        result: result
        reason: reason
      properties:
        reason:
          readOnly: true
          type: string
        result:
          readOnly: true
          type: string
      type: object
    LogRequest:
      example:
        ipChain:
        - ip: ip
          source: source
          geographicalContext:
            country: country
            city: city
            postalCode: postalCode
            state: state
            geolocation:
              lon: 1.4658129805029452
              lat: 6.027456183070403
          version: version
        - ip: ip
          source: source
          geographicalContext:
            country: country
            city: city
            postalCode: postalCode
            state: state
            geolocation:
              lon: 1.4658129805029452
              lat: 6.027456183070403
          version: version
      properties:
        ipChain:
          items:
            $ref: '#/components/schemas/LogIpAddress'
          readOnly: true
          type: array
      type: object
    LogSecurityContext:
      example:
        asNumber: 5
        domain: domain
        isp: isp
        isProxy: true
        asOrg: asOrg
      properties:
        asNumber:
          readOnly: true
          type: integer
        asOrg:
          readOnly: true
          type: string
        domain:
          readOnly: true
          type: string
        isp:
          readOnly: true
          type: string
        isProxy:
          readOnly: true
          type: boolean
      type: object
    LogSeverity:
      type: string
      x-okta-known-values:
      - DEBUG
      - ERROR
      - INFO
      - WARN
    LogTarget:
      example:
        alternateId: alternateId
        displayName: displayName
        id: id
        detailEntry:
          key: "{}"
        type: type
      properties:
        alternateId:
          readOnly: true
          type: string
        detailEntry:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        displayName:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
      type: object
    LogTransaction:
      example:
        detail:
          key: "{}"
        id: id
        type: type
      properties:
        detail:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        id:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
      type: object
    LogUserAgent:
      example:
        os: os
        browser: browser
        rawUserAgent: rawUserAgent
      properties:
        browser:
          readOnly: true
          type: string
        os:
          readOnly: true
          type: string
        rawUserAgent:
          readOnly: true
          type: string
      type: object
    MDMEnrollmentPolicyEnrollment:
      type: string
      x-okta-known-values:
      - ANY_OR_NONE
      - OMM
    MDMEnrollmentPolicyRuleCondition:
      properties:
        blockNonSafeAndroid:
          type: boolean
        enrollment:
          type: string
          x-okta-known-values:
          - ANY_OR_NONE
          - OMM
      type: object
    MultifactorEnrollmentPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - $ref: '#/components/schemas/MultifactorEnrollmentPolicy_allOf'
    MultifactorEnrollmentPolicyAuthenticatorSettings:
      properties:
        enroll:
          $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorSettings_enroll'
        key:
          type: string
          x-okta-known-values:
          - custom_app
          - custom_otp
          - duo
          - external_idp
          - google_otp
          - okta_email
          - okta_password
          - okta_verify
          - onprem_mfa
          - phone_number
          - rsa_token
          - security_question
          - symantec_vip
          - webauthn
          - yubikey_token
      type: object
    MultifactorEnrollmentPolicyAuthenticatorStatus:
      type: string
      x-okta-known-values:
      - NOT_ALLOWED
      - OPTIONAL
      - REQUIRED
    MultifactorEnrollmentPolicyAuthenticatorType:
      type: string
      x-okta-known-values:
      - custom_app
      - custom_otp
      - duo
      - external_idp
      - google_otp
      - okta_email
      - okta_password
      - okta_verify
      - onprem_mfa
      - phone_number
      - rsa_token
      - security_question
      - symantec_vip
      - webauthn
      - yubikey_token
    MultifactorEnrollmentPolicySettings:
      properties:
        authenticators:
          items:
            $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorSettings'
          type: array
        type:
          type: string
          x-okta-known-values:
          - AUTHENTICATORS
      type: object
    MultifactorEnrollmentPolicySettingsType:
      type: string
      x-okta-known-values:
      - AUTHENTICATORS
    NetworkZone:
      example:
        gateways:
        - type: type
          value: value
        - type: type
          value: value
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        usage: usage
        proxyType: proxyType
        type: type
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        system: true
        name: name
        asns:
        - asns
        - asns
        locations:
        - country: country
          region: region
        - country: country
          region: region
        proxies:
        - type: type
          value: value
        - type: type
          value: value
        id: id
        status: status
      properties:
        asns:
          items:
            type: string
          type: array
        created:
          format: date-time
          readOnly: true
          type: string
        gateways:
          items:
            $ref: '#/components/schemas/NetworkZoneAddress'
          type: array
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        locations:
          items:
            $ref: '#/components/schemas/NetworkZoneLocation'
          type: array
        name:
          type: string
        proxies:
          items:
            $ref: '#/components/schemas/NetworkZoneAddress'
          type: array
        proxyType:
          type: string
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        system:
          type: boolean
        type:
          type: string
          x-okta-known-values:
          - DYNAMIC
          - IP
        usage:
          type: string
          x-okta-known-values:
          - BLOCKLIST
          - POLICY
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    NetworkZoneAddress:
      example:
        type: type
        value: value
      properties:
        type:
          type: string
          x-okta-known-values:
          - CIDR
          - RANGE
        value:
          type: string
      type: object
    NetworkZoneAddressType:
      type: string
      x-okta-known-values:
      - CIDR
      - RANGE
    NetworkZoneLocation:
      example:
        country: country
        region: region
      properties:
        country:
          type: string
        region:
          type: string
      type: object
    NetworkZoneStatus:
      type: string
      x-okta-known-values:
      - ACTIVE
      - INACTIVE
    NetworkZoneType:
      type: string
      x-okta-known-values:
      - DYNAMIC
      - IP
    NetworkZoneUsage:
      type: string
      x-okta-known-values:
      - BLOCKLIST
      - POLICY
    NotificationType:
      type: string
      x-okta-known-values:
      - AD_AGENT
      - APP_IMPORT
      - CONNECTOR_AGENT
      - IWA_AGENT
      - LDAP_AGENT
      - OKTA_ANNOUNCEMENT
      - OKTA_ISSUE
      - OKTA_UPDATE
      - RATELIMIT_NOTIFICATION
      - REPORT_SUSPICIOUS_ACTIVITY
      - USER_DEPROVISION
      - USER_LOCKED_OUT
    OAuth2Actor:
      example:
        id: id
        type: type
      properties:
        id:
          readOnly: true
          type: string
        type:
          type: string
      type: object
    OAuth2Claim:
      example:
        group_filter_type: group_filter_type
        claimType: claimType
        system: true
        alwaysIncludeInToken: true
        _links:
          key: "{}"
        valueType: valueType
        name: name
        id: id
        conditions:
          scopes:
          - scopes
          - scopes
        value: value
        status: status
      properties:
        alwaysIncludeInToken:
          type: boolean
        claimType:
          type: string
          x-okta-known-values:
          - IDENTITY
          - RESOURCE
        conditions:
          $ref: '#/components/schemas/OAuth2ClaimConditions'
        group_filter_type:
          type: string
          x-okta-known-values:
          - CONTAINS
          - EQUALS
          - REGEX
          - STARTS_WITH
        id:
          readOnly: true
          type: string
        name:
          type: string
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        system:
          type: boolean
        value:
          type: string
        valueType:
          type: string
          x-okta-known-values:
          - EXPRESSION
          - GROUPS
          - SYSTEM
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    OAuth2ClaimConditions:
      example:
        scopes:
        - scopes
        - scopes
      properties:
        scopes:
          items:
            type: string
          type: array
      type: object
    OAuth2ClaimGroupFilterType:
      type: string
      x-okta-known-values:
      - CONTAINS
      - EQUALS
      - REGEX
      - STARTS_WITH
    OAuth2ClaimType:
      type: string
      x-okta-known-values:
      - IDENTITY
      - RESOURCE
    OAuth2ClaimValueType:
      type: string
      x-okta-known-values:
      - EXPRESSION
      - GROUPS
      - SYSTEM
    OAuth2Client:
      example:
        client_uri: client_uri
        _links:
          key: "{}"
        logo_uri: logo_uri
        client_name: client_name
        client_id: client_id
      properties:
        client_id:
          readOnly: true
          type: string
        client_name:
          readOnly: true
          type: string
        client_uri:
          readOnly: true
          type: string
        logo_uri:
          readOnly: true
          type: string
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    OAuth2RefreshToken:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        clientId: clientId
        createdBy:
          id: id
          type: type
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        id: id
        scopes:
        - scopes
        - scopes
        userId: userId
        expiresAt: 2000-01-23T04:56:07.000+00:00
        issuer: issuer
        status: status
      properties:
        clientId:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          $ref: '#/components/schemas/OAuth2Actor'
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        issuer:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        scopes:
          items:
            type: string
          type: array
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - REVOKED
        userId:
          type: string
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    OAuth2Scope:
      example:
        default: true
        system: true
        displayName: displayName
        name: name
        description: description
        metadataPublish: metadataPublish
        id: id
        consent: consent
      properties:
        consent:
          type: string
          x-okta-known-values:
          - ADMIN
          - IMPLICIT
          - REQUIRED
        default:
          type: boolean
        description:
          type: string
        displayName:
          type: string
        id:
          readOnly: true
          type: string
        metadataPublish:
          type: string
          x-okta-known-values:
          - ALL_CLIENTS
          - NO_CLIENTS
        name:
          type: string
        system:
          type: boolean
      type: object
    OAuth2ScopeConsentGrant:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        scopeId: scopeId
        clientId: clientId
        createdBy:
          id: id
          type: type
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        id: id
        source: source
        userId: userId
        issuer: issuer
        status: status
      properties:
        clientId:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          $ref: '#/components/schemas/OAuth2Actor'
        id:
          readOnly: true
          type: string
        issuer:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        scopeId:
          type: string
        source:
          type: string
          x-okta-known-values:
          - ADMIN
          - END_USER
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - REVOKED
        userId:
          type: string
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    OAuth2ScopeConsentGrantSource:
      type: string
      x-okta-known-values:
      - ADMIN
      - END_USER
    OAuth2ScopeConsentType:
      type: string
      x-okta-known-values:
      - ADMIN
      - IMPLICIT
      - REQUIRED
    OAuth2ScopeMetadataPublish:
      type: string
      x-okta-known-values:
      - ALL_CLIENTS
      - NO_CLIENTS
    OAuth2ScopesMediationPolicyRuleCondition:
      properties:
        include:
          items:
            type: string
          type: array
      type: object
    OAuth2Token:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        clientId: clientId
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        id: id
        scopes:
        - scopes
        - scopes
        userId: userId
        expiresAt: 2000-01-23T04:56:07.000+00:00
        issuer: issuer
        status: status
      properties:
        clientId:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        issuer:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        scopes:
          items:
            type: string
          type: array
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - REVOKED
        userId:
          type: string
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    OAuthApplicationCredentials:
      allOf:
      - $ref: '#/components/schemas/ApplicationCredentials'
      - $ref: '#/components/schemas/OAuthApplicationCredentials_allOf'
    OAuthEndpointAuthenticationMethod:
      type: string
      x-okta-known-values:
      - client_secret_basic
      - client_secret_jwt
      - client_secret_post
      - none
      - private_key_jwt
    OAuthGrantType:
      type: string
      x-okta-known-values:
      - authorization_code
      - client_credentials
      - implicit
      - interaction_code
      - password
      - refresh_token
    OAuthResponseType:
      type: string
      x-okta-known-values:
      - code
      - id_token
      - token
    OktaSignOnPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - $ref: '#/components/schemas/OktaSignOnPolicy_allOf'
    OktaSignOnPolicyConditions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleConditions'
      - $ref: '#/components/schemas/OktaSignOnPolicyConditions_allOf'
    OktaSignOnPolicyFactorPromptMode:
      type: string
      x-okta-known-values:
      - ALWAYS
      - DEVICE
      - SESSION
    OktaSignOnPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - $ref: '#/components/schemas/OktaSignOnPolicyRule_allOf'
    OktaSignOnPolicyRuleActions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleActions'
      - $ref: '#/components/schemas/OktaSignOnPolicyRuleActions_allOf'
    OktaSignOnPolicyRuleConditions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleConditions'
      - $ref: '#/components/schemas/OktaSignOnPolicyRuleConditions_allOf'
    OktaSignOnPolicyRuleSignonActions:
      properties:
        access:
          type: string
          x-okta-known-values:
          - ALLOW
          - DENY
        factorLifetime:
          type: integer
        factorPromptMode:
          type: string
          x-okta-known-values:
          - ALWAYS
          - DEVICE
          - SESSION
        rememberDeviceByDefault:
          default: false
          type: boolean
        requireFactor:
          default: false
          type: boolean
        session:
          $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonSessionActions'
      type: object
    OktaSignOnPolicyRuleSignonSessionActions:
      properties:
        maxSessionIdleMinutes:
          type: integer
        maxSessionLifetimeMinutes:
          type: integer
        usePersistentCookie:
          default: false
          type: boolean
      type: object
    OpenIdConnectApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - $ref: '#/components/schemas/OpenIdConnectApplication_allOf'
      x-okta-defined-as:
        name: oidc_client
    OpenIdConnectApplicationConsentMethod:
      type: string
      x-okta-known-values:
      - REQUIRED
      - TRUSTED
    OpenIdConnectApplicationIdpInitiatedLogin:
      properties:
        default_scope:
          items:
            type: string
          type: array
        mode:
          type: string
      type: object
    OpenIdConnectApplicationIssuerMode:
      type: string
      x-okta-known-values:
      - CUSTOM_URL
      - DYNAMIC
      - ORG_URL
    OpenIdConnectApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - $ref: '#/components/schemas/OpenIdConnectApplicationSettings_allOf'
    OpenIdConnectApplicationSettingsClient:
      properties:
        application_type:
          type: string
          x-okta-known-values:
          - browser
          - native
          - service
          - web
        client_uri:
          type: string
        consent_method:
          type: string
          x-okta-known-values:
          - REQUIRED
          - TRUSTED
        grant_types:
          items:
            $ref: '#/components/schemas/OAuthGrantType'
          type: array
        idp_initiated_login:
          $ref: '#/components/schemas/OpenIdConnectApplicationIdpInitiatedLogin'
        initiate_login_uri:
          type: string
        issuer_mode:
          type: string
          x-okta-known-values:
          - CUSTOM_URL
          - DYNAMIC
          - ORG_URL
        jwks:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClientKeys'
        logo_uri:
          type: string
        policy_uri:
          type: string
        post_logout_redirect_uris:
          items:
            type: string
          type: array
        redirect_uris:
          items:
            type: string
          type: array
        refresh_token:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsRefreshToken'
        response_types:
          items:
            $ref: '#/components/schemas/OAuthResponseType'
          type: array
        tos_uri:
          type: string
        wildcard_redirect:
          type: string
      type: object
    OpenIdConnectApplicationSettingsClientKeys:
      properties:
        keys:
          items:
            $ref: '#/components/schemas/JsonWebKey'
          type: array
      type: object
    OpenIdConnectApplicationSettingsRefreshToken:
      properties:
        leeway:
          type: integer
        rotation_type:
          type: string
          x-okta-known-values:
          - ROTATE
          - STATIC
      type: object
    OpenIdConnectApplicationType:
      type: string
      x-okta-known-values:
      - browser
      - native
      - service
      - web
    OpenIdConnectRefreshTokenRotationType:
      type: string
      x-okta-known-values:
      - ROTATE
      - STATIC
    OperationalStatus:
      description: Operational status of a given agent
      type: string
      x-okta-known-values:
      - DEGRADED
      - DISRUPTED
      - INACTIVE
      - OPERATIONAL
    OrgContactType:
      type: string
      x-okta-known-values:
      - BILLING
      - TECHNICAL
    OrgContactTypeObj:
      example:
        _links:
          key: "{}"
        contactType: contactType
      properties:
        contactType:
          type: string
          x-okta-known-values:
          - BILLING
          - TECHNICAL
        _links:
          additionalProperties:
            type: object
          type: object
      type: object
    OrgContactUser:
      example:
        _links:
          key: "{}"
        userId: userId
      properties:
        userId:
          type: string
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
      type: object
    OrgOktaCommunicationSetting:
      example:
        _links:
          key: "{}"
        optOutEmailUsers: true
      properties:
        optOutEmailUsers:
          readOnly: true
          type: boolean
        _links:
          additionalProperties:
            type: object
          type: object
      type: object
    OrgOktaSupportSetting:
      type: string
      x-okta-known-values:
      - DISABLED
      - ENABLED
    OrgOktaSupportSettingsObj:
      example:
        _links:
          key: "{}"
        expiration: 2000-01-23T04:56:07.000+00:00
        support: support
      properties:
        expiration:
          format: date-time
          readOnly: true
          type: string
        support:
          type: string
          x-okta-known-values:
          - DISABLED
          - ENABLED
        _links:
          additionalProperties:
            type: object
          type: object
      type: object
    OrgPreferences:
      example:
        _links:
          key: "{}"
        showEndUserFooter: true
      properties:
        showEndUserFooter:
          readOnly: true
          type: boolean
        _links:
          additionalProperties:
            type: object
          type: object
      type: object
    OrgSetting:
      example:
        country: country
        website: website
        supportPhoneNumber: supportPhoneNumber
        address2: address2
        city: city
        _links:
          key: "{}"
        address1: address1
        created: 2000-01-23T04:56:07.000+00:00
        companyName: companyName
        postalCode: postalCode
        expiresAt: 2000-01-23T04:56:07.000+00:00
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        phoneNumber: phoneNumber
        endUserSupportHelpURL: endUserSupportHelpURL
        subdomain: subdomain
        id: id
        state: state
        status: status
      properties:
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        companyName:
          type: string
        country:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        endUserSupportHelpURL:
          type: string
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        phoneNumber:
          type: string
        postalCode:
          type: string
        state:
          type: string
        status:
          readOnly: true
          type: string
        subdomain:
          readOnly: true
          type: string
        supportPhoneNumber:
          type: string
        website:
          type: string
        _links:
          additionalProperties:
            type: object
          type: object
      type: object
    PasswordCredential:
      example:
        hook:
          type: type
        value: value
        hash:
          salt: salt
          saltOrder: saltOrder
          workFactor: 0
          value: value
          algorithm: algorithm
      properties:
        hash:
          $ref: '#/components/schemas/PasswordCredentialHash'
        hook:
          $ref: '#/components/schemas/PasswordCredentialHook'
        value:
          format: password
          type: string
      type: object
    PasswordCredentialHash:
      example:
        salt: salt
        saltOrder: saltOrder
        workFactor: 0
        value: value
        algorithm: algorithm
      properties:
        algorithm:
          type: string
          x-okta-known-values:
          - BCRYPT
          - MD5
          - SHA-1
          - SHA-256
          - SHA-512
        salt:
          type: string
        saltOrder:
          type: string
        value:
          type: string
        workFactor:
          type: integer
      type: object
    PasswordCredentialHashAlgorithm:
      type: string
      x-okta-known-values:
      - BCRYPT
      - MD5
      - SHA-1
      - SHA-256
      - SHA-512
    PasswordCredentialHook:
      example:
        type: type
      properties:
        type:
          type: string
      type: object
    PasswordDictionary:
      properties:
        common:
          $ref: '#/components/schemas/PasswordDictionaryCommon'
      type: object
    PasswordDictionaryCommon:
      properties:
        exclude:
          default: false
          type: boolean
      type: object
    PasswordExpirationPolicyRuleCondition:
      properties:
        number:
          type: integer
        unit:
          type: string
      type: object
    PasswordPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - $ref: '#/components/schemas/PasswordPolicy_allOf'
    PasswordPolicyAuthenticationProviderCondition:
      properties:
        include:
          items:
            type: string
          type: array
        provider:
          type: string
          x-okta-known-values:
          - ACTIVE_DIRECTORY
          - ANY
          - LDAP
          - OKTA
      type: object
    PasswordPolicyAuthenticationProviderType:
      type: string
      x-okta-known-values:
      - ACTIVE_DIRECTORY
      - ANY
      - LDAP
      - OKTA
    PasswordPolicyConditions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleConditions'
      - $ref: '#/components/schemas/PasswordPolicyConditions_allOf'
    PasswordPolicyDelegationSettings:
      properties:
        options:
          $ref: '#/components/schemas/PasswordPolicyDelegationSettingsOptions'
      type: object
    PasswordPolicyDelegationSettingsOptions:
      properties:
        skipUnlock:
          type: boolean
      type: object
    PasswordPolicyPasswordSettings:
      properties:
        age:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsAge'
        complexity:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsComplexity'
        lockout:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsLockout'
      type: object
    PasswordPolicyPasswordSettingsAge:
      properties:
        expireWarnDays:
          type: integer
        historyCount:
          type: integer
        maxAgeDays:
          type: integer
        minAgeMinutes:
          type: integer
      type: object
    PasswordPolicyPasswordSettingsComplexity:
      properties:
        dictionary:
          $ref: '#/components/schemas/PasswordDictionary'
        excludeAttributes:
          items:
            type: string
          type: array
        excludeUsername:
          default: true
          type: boolean
        minLength:
          type: integer
        minLowerCase:
          type: integer
        minNumber:
          type: integer
        minSymbol:
          type: integer
        minUpperCase:
          type: integer
      type: object
    PasswordPolicyPasswordSettingsLockout:
      properties:
        autoUnlockMinutes:
          type: integer
        maxAttempts:
          type: integer
        showLockoutFailures:
          type: boolean
        userLockoutNotificationChannels:
          items:
            type: string
          type: array
      type: object
    PasswordPolicyRecoveryEmail:
      properties:
        properties:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailProperties'
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
      type: object
    PasswordPolicyRecoveryEmailProperties:
      properties:
        recoveryToken:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailRecoveryToken'
      type: object
    PasswordPolicyRecoveryEmailRecoveryToken:
      properties:
        tokenLifetimeMinutes:
          type: integer
      type: object
    PasswordPolicyRecoveryFactorSettings:
      properties:
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
      type: object
    PasswordPolicyRecoveryFactors:
      properties:
        okta_call:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'
        okta_email:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmail'
        okta_sms:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'
        recovery_question:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestion'
      type: object
    PasswordPolicyRecoveryQuestion:
      properties:
        properties:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionProperties'
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
      type: object
    PasswordPolicyRecoveryQuestionComplexity:
      properties:
        minLength:
          readOnly: true
          type: integer
      type: object
    PasswordPolicyRecoveryQuestionProperties:
      properties:
        complexity:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionComplexity'
      type: object
    PasswordPolicyRecoverySettings:
      properties:
        factors:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactors'
      type: object
    PasswordPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - $ref: '#/components/schemas/PasswordPolicyRule_allOf'
    PasswordPolicyRuleAction:
      properties:
        access:
          type: string
          x-okta-known-values:
          - ALLOW
          - DENY
      type: object
    PasswordPolicyRuleActions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleActions'
      - $ref: '#/components/schemas/PasswordPolicyRuleActions_allOf'
    PasswordPolicyRuleConditions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleConditions'
      - $ref: '#/components/schemas/PasswordPolicyRuleConditions_allOf'
    PasswordPolicySettings:
      properties:
        delegation:
          $ref: '#/components/schemas/PasswordPolicyDelegationSettings'
        password:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettings'
        recovery:
          $ref: '#/components/schemas/PasswordPolicyRecoverySettings'
      type: object
    PasswordSettingObject:
      example:
        seed: seed
        change: change
        status: status
      properties:
        change:
          type: string
          x-okta-known-values:
          - CHANGE
          - KEEP_EXISTING
        seed:
          type: string
          x-okta-known-values:
          - OKTA
          - RANDOM
        status:
          type: string
          x-okta-known-values:
          - DISABLED
          - ENABLED
      type: object
    Platform:
      type: string
      x-okta-known-values:
      - ANDROID
      - IOS
      - MACOS
      - WINDOWS
    PlatformConditionEvaluatorPlatform:
      properties:
        os:
          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystem'
        type:
          type: string
          x-okta-known-values:
          - ANY
          - DESKTOP
          - MOBILE
          - OTHER
      type: object
    PlatformConditionEvaluatorPlatformOperatingSystem:
      properties:
        expression:
          type: string
        type:
          type: string
          x-okta-known-values:
          - ANDROID
          - ANY
          - IOS
          - OSX
          - OTHER
          - WINDOWS
        version:
          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystemVersion'
      type: object
    PlatformConditionEvaluatorPlatformOperatingSystemVersion:
      properties:
        matchType:
          type: string
          x-okta-known-values:
          - EXPRESSION
          - SEMVER
        value:
          type: string
      type: object
    PlatformConditionOperatingSystemVersionMatchType:
      type: string
      x-okta-known-values:
      - EXPRESSION
      - SEMVER
    PlatformPolicyRuleCondition:
      properties:
        exclude:
          items:
            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'
          type: array
        include:
          items:
            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'
          type: array
      type: object
    Policy:
      discriminator:
        mapping:
          ACCESS_POLICY: '#/components/schemas/AccessPolicy'
          IDP_DISCOVERY: '#/components/schemas/IdentityProviderPolicy'
          MFA_ENROLL: '#/components/schemas/MultifactorEnrollmentPolicy'
          OAUTH_AUTHORIZATION_POLICY: '#/components/schemas/AuthorizationServerPolicy'
          OKTA_SIGN_ON: '#/components/schemas/OktaSignOnPolicy'
          PASSWORD: '#/components/schemas/PasswordPolicy'
          PROFILE_ENROLLMENT: '#/components/schemas/ProfileEnrollmentPolicy'
        propertyName: type
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        description:
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        priority:
          type: integer
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        system:
          type: boolean
        type:
          type: string
          x-okta-known-values:
          - ACCESS_POLICY
          - IDP_DISCOVERY
          - MFA_ENROLL
          - OAUTH_AUTHORIZATION_POLICY
          - OKTA_SIGN_ON
          - PASSWORD
          - PROFILE_ENROLLMENT
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    PolicyAccess:
      type: string
      x-okta-known-values:
      - ALLOW
      - DENY
    PolicyAccountLink:
      properties:
        action:
          type: string
          x-okta-known-values:
          - AUTO
          - DISABLED
        filter:
          $ref: '#/components/schemas/PolicyAccountLinkFilter'
      type: object
    PolicyAccountLinkAction:
      type: string
      x-okta-known-values:
      - AUTO
      - DISABLED
    PolicyAccountLinkFilter:
      properties:
        groups:
          $ref: '#/components/schemas/PolicyAccountLinkFilterGroups'
      type: object
    PolicyAccountLinkFilterGroups:
      properties:
        include:
          items:
            type: string
          type: array
      type: object
    PolicyNetworkCondition:
      properties:
        connection:
          type: string
          x-okta-known-values:
          - ANYWHERE
          - ZONE
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
    PolicyNetworkConnection:
      type: string
      x-okta-known-values:
      - ANYWHERE
      - ZONE
    PolicyPeopleCondition:
      properties:
        groups:
          $ref: '#/components/schemas/GroupCondition'
        users:
          $ref: '#/components/schemas/UserCondition'
      type: object
    PolicyPlatformOperatingSystemType:
      type: string
      x-okta-known-values:
      - ANDROID
      - ANY
      - IOS
      - OSX
      - OTHER
      - WINDOWS
    PolicyPlatformType:
      type: string
      x-okta-known-values:
      - ANY
      - DESKTOP
      - MOBILE
      - OTHER
    PolicyRule:
      discriminator:
        mapping:
          ACCESS_POLICY: '#/components/schemas/AccessPolicyRule'
          PASSWORD: '#/components/schemas/PasswordPolicyRule'
          PROFILE_ENROLLMENT: '#/components/schemas/ProfileEnrollmentPolicyRule'
          RESOURCE_ACCESS: '#/components/schemas/AuthorizationServerPolicyRule'
          SIGN_ON: '#/components/schemas/OktaSignOnPolicyRule'
        propertyName: type
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        priority:
          type: integer
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        system:
          default: false
          type: boolean
        type:
          type: string
          x-okta-known-values:
          - ACCESS_POLICY
          - IDP_DISCOVERY
          - MFA_ENROLL
          - PASSWORD
          - PROFILE_ENROLLMENT
          - RESOURCE_ACCESS
          - SIGN_ON
      type: object
    PolicyRuleActions:
      properties:
        enroll:
          $ref: '#/components/schemas/PolicyRuleActionsEnroll'
        idp:
          $ref: '#/components/schemas/IdpPolicyRuleAction'
        passwordChange:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
        selfServicePasswordReset:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
        selfServiceUnlock:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
        signon:
          $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonActions'
      type: object
    PolicyRuleActionsEnroll:
      properties:
        self:
          type: string
          x-okta-known-values:
          - CHALLENGE
          - LOGIN
          - NEVER
      type: object
    PolicyRuleActionsEnrollSelf:
      type: string
      x-okta-known-values:
      - CHALLENGE
      - LOGIN
      - NEVER
    PolicyRuleAuthContextCondition:
      properties:
        authType:
          type: string
          x-okta-known-values:
          - ANY
          - RADIUS
      type: object
    PolicyRuleAuthContextType:
      type: string
      x-okta-known-values:
      - ANY
      - RADIUS
    PolicyRuleConditions:
      properties:
        app:
          $ref: '#/components/schemas/AppAndInstancePolicyRuleCondition'
        apps:
          $ref: '#/components/schemas/AppInstancePolicyRuleCondition'
        authContext:
          $ref: '#/components/schemas/PolicyRuleAuthContextCondition'
        authProvider:
          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'
        beforeScheduledAction:
          $ref: '#/components/schemas/BeforeScheduledActionPolicyRuleCondition'
        clients:
          $ref: '#/components/schemas/ClientPolicyCondition'
        context:
          $ref: '#/components/schemas/ContextPolicyRuleCondition'
        device:
          $ref: '#/components/schemas/DevicePolicyRuleCondition'
        grantTypes:
          $ref: '#/components/schemas/GrantTypePolicyRuleCondition'
        groups:
          $ref: '#/components/schemas/GroupPolicyRuleCondition'
        identityProvider:
          $ref: '#/components/schemas/IdentityProviderPolicyRuleCondition'
        mdmEnrollment:
          $ref: '#/components/schemas/MDMEnrollmentPolicyRuleCondition'
        network:
          $ref: '#/components/schemas/PolicyNetworkCondition'
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
        platform:
          $ref: '#/components/schemas/PlatformPolicyRuleCondition'
        risk:
          $ref: '#/components/schemas/RiskPolicyRuleCondition'
        riskScore:
          $ref: '#/components/schemas/RiskScorePolicyRuleCondition'
        scopes:
          $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'
        userIdentifier:
          $ref: '#/components/schemas/UserIdentifierPolicyRuleCondition'
        users:
          $ref: '#/components/schemas/UserPolicyRuleCondition'
        userStatus:
          $ref: '#/components/schemas/UserStatusPolicyRuleCondition'
      type: object
    PolicyRuleType:
      type: string
      x-okta-known-values:
      - ACCESS_POLICY
      - IDP_DISCOVERY
      - MFA_ENROLL
      - PASSWORD
      - PROFILE_ENROLLMENT
      - RESOURCE_ACCESS
      - SIGN_ON
    PolicySubject:
      properties:
        filter:
          type: string
        format:
          items:
            type: string
          type: array
        matchAttribute:
          type: string
        matchType:
          type: string
          x-okta-known-values:
          - CUSTOM_ATTRIBUTE
          - EMAIL
          - USERNAME
          - USERNAME_OR_EMAIL
        userNameTemplate:
          $ref: '#/components/schemas/PolicyUserNameTemplate'
      type: object
    PolicySubjectMatchType:
      type: string
      x-okta-known-values:
      - CUSTOM_ATTRIBUTE
      - EMAIL
      - USERNAME
      - USERNAME_OR_EMAIL
    PolicyType:
      type: string
      x-okta-known-values:
      - ACCESS_POLICY
      - IDP_DISCOVERY
      - MFA_ENROLL
      - OAUTH_AUTHORIZATION_POLICY
      - OKTA_SIGN_ON
      - PASSWORD
      - PROFILE_ENROLLMENT
    PolicyUserNameTemplate:
      properties:
        template:
          type: string
      type: object
    PolicyUserStatus:
      type: string
      x-okta-known-values:
      - ACTIVATING
      - ACTIVE
      - DELETED
      - DELETING
      - EXPIRED_PASSWORD
      - INACTIVE
      - PENDING
      - SUSPENDED
    PossessionConstraint:
      allOf:
      - $ref: '#/components/schemas/AccessPolicyConstraint'
      - $ref: '#/components/schemas/PossessionConstraint_allOf'
    PreRegistrationInlineHook:
      properties:
        inlineHookId:
          type: string
      type: object
    PrincipalRateLimitEntity:
      description: ""
      example:
        defaultConcurrencyPercentage: 0
        lastUpdatedBy: lastUpdatedBy
        createdDate: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        lastUpdate: 2000-01-23T04:56:07.000+00:00
        defaultPercentage: 6
        principalId: principalId
        id: id
        orgId: orgId
        principalType: principalType
      properties:
        createdBy:
          readOnly: true
          type: string
        createdDate:
          format: date-time
          readOnly: true
          type: string
        defaultConcurrencyPercentage:
          readOnly: true
          type: integer
        defaultPercentage:
          readOnly: true
          type: integer
        id:
          readOnly: true
          type: string
        lastUpdate:
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          readOnly: true
          type: string
        orgId:
          readOnly: true
          type: string
        principalId:
          type: string
        principalType:
          type: string
          x-okta-known-values:
          - SSWS_TOKEN
      required:
      - principalId
      - principalType
      title: PrincipalRateLimitEntity
      type: object
    PrincipalType:
      type: string
      x-okta-known-values:
      - SSWS_TOKEN
    ProfileEnrollmentPolicy:
      allOf:
      - $ref: '#/components/schemas/Policy'
      - $ref: '#/components/schemas/AccessPolicy_allOf'
    ProfileEnrollmentPolicyRule:
      allOf:
      - $ref: '#/components/schemas/PolicyRule'
      - $ref: '#/components/schemas/ProfileEnrollmentPolicyRule_allOf'
    ProfileEnrollmentPolicyRuleAction:
      properties:
        access:
          type: string
        activationRequirements:
          $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleActivationRequirement'
        preRegistrationInlineHooks:
          items:
            $ref: '#/components/schemas/PreRegistrationInlineHook'
          type: array
        profileAttributes:
          items:
            $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleProfileAttribute'
          type: array
        targetGroupIds:
          items:
            type: string
          type: array
        unknownUserAction:
          type: string
      type: object
    ProfileEnrollmentPolicyRuleActions:
      allOf:
      - $ref: '#/components/schemas/PolicyRuleActions'
      - $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleActions_allOf'
    ProfileEnrollmentPolicyRuleActivationRequirement:
      properties:
        emailVerification:
          type: boolean
      type: object
    ProfileEnrollmentPolicyRuleProfileAttribute:
      properties:
        label:
          type: string
        name:
          type: string
        required:
          type: boolean
      type: object
    ProfileMapping:
      example:
        _links:
          key: "{}"
        id: id
        source:
          _links:
            key: "{}"
          name: name
          id: id
          type: type
        properties:
          key:
            expression: expression
            pushStatus: pushStatus
        target:
          _links:
            key: "{}"
          name: name
          id: id
          type: type
      properties:
        id:
          readOnly: true
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/ProfileMappingProperty'
          readOnly: true
          type: object
        source:
          $ref: '#/components/schemas/ProfileMappingSource'
        target:
          $ref: '#/components/schemas/ProfileMappingSource'
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    ProfileMappingProperty:
      example:
        expression: expression
        pushStatus: pushStatus
      properties:
        expression:
          type: string
        pushStatus:
          type: string
          x-okta-known-values:
          - DONT_PUSH
          - PUSH
      type: object
    ProfileMappingPropertyPushStatus:
      type: string
      x-okta-known-values:
      - DONT_PUSH
      - PUSH
    ProfileMappingSource:
      example:
        _links:
          key: "{}"
        name: name
        id: id
        type: type
      properties:
        id:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    ProfileSettingObject:
      example:
        status: status
      properties:
        status:
          type: string
          x-okta-known-values:
          - DISABLED
          - ENABLED
      type: object
    Protocol:
      example:
        algorithms:
          request:
            signature:
              scope: scope
              algorithm: algorithm
          response:
            signature:
              scope: scope
              algorithm: algorithm
        relayState:
          format: format
        settings:
          nameFormat: nameFormat
        endpoints:
          acs:
            destination: destination
            binding: binding
            type: type
            url: url
          authorization:
            destination: destination
            binding: binding
            type: type
            url: url
          userInfo:
            destination: destination
            binding: binding
            type: type
            url: url
          metadata:
            destination: destination
            binding: binding
            type: type
            url: url
          jwks:
            destination: destination
            binding: binding
            type: type
            url: url
          slo:
            destination: destination
            binding: binding
            type: type
            url: url
          sso:
            destination: destination
            binding: binding
            type: type
            url: url
          token:
            destination: destination
            binding: binding
            type: type
            url: url
        credentials:
          trust:
            revocation: revocation
            audience: audience
            revocationCacheLifetime: 0
            kid: kid
            issuer: issuer
          client:
            client_secret: client_secret
            client_id: client_id
          signing:
            kid: kid
        scopes:
        - scopes
        - scopes
        type: type
        issuer:
          destination: destination
          binding: binding
          type: type
          url: url
      properties:
        algorithms:
          $ref: '#/components/schemas/ProtocolAlgorithms'
        credentials:
          $ref: '#/components/schemas/IdentityProviderCredentials'
        endpoints:
          $ref: '#/components/schemas/ProtocolEndpoints'
        issuer:
          $ref: '#/components/schemas/ProtocolEndpoint'
        relayState:
          $ref: '#/components/schemas/ProtocolRelayState'
        scopes:
          items:
            type: string
          type: array
        settings:
          $ref: '#/components/schemas/ProtocolSettings'
        type:
          type: string
          x-okta-known-values:
          - MTLS
          - OAUTH2
          - OIDC
          - SAML2
      type: object
    ProtocolAlgorithmType:
      example:
        signature:
          scope: scope
          algorithm: algorithm
      properties:
        signature:
          $ref: '#/components/schemas/ProtocolAlgorithmTypeSignature'
      type: object
    ProtocolAlgorithmTypeSignature:
      example:
        scope: scope
        algorithm: algorithm
      properties:
        algorithm:
          type: string
        scope:
          type: string
          x-okta-known-values:
          - ANY
          - NONE
          - REQUEST
          - RESPONSE
          - TOKEN
      type: object
    ProtocolAlgorithmTypeSignatureScope:
      type: string
      x-okta-known-values:
      - ANY
      - NONE
      - REQUEST
      - RESPONSE
      - TOKEN
    ProtocolAlgorithms:
      example:
        request:
          signature:
            scope: scope
            algorithm: algorithm
        response:
          signature:
            scope: scope
            algorithm: algorithm
      properties:
        request:
          $ref: '#/components/schemas/ProtocolAlgorithmType'
        response:
          $ref: '#/components/schemas/ProtocolAlgorithmType'
      type: object
    ProtocolEndpoint:
      example:
        destination: destination
        binding: binding
        type: type
        url: url
      properties:
        binding:
          type: string
          x-okta-known-values:
          - HTTP-POST
          - HTTP-REDIRECT
        destination:
          type: string
        type:
          type: string
          x-okta-known-values:
          - INSTANCE
          - ORG
        url:
          type: string
      type: object
    ProtocolEndpointBinding:
      type: string
      x-okta-known-values:
      - HTTP-POST
      - HTTP-REDIRECT
    ProtocolEndpointType:
      type: string
      x-okta-known-values:
      - INSTANCE
      - ORG
    ProtocolEndpoints:
      example:
        acs:
          destination: destination
          binding: binding
          type: type
          url: url
        authorization:
          destination: destination
          binding: binding
          type: type
          url: url
        userInfo:
          destination: destination
          binding: binding
          type: type
          url: url
        metadata:
          destination: destination
          binding: binding
          type: type
          url: url
        jwks:
          destination: destination
          binding: binding
          type: type
          url: url
        slo:
          destination: destination
          binding: binding
          type: type
          url: url
        sso:
          destination: destination
          binding: binding
          type: type
          url: url
        token:
          destination: destination
          binding: binding
          type: type
          url: url
      properties:
        acs:
          $ref: '#/components/schemas/ProtocolEndpoint'
        authorization:
          $ref: '#/components/schemas/ProtocolEndpoint'
        jwks:
          $ref: '#/components/schemas/ProtocolEndpoint'
        metadata:
          $ref: '#/components/schemas/ProtocolEndpoint'
        slo:
          $ref: '#/components/schemas/ProtocolEndpoint'
        sso:
          $ref: '#/components/schemas/ProtocolEndpoint'
        token:
          $ref: '#/components/schemas/ProtocolEndpoint'
        userInfo:
          $ref: '#/components/schemas/ProtocolEndpoint'
      type: object
    ProtocolRelayState:
      example:
        format: format
      properties:
        format:
          type: string
          x-okta-known-values:
          - FROM_URL
          - OPAQUE
      type: object
    ProtocolRelayStateFormat:
      type: string
      x-okta-known-values:
      - FROM_URL
      - OPAQUE
    ProtocolSettings:
      example:
        nameFormat: nameFormat
      properties:
        nameFormat:
          type: string
      type: object
    ProtocolType:
      type: string
      x-okta-known-values:
      - MTLS
      - OAUTH2
      - OIDC
      - SAML2
    ProviderType:
      type: string
      x-okta-known-values:
      - APNS
      - FCM
    Provisioning:
      properties:
        action:
          type: string
          x-okta-known-values:
          - AUTO
          - CALLOUT
          - DISABLED
        conditions:
          $ref: '#/components/schemas/ProvisioningConditions'
        groups:
          $ref: '#/components/schemas/ProvisioningGroups'
        profileMaster:
          type: boolean
      type: object
    ProvisioningAction:
      type: string
      x-okta-known-values:
      - AUTO
      - CALLOUT
      - DISABLED
    ProvisioningConditions:
      properties:
        deprovisioned:
          $ref: '#/components/schemas/ProvisioningDeprovisionedCondition'
        suspended:
          $ref: '#/components/schemas/ProvisioningSuspendedCondition'
      type: object
    ProvisioningConnection:
      example:
        _links:
          key: "{}"
        authScheme: authScheme
        status: status
      properties:
        authScheme:
          type: string
          x-okta-known-values:
          - TOKEN
          - UNKNOWN
        status:
          type: string
          x-okta-known-values:
          - DISABLED
          - ENABLED
          - UNKNOWN
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
      type: object
    ProvisioningConnectionAuthScheme:
      type: string
      x-okta-known-values:
      - TOKEN
      - UNKNOWN
    ProvisioningConnectionProfile:
      example:
        authScheme: authScheme
        token: token
      properties:
        authScheme:
          type: string
          x-okta-known-values:
          - TOKEN
          - UNKNOWN
        token:
          type: string
      type: object
    ProvisioningConnectionRequest:
      example:
        profile:
          authScheme: authScheme
          token: token
      properties:
        profile:
          $ref: '#/components/schemas/ProvisioningConnectionProfile'
      type: object
    ProvisioningConnectionStatus:
      type: string
      x-okta-known-values:
      - DISABLED
      - ENABLED
      - UNKNOWN
    ProvisioningDeprovisionedAction:
      type: string
      x-okta-known-values:
      - NONE
      - REACTIVATE
    ProvisioningDeprovisionedCondition:
      properties:
        action:
          type: string
          x-okta-known-values:
          - NONE
          - REACTIVATE
      type: object
    ProvisioningGroups:
      properties:
        action:
          type: string
          x-okta-known-values:
          - APPEND
          - ASSIGN
          - NONE
          - SYNC
        assignments:
          items:
            type: string
          type: array
        filter:
          items:
            type: string
          type: array
        sourceAttributeName:
          type: string
      type: object
    ProvisioningGroupsAction:
      type: string
      x-okta-known-values:
      - APPEND
      - ASSIGN
      - NONE
      - SYNC
    ProvisioningSuspendedAction:
      type: string
      x-okta-known-values:
      - NONE
      - UNSUSPEND
    ProvisioningSuspendedCondition:
      properties:
        action:
          type: string
          x-okta-known-values:
          - NONE
          - UNSUSPEND
      type: object
    PushProvider:
      discriminator:
        mapping:
          APNS: '#/components/schemas/APNSPushProvider'
          FCM: '#/components/schemas/FCMPushProvider'
        propertyName: providerType
      properties:
        id:
          readOnly: true
          type: string
        lastUpdatedDate:
          readOnly: true
          type: string
        name:
          description: Display name of the push provider
          type: string
        providerType:
          type: string
          x-okta-known-values:
          - APNS
          - FCM
        _links:
          $ref: '#/components/schemas/ApiToken__link'
      title: PushProvider
      type: object
    PushUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - $ref: '#/components/schemas/PushUserFactor_allOf'
    PushUserFactorProfile:
      properties:
        credentialId:
          type: string
        deviceToken:
          type: string
        deviceType:
          type: string
        name:
          type: string
        platform:
          type: string
        version:
          type: string
      type: object
    RecoveryQuestionCredential:
      example:
        answer: answer
        question: question
      properties:
        answer:
          type: string
        question:
          type: string
      type: object
    ReleaseChannel:
      description: Release channel for auto-update
      type: string
      x-okta-known-values:
      - BETA
      - EA
      - GA
      - TEST
    RequiredEnum:
      type: string
      x-okta-known-values:
      - ALWAYS
      - HIGH_RISK_ONLY
      - NEVER
    ResetPasswordToken:
      example:
        resetPasswordUrl: resetPasswordUrl
      properties:
        resetPasswordUrl:
          readOnly: true
          type: string
      type: object
    ResponseLinks:
      type: object
    RiskPolicyRuleCondition:
      properties:
        behaviors:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    RiskScorePolicyRuleCondition:
      properties:
        level:
          type: string
      type: object
    Role:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        label: label
        type: type
        assignmentType: assignmentType
        status: status
      properties:
        assignmentType:
          type: string
          x-okta-known-values:
          - GROUP
          - USER
        created:
          format: date-time
          readOnly: true
          type: string
        description:
          type: string
        id:
          readOnly: true
          type: string
        label:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - INACTIVE
        type:
          type: string
          x-okta-known-values:
          - API_ACCESS_MANAGEMENT_ADMIN
          - APP_ADMIN
          - GROUP_MEMBERSHIP_ADMIN
          - HELP_DESK_ADMIN
          - MOBILE_ADMIN
          - ORG_ADMIN
          - READ_ONLY_ADMIN
          - REPORT_ADMIN
          - SUPER_ADMIN
          - USER_ADMIN
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    RoleAssignmentType:
      type: string
      x-okta-known-values:
      - GROUP
      - USER
    RoleType:
      type: string
      x-okta-known-values:
      - API_ACCESS_MANAGEMENT_ADMIN
      - APP_ADMIN
      - GROUP_MEMBERSHIP_ADMIN
      - HELP_DESK_ADMIN
      - MOBILE_ADMIN
      - ORG_ADMIN
      - READ_ONLY_ADMIN
      - REPORT_ADMIN
      - SUPER_ADMIN
      - USER_ADMIN
    SamlApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - $ref: '#/components/schemas/SamlApplication_allOf'
    SamlApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - $ref: '#/components/schemas/SamlApplicationSettings_allOf'
    SamlApplicationSettingsApplication:
      properties:
        acsUrl:
          type: string
        audRestriction:
          type: string
        baseUrl:
          type: string
      type: object
    SamlApplicationSettingsSignOn:
      properties:
        acsEndpoints:
          items:
            $ref: '#/components/schemas/AcsEndpoint'
          type: array
        allowMultipleAcsEndpoints:
          type: boolean
        assertionSigned:
          type: boolean
        attributeStatements:
          items:
            $ref: '#/components/schemas/SamlAttributeStatement'
          type: array
        audience:
          type: string
        audienceOverride:
          type: string
        authnContextClassRef:
          type: string
        defaultRelayState:
          type: string
        destination:
          type: string
        destinationOverride:
          type: string
        digestAlgorithm:
          type: string
        honorForceAuthn:
          type: boolean
        idpIssuer:
          type: string
        inlineHooks:
          items:
            $ref: '#/components/schemas/SignOnInlineHook'
          type: array
        recipient:
          type: string
        recipientOverride:
          type: string
        requestCompressed:
          type: boolean
        responseSigned:
          type: boolean
        signatureAlgorithm:
          type: string
        slo:
          $ref: '#/components/schemas/SingleLogout'
        spCertificate:
          $ref: '#/components/schemas/SpCertificate'
        spIssuer:
          type: string
        ssoAcsUrl:
          type: string
        ssoAcsUrlOverride:
          type: string
        subjectNameIdFormat:
          type: string
        subjectNameIdTemplate:
          type: string
      type: object
    SamlAttributeStatement:
      properties:
        filterType:
          type: string
        filterValue:
          type: string
        name:
          type: string
        namespace:
          type: string
        type:
          type: string
        values:
          items:
            type: string
          type: array
      type: object
    ScheduledUserLifecycleAction:
      properties:
        status:
          type: string
          x-okta-known-values:
          - ACTIVATING
          - ACTIVE
          - DELETED
          - DELETING
          - EXPIRED_PASSWORD
          - INACTIVE
          - PENDING
          - SUSPENDED
      type: object
    SchemeApplicationCredentials:
      allOf:
      - $ref: '#/components/schemas/ApplicationCredentials'
      - $ref: '#/components/schemas/SchemeApplicationCredentials_allOf'
    ScreenLockType:
      type: string
      x-okta-known-values:
      - BIOMETRIC
      - PASSCODE
    SecurePasswordStoreApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - $ref: '#/components/schemas/SecurePasswordStoreApplication_allOf'
      x-okta-defined-as:
        name: template_sps
    SecurePasswordStoreApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - $ref: '#/components/schemas/SecurePasswordStoreApplicationSettings_allOf'
    SecurePasswordStoreApplicationSettingsApplication:
      properties:
        optionalField1:
          type: string
        optionalField1Value:
          type: string
        optionalField2:
          type: string
        optionalField2Value:
          type: string
        optionalField3:
          type: string
        optionalField3Value:
          type: string
        passwordField:
          type: string
        url:
          type: string
        usernameField:
          type: string
      type: object
    SecurityQuestion:
      example:
        answer: answer
        question: question
        questionText: questionText
      properties:
        answer:
          type: string
        question:
          type: string
        questionText:
          type: string
      type: object
    SecurityQuestionUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - $ref: '#/components/schemas/SecurityQuestionUserFactor_allOf'
    SecurityQuestionUserFactorProfile:
      properties:
        answer:
          type: string
        question:
          type: string
        questionText:
          type: string
      type: object
    SeedEnum:
      type: string
      x-okta-known-values:
      - OKTA
      - RANDOM
    Session:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        lastFactorVerification: 2000-01-23T04:56:07.000+00:00
        idp:
          id: id
          type: type
        _links:
          key: "{}"
        amr:
        - null
        - null
        id: id
        login: login
        userId: userId
        expiresAt: 2000-01-23T04:56:07.000+00:00
        lastPasswordVerification: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        amr:
          items:
            $ref: '#/components/schemas/SessionAuthenticationMethod'
          readOnly: true
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        idp:
          $ref: '#/components/schemas/SessionIdentityProvider'
        lastFactorVerification:
          format: date-time
          readOnly: true
          type: string
        lastPasswordVerification:
          format: date-time
          readOnly: true
          type: string
        login:
          readOnly: true
          type: string
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - MFA_ENROLL
          - MFA_REQUIRED
        userId:
          readOnly: true
          type: string
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    SessionAuthenticationMethod:
      type: string
      x-okta-known-values:
      - fpt
      - geo
      - hwk
      - kba
      - mca
      - mfa
      - otp
      - pwd
      - sc
      - sms
      - swk
      - tel
    SessionIdentityProvider:
      example:
        id: id
        type: type
      properties:
        id:
          readOnly: true
          type: string
        type:
          type: string
          x-okta-known-values:
          - ACTIVE_DIRECTORY
          - FEDERATION
          - LDAP
          - OKTA
          - SOCIAL
      type: object
    SessionIdentityProviderType:
      type: string
      x-okta-known-values:
      - ACTIVE_DIRECTORY
      - FEDERATION
      - LDAP
      - OKTA
      - SOCIAL
    SessionStatus:
      type: string
      x-okta-known-values:
      - ACTIVE
      - MFA_ENROLL
      - MFA_REQUIRED
    SignInPage:
      allOf:
      - $ref: '#/components/schemas/CustomizablePage'
      - $ref: '#/components/schemas/SignInPage_allOf'
    SignInPageTouchPointVariant:
      type: string
      x-okta-known-values:
      - BACKGROUND_IMAGE
      - BACKGROUND_SECONDARY_COLOR
      - OKTA_DEFAULT
    SignOnInlineHook:
      properties:
        id:
          readOnly: false
          type: string
    SingleLogout:
      properties:
        enabled:
          type: boolean
        issuer:
          type: string
        logoutUrl:
          type: string
      type: object
    SmsTemplate:
      example:
        template: template
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        translations: "{}"
        name: name
        id: id
        type: type
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        template:
          type: string
        translations:
          type: object
          x-okta-extensible: true
        type:
          type: string
          x-okta-known-values:
          - SMS_VERIFY_CODE
      type: object
    SmsTemplateTranslations:
      type: object
      x-okta-extensible: true
    SmsTemplateType:
      type: string
      x-okta-known-values:
      - SMS_VERIFY_CODE
    SmsUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - $ref: '#/components/schemas/SmsUserFactor_allOf'
    SmsUserFactorProfile:
      properties:
        phoneNumber:
          type: string
      type: object
    SocialAuthToken:
      example:
        id: id
        scopes:
        - scopes
        - scopes
        tokenType: tokenType
        expiresAt: 2000-01-23T04:56:07.000+00:00
        tokenAuthScheme: tokenAuthScheme
        token: token
      properties:
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        scopes:
          items:
            type: string
          type: array
        token:
          type: string
        tokenAuthScheme:
          type: string
        tokenType:
          type: string
      type: object
    SpCertificate:
      properties:
        x5c:
          items:
            type: string
          type: array
      type: object
    Subscription:
      example:
        channels:
        - channels
        - channels
        _links:
          key: "{}"
        notificationType: notificationType
        status: status
      properties:
        channels:
          items:
            type: string
          type: array
        notificationType:
          type: string
          x-okta-known-values:
          - AD_AGENT
          - APP_IMPORT
          - CONNECTOR_AGENT
          - IWA_AGENT
          - LDAP_AGENT
          - OKTA_ANNOUNCEMENT
          - OKTA_ISSUE
          - OKTA_UPDATE
          - RATELIMIT_NOTIFICATION
          - REPORT_SUSPICIOUS_ACTIVITY
          - USER_DEPROVISION
          - USER_LOCKED_OUT
        status:
          type: string
          x-okta-known-values:
          - subscribed
          - unsubscribed
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
      type: object
    SubscriptionStatus:
      type: string
      x-okta-known-values:
      - subscribed
      - unsubscribed
    SwaApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - $ref: '#/components/schemas/SwaApplicationSettings_allOf'
    SwaApplicationSettingsApplication:
      properties:
        buttonField:
          type: string
        buttonSelector:
          type: string
        checkbox:
          type: string
        extraFieldSelector:
          type: string
        extraFieldValue:
          type: string
        loginUrlRegex:
          type: string
        passwordField:
          type: string
        passwordSelector:
          type: string
        redirectUrl:
          type: string
        targetURL:
          type: string
        url:
          type: string
        usernameField:
          type: string
        userNameSelector:
          type: string
      type: object
    TempPassword:
      example:
        tempPassword: tempPassword
      properties:
        tempPassword:
          readOnly: true
          type: string
      type: object
    Theme:
      example:
        emailTemplateTouchPointVariant: emailTemplateTouchPointVariant
        signInPageTouchPointVariant: signInPageTouchPointVariant
        primaryColorContrastHex: primaryColorContrastHex
        _links:
          key: "{}"
        backgroundImage: backgroundImage
        secondaryColorHex: secondaryColorHex
        secondaryColorContrastHex: secondaryColorContrastHex
        primaryColorHex: primaryColorHex
        errorPageTouchPointVariant: errorPageTouchPointVariant
        endUserDashboardTouchPointVariant: endUserDashboardTouchPointVariant
      properties:
        backgroundImage:
          readOnly: true
          type: string
        emailTemplateTouchPointVariant:
          type: string
          x-okta-known-values:
          - FULL_THEME
          - OKTA_DEFAULT
        endUserDashboardTouchPointVariant:
          type: string
          x-okta-known-values:
          - FULL_THEME
          - LOGO_ON_FULL_WHITE_BACKGROUND
          - OKTA_DEFAULT
          - WHITE_LOGO_BACKGROUND
        errorPageTouchPointVariant:
          type: string
          x-okta-known-values:
          - BACKGROUND_IMAGE
          - BACKGROUND_SECONDARY_COLOR
          - OKTA_DEFAULT
        primaryColorContrastHex:
          type: string
        primaryColorHex:
          type: string
        secondaryColorContrastHex:
          type: string
        secondaryColorHex:
          type: string
        signInPageTouchPointVariant:
          type: string
          x-okta-known-values:
          - BACKGROUND_IMAGE
          - BACKGROUND_SECONDARY_COLOR
          - OKTA_DEFAULT
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
      type: object
    ThemeResponse:
      example:
        primaryColorContrastHex: primaryColorContrastHex
        favicon: favicon
        _links:
          key: "{}"
        backgroundImage: backgroundImage
        secondaryColorHex: secondaryColorHex
        secondaryColorContrastHex: secondaryColorContrastHex
        primaryColorHex: primaryColorHex
        errorPageTouchPointVariant: errorPageTouchPointVariant
        emailTemplateTouchPointVariant: emailTemplateTouchPointVariant
        signInPageTouchPointVariant: signInPageTouchPointVariant
        logo: logo
        id: id
        endUserDashboardTouchPointVariant: endUserDashboardTouchPointVariant
      properties:
        backgroundImage:
          readOnly: true
          type: string
        emailTemplateTouchPointVariant:
          type: string
          x-okta-known-values:
          - FULL_THEME
          - OKTA_DEFAULT
        endUserDashboardTouchPointVariant:
          type: string
          x-okta-known-values:
          - FULL_THEME
          - LOGO_ON_FULL_WHITE_BACKGROUND
          - OKTA_DEFAULT
          - WHITE_LOGO_BACKGROUND
        errorPageTouchPointVariant:
          type: string
          x-okta-known-values:
          - BACKGROUND_IMAGE
          - BACKGROUND_SECONDARY_COLOR
          - OKTA_DEFAULT
        favicon:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        logo:
          readOnly: true
          type: string
        primaryColorContrastHex:
          type: string
        primaryColorHex:
          type: string
        secondaryColorContrastHex:
          type: string
        secondaryColorHex:
          type: string
        signInPageTouchPointVariant:
          type: string
          x-okta-known-values:
          - BACKGROUND_IMAGE
          - BACKGROUND_SECONDARY_COLOR
          - OKTA_DEFAULT
        _links:
          additionalProperties:
            type: object
          readOnly: true
          type: object
      type: object
    ThreatInsightConfiguration:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        excludeZones:
        - excludeZones
        - excludeZones
        action: action
      properties:
        action:
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        excludeZones:
          items:
            type: string
          type: array
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    TimeDuration:
      description: "A time duration specified as an [ISO-8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations)."
      pattern: ^P(?!$)(\d+Y)?(\d+M)?(\d+W)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+S)?)?$
      type: string
    TokenAuthorizationServerPolicyRuleAction:
      properties:
        accessTokenLifetimeMinutes:
          type: integer
        inlineHook:
          $ref: '#/components/schemas/TokenAuthorizationServerPolicyRuleActionInlineHook'
        refreshTokenLifetimeMinutes:
          type: integer
        refreshTokenWindowMinutes:
          type: integer
      type: object
    TokenAuthorizationServerPolicyRuleActionInlineHook:
      properties:
        id:
          readOnly: false
          type: string
      type: object
    TokenUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - $ref: '#/components/schemas/TokenUserFactor_allOf'
    TokenUserFactorProfile:
      properties:
        credentialId:
          type: string
      type: object
    TotpUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - $ref: '#/components/schemas/TotpUserFactor_allOf'
    TotpUserFactorProfile:
      properties:
        credentialId:
          type: string
      type: object
    TrustedOrigin:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        lastUpdatedBy: lastUpdatedBy
        createdBy: createdBy
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        origin: origin
        name: name
        id: id
        scopes:
        - allowedOktaApps:
          - null
          - null
          type: type
        - allowedOktaApps:
          - null
          - null
          type: type
        status: status
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          type: string
        name:
          type: string
        origin:
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/TrustedOriginScope'
          type: array
        status:
          type: string
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    TrustedOriginScope:
      example:
        allowedOktaApps:
        - null
        - null
        type: type
      properties:
        allowedOktaApps:
          items:
            $ref: '#/components/schemas/IframeEmbedScopeAllowedApps'
          type: array
        type:
          type: string
          x-okta-known-values:
          - CORS
          - IFRAME_EMBED
          - REDIRECT
      type: object
    TrustedOriginScopeType:
      type: string
      x-okta-known-values:
      - CORS
      - IFRAME_EMBED
      - REDIRECT
    U2fUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - $ref: '#/components/schemas/U2fUserFactor_allOf'
    U2fUserFactorProfile:
      properties:
        credentialId:
          type: string
      type: object
    UpdateEmailDomain:
      allOf:
      - $ref: '#/components/schemas/BaseEmailDomain'
    UpdateUserRequest:
      example:
        credentials:
          password:
            hook:
              type: type
            value: value
            hash:
              salt: salt
              saltOrder: saltOrder
              workFactor: 0
              value: value
              algorithm: algorithm
          provider:
            name: name
            type: type
          recovery_question:
            answer: answer
            question: question
        profile:
          profileUrl: profileUrl
          lastName: lastName
          zipCode: zipCode
          preferredLanguage: preferredLanguage
          city: city
          displayName: displayName
          timezone: timezone
          locale: locale
          login: login
          title: title
          employeeNumber: employeeNumber
          division: division
          honorificSuffix: honorificSuffix
          countryCode: countryCode
          state: state
          department: department
          email: email
          manager: manager
          costCenter: costCenter
          nickName: nickName
          secondEmail: secondEmail
          honorificPrefix: honorificPrefix
          managerId: managerId
          firstName: firstName
          primaryPhone: primaryPhone
          postalAddress: postalAddress
          mobilePhone: mobilePhone
          streetAddress: streetAddress
          organization: organization
          middleName: middleName
          userType: userType
      properties:
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        profile:
          $ref: '#/components/schemas/UserProfile'
      type: object
    User:
      example:
        lastLogin: 2000-01-23T04:56:07.000+00:00
        transitioningToStatus: transitioningToStatus
        credentials:
          password:
            hook:
              type: type
            value: value
            hash:
              salt: salt
              saltOrder: saltOrder
              workFactor: 0
              value: value
              algorithm: algorithm
          provider:
            name: name
            type: type
          recovery_question:
            answer: answer
            question: question
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          profileUrl: profileUrl
          lastName: lastName
          zipCode: zipCode
          preferredLanguage: preferredLanguage
          city: city
          displayName: displayName
          timezone: timezone
          locale: locale
          login: login
          title: title
          employeeNumber: employeeNumber
          division: division
          honorificSuffix: honorificSuffix
          countryCode: countryCode
          state: state
          department: department
          email: email
          manager: manager
          costCenter: costCenter
          nickName: nickName
          secondEmail: secondEmail
          honorificPrefix: honorificPrefix
          managerId: managerId
          firstName: firstName
          primaryPhone: primaryPhone
          postalAddress: postalAddress
          mobilePhone: mobilePhone
          streetAddress: streetAddress
          organization: organization
          middleName: middleName
          userType: userType
        type:
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          lastUpdatedBy: lastUpdatedBy
          default: true
          createdBy: createdBy
          _links:
            key: "{}"
          created: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          name: name
          description: description
          id: id
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        passwordChanged: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: "{}"
        statusChanged: 2000-01-23T04:56:07.000+00:00
        id: id
        activated: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        activated:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        id:
          readOnly: true
          type: string
        lastLogin:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        passwordChanged:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        profile:
          $ref: '#/components/schemas/UserProfile'
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - DEPROVISIONED
          - LOCKED_OUT
          - PASSWORD_EXPIRED
          - PROVISIONED
          - RECOVERY
          - STAGED
          - SUSPENDED
        statusChanged:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        transitioningToStatus:
          type: string
          x-okta-known-values:
          - ACTIVE
          - DEPROVISIONED
          - LOCKED_OUT
          - PASSWORD_EXPIRED
          - PROVISIONED
          - RECOVERY
          - STAGED
          - SUSPENDED
        type:
          $ref: '#/components/schemas/UserType'
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    UserActivationToken:
      example:
        activationUrl: activationUrl
        activationToken: activationToken
      properties:
        activationToken:
          readOnly: true
          type: string
        activationUrl:
          readOnly: true
          type: string
      type: object
    UserCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
    UserCredentials:
      example:
        password:
          hook:
            type: type
          value: value
          hash:
            salt: salt
            saltOrder: saltOrder
            workFactor: 0
            value: value
            algorithm: algorithm
        provider:
          name: name
          type: type
        recovery_question:
          answer: answer
          question: question
      properties:
        password:
          $ref: '#/components/schemas/PasswordCredential'
        provider:
          $ref: '#/components/schemas/AuthenticationProvider'
        recovery_question:
          $ref: '#/components/schemas/RecoveryQuestionCredential'
      type: object
    UserFactor:
      discriminator:
        mapping:
          call: '#/components/schemas/CallUserFactor'
          email: '#/components/schemas/EmailUserFactor'
          push: '#/components/schemas/PushUserFactor'
          question: '#/components/schemas/SecurityQuestionUserFactor'
          sms: '#/components/schemas/SmsUserFactor'
          token: '#/components/schemas/TokenUserFactor'
          token:hardware: '#/components/schemas/HardwareUserFactor'
          token:hotp: '#/components/schemas/CustomHotpUserFactor'
          token:software:totp: '#/components/schemas/TotpUserFactor'
          u2f: '#/components/schemas/U2fUserFactor'
          web: '#/components/schemas/WebUserFactor'
          webauthn: '#/components/schemas/WebAuthnUserFactor'
          hotp: '#/components/schemas/CustomHotpUserFactor'
        propertyName: factorType
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        factorType:
          type: string
          x-okta-known-values:
          - call
          - email
          - hotp
          - push
          - question
          - sms
          - token
          - token:hardware
          - token:hotp
          - token:software:totp
          - u2f
          - web
          - webauthn
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        provider:
          type: string
          x-okta-known-values:
          - CUSTOM
          - DUO
          - FIDO
          - GOOGLE
          - OKTA
          - RSA
          - SYMANTEC
          - YUBICO
        status:
          type: string
          x-okta-known-values:
          - ACTIVE
          - DISABLED
          - ENROLLED
          - EXPIRED
          - INACTIVE
          - NOT_SETUP
          - PENDING_ACTIVATION
        verify:
          $ref: '#/components/schemas/VerifyFactorRequest'
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    UserIdentifierConditionEvaluatorPattern:
      properties:
        matchType:
          type: string
          x-okta-known-values:
          - CONTAINS
          - EQUALS
          - EXPRESSION
          - STARTS_WITH
          - SUFFIX
        value:
          type: string
      type: object
    UserIdentifierMatchType:
      type: string
      x-okta-known-values:
      - CONTAINS
      - EQUALS
      - EXPRESSION
      - STARTS_WITH
      - SUFFIX
    UserIdentifierPolicyRuleCondition:
      properties:
        attribute:
          type: string
        patterns:
          items:
            $ref: '#/components/schemas/UserIdentifierConditionEvaluatorPattern'
          type: array
        type:
          type: string
          x-okta-known-values:
          - ATTRIBUTE
          - IDENTIFIER
      type: object
    UserIdentifierType:
      type: string
      x-okta-known-values:
      - ATTRIBUTE
      - IDENTIFIER
    UserIdentityProviderLinkRequest:
      example:
        externalId: externalId
      properties:
        externalId:
          type: string
      type: object
    UserLifecycleAttributePolicyRuleCondition:
      properties:
        attributeName:
          type: string
        matchingValue:
          type: string
      type: object
    UserNextLogin:
      type: string
      x-okta-known-values:
      - changePassword
    UserPolicyRuleCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        inactivity:
          $ref: '#/components/schemas/InactivityPolicyRuleCondition'
        include:
          items:
            type: string
          type: array
        lifecycleExpiration:
          $ref: '#/components/schemas/LifecycleExpirationPolicyRuleCondition'
        passwordExpiration:
          $ref: '#/components/schemas/PasswordExpirationPolicyRuleCondition'
        userLifecycleAttribute:
          $ref: '#/components/schemas/UserLifecycleAttributePolicyRuleCondition'
      type: object
    UserProfile:
      example:
        profileUrl: profileUrl
        lastName: lastName
        zipCode: zipCode
        preferredLanguage: preferredLanguage
        city: city
        displayName: displayName
        timezone: timezone
        locale: locale
        login: login
        title: title
        employeeNumber: employeeNumber
        division: division
        honorificSuffix: honorificSuffix
        countryCode: countryCode
        state: state
        department: department
        email: email
        manager: manager
        costCenter: costCenter
        nickName: nickName
        secondEmail: secondEmail
        honorificPrefix: honorificPrefix
        managerId: managerId
        firstName: firstName
        primaryPhone: primaryPhone
        postalAddress: postalAddress
        mobilePhone: mobilePhone
        streetAddress: streetAddress
        organization: organization
        middleName: middleName
        userType: userType
      properties:
        city:
          maxLength: 128
          nullable: true
          type: string
        costCenter:
          type: string
        countryCode:
          maxLength: 2
          nullable: true
          type: string
        department:
          type: string
        displayName:
          type: string
        division:
          type: string
        email:
          format: email
          maxLength: 100
          minLength: 5
          type: string
        employeeNumber:
          type: string
        firstName:
          maxLength: 50
          minLength: 1
          nullable: true
          type: string
        honorificPrefix:
          type: string
        honorificSuffix:
          type: string
        lastName:
          maxLength: 50
          minLength: 1
          nullable: true
          type: string
        locale:
          description: "The language specified as an [IETF BCP 47 language tag](https://datatracker.ietf.org/doc/html/rfc5646)."
          type: string
        login:
          maxLength: 100
          type: string
        manager:
          type: string
        managerId:
          type: string
        middleName:
          type: string
        mobilePhone:
          maxLength: 100
          nullable: true
          type: string
        nickName:
          type: string
        organization:
          type: string
        postalAddress:
          maxLength: 4096
          nullable: true
          type: string
        preferredLanguage:
          type: string
        primaryPhone:
          maxLength: 100
          nullable: true
          type: string
        profileUrl:
          type: string
        secondEmail:
          format: email
          maxLength: 100
          minLength: 5
          nullable: true
          type: string
        state:
          maxLength: 128
          nullable: true
          type: string
        streetAddress:
          maxLength: 1024
          nullable: true
          type: string
        timezone:
          type: string
        title:
          type: string
        userType:
          type: string
        zipCode:
          maxLength: 50
          nullable: true
          type: string
      type: object
      x-okta-extensible: true
    UserSchema:
      example:
        lastUpdated: lastUpdated
        $schema: $schema
        _links:
          key: "{}"
        created: created
        name: name
        id: id
        title: title
        type: type
        definitions:
          custom:
            id: id
            type: type
            properties:
              key:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
            required:
            - required
            - required
          base:
            id: id
            type: type
            properties:
              profileUrl:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              lastName:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              zipCode:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              preferredLanguage:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              city:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              displayName:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              timezone:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              locale:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              login:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              title:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              employeeNumber:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              division:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              honorificSuffix:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              countryCode:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              state:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              department:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              email:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              manager:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              costCenter:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              nickName:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              secondEmail:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              honorificPrefix:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              managerId:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              firstName:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              primaryPhone:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              postalAddress:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              mobilePhone:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              streetAddress:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              organization:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              middleName:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
              userType:
                minLength: 6
                externalNamespace: externalNamespace
                pattern: pattern
                description: description
                union: union
                title: title
                type: type
                enum:
                - enum
                - enum
                required: true
                master:
                  priority:
                  - type: type
                    value: value
                  - type: type
                    value: value
                  type: type
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                permissions:
                - principal: principal
                  action: action
                - principal: principal
                  action: action
                externalName: externalName
                scope: scope
                unique: unique
                mutability: mutability
                items:
                  oneOf:
                  - const: const
                    title: title
                  - const: const
                    title: title
                  type: type
                  enum:
                  - enum
                  - enum
                maxLength: 0
            required:
            - required
            - required
        properties:
          profile:
            allOf:
            - $ref: $ref
            - $ref: $ref
      properties:
        $schema:
          readOnly: true
          type: string
        created:
          readOnly: true
          type: string
        definitions:
          $ref: '#/components/schemas/UserSchemaDefinitions'
        id:
          readOnly: true
          type: string
        lastUpdated:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaProperties'
        title:
          type: string
        type:
          readOnly: true
          type: string
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    UserSchemaAttribute:
      example:
        minLength: 6
        externalNamespace: externalNamespace
        pattern: pattern
        description: description
        union: union
        title: title
        type: type
        enum:
        - enum
        - enum
        required: true
        master:
          priority:
          - type: type
            value: value
          - type: type
            value: value
          type: type
        oneOf:
        - const: const
          title: title
        - const: const
          title: title
        permissions:
        - principal: principal
          action: action
        - principal: principal
          action: action
        externalName: externalName
        scope: scope
        unique: unique
        mutability: mutability
        items:
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          type: type
          enum:
          - enum
          - enum
        maxLength: 0
      properties:
        description:
          type: string
        enum:
          items:
            type: string
          type: array
        externalName:
          type: string
        externalNamespace:
          type: string
        items:
          $ref: '#/components/schemas/UserSchemaAttributeItems'
        master:
          $ref: '#/components/schemas/UserSchemaAttributeMaster'
        maxLength:
          type: integer
        minLength:
          type: integer
        mutability:
          type: string
        oneOf:
          items:
            $ref: '#/components/schemas/UserSchemaAttributeEnum'
          type: array
        pattern:
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/UserSchemaAttributePermission'
          type: array
        required:
          type: boolean
        scope:
          type: string
          x-okta-known-values:
          - NONE
          - SELF
        title:
          type: string
        type:
          type: string
          x-okta-known-values:
          - array
          - boolean
          - integer
          - number
          - string
        union:
          type: string
          x-okta-known-values:
          - DISABLE
          - ENABLE
        unique:
          type: string
      type: object
      x-okta-allow-null-property-value-for-updates: true
    UserSchemaAttributeEnum:
      example:
        const: const
        title: title
      properties:
        const:
          type: string
        title:
          type: string
      type: object
    UserSchemaAttributeItems:
      example:
        oneOf:
        - const: const
          title: title
        - const: const
          title: title
        type: type
        enum:
        - enum
        - enum
      properties:
        enum:
          items:
            type: string
          type: array
        oneOf:
          items:
            $ref: '#/components/schemas/UserSchemaAttributeEnum'
          type: array
        type:
          type: string
      type: object
    UserSchemaAttributeMaster:
      example:
        priority:
        - type: type
          value: value
        - type: type
          value: value
        type: type
      properties:
        priority:
          items:
            $ref: '#/components/schemas/UserSchemaAttributeMasterPriority'
          type: array
        type:
          type: string
          x-okta-known-values:
          - OKTA
          - OVERRIDE
          - PROFILE_MASTER
      type: object
    UserSchemaAttributeMasterPriority:
      example:
        type: type
        value: value
      properties:
        type:
          type: string
        value:
          type: string
      type: object
    UserSchemaAttributeMasterType:
      type: string
      x-okta-known-values:
      - OKTA
      - OVERRIDE
      - PROFILE_MASTER
    UserSchemaAttributePermission:
      example:
        principal: principal
        action: action
      properties:
        action:
          type: string
        principal:
          type: string
      type: object
    UserSchemaAttributeScope:
      type: string
      x-okta-known-values:
      - NONE
      - SELF
    UserSchemaAttributeType:
      type: string
      x-okta-known-values:
      - array
      - boolean
      - integer
      - number
      - string
    UserSchemaAttributeUnion:
      type: string
      x-okta-known-values:
      - DISABLE
      - ENABLE
    UserSchemaBase:
      example:
        id: id
        type: type
        properties:
          profileUrl:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          lastName:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          zipCode:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          preferredLanguage:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          city:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          displayName:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          timezone:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          locale:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          login:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          title:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          employeeNumber:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          division:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          honorificSuffix:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          countryCode:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          state:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          department:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          email:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          manager:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          costCenter:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          nickName:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          secondEmail:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          honorificPrefix:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          managerId:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          firstName:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          primaryPhone:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          postalAddress:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          mobilePhone:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          streetAddress:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          organization:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          middleName:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
          userType:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
        required:
        - required
        - required
      properties:
        id:
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaBaseProperties'
        required:
          items:
            type: string
          type: array
        type:
          type: string
      type: object
    UserSchemaBaseProperties:
      example:
        profileUrl:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        lastName:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        zipCode:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        preferredLanguage:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        city:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        displayName:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        timezone:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        locale:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        login:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        title:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        employeeNumber:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        division:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        honorificSuffix:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        countryCode:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        state:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        department:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        email:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        manager:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        costCenter:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        nickName:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        secondEmail:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        honorificPrefix:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        managerId:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        firstName:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        primaryPhone:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        postalAddress:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        mobilePhone:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        streetAddress:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        organization:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        middleName:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
        userType:
          minLength: 6
          externalNamespace: externalNamespace
          pattern: pattern
          description: description
          union: union
          title: title
          type: type
          enum:
          - enum
          - enum
          required: true
          master:
            priority:
            - type: type
              value: value
            - type: type
              value: value
            type: type
          oneOf:
          - const: const
            title: title
          - const: const
            title: title
          permissions:
          - principal: principal
            action: action
          - principal: principal
            action: action
          externalName: externalName
          scope: scope
          unique: unique
          mutability: mutability
          items:
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            type: type
            enum:
            - enum
            - enum
          maxLength: 0
      properties:
        city:
          $ref: '#/components/schemas/UserSchemaAttribute'
        costCenter:
          $ref: '#/components/schemas/UserSchemaAttribute'
        countryCode:
          $ref: '#/components/schemas/UserSchemaAttribute'
        department:
          $ref: '#/components/schemas/UserSchemaAttribute'
        displayName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        division:
          $ref: '#/components/schemas/UserSchemaAttribute'
        email:
          $ref: '#/components/schemas/UserSchemaAttribute'
        employeeNumber:
          $ref: '#/components/schemas/UserSchemaAttribute'
        firstName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        honorificPrefix:
          $ref: '#/components/schemas/UserSchemaAttribute'
        honorificSuffix:
          $ref: '#/components/schemas/UserSchemaAttribute'
        lastName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        locale:
          $ref: '#/components/schemas/UserSchemaAttribute'
        login:
          $ref: '#/components/schemas/UserSchemaAttribute'
        manager:
          $ref: '#/components/schemas/UserSchemaAttribute'
        managerId:
          $ref: '#/components/schemas/UserSchemaAttribute'
        middleName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        mobilePhone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        nickName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        organization:
          $ref: '#/components/schemas/UserSchemaAttribute'
        postalAddress:
          $ref: '#/components/schemas/UserSchemaAttribute'
        preferredLanguage:
          $ref: '#/components/schemas/UserSchemaAttribute'
        primaryPhone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        profileUrl:
          $ref: '#/components/schemas/UserSchemaAttribute'
        secondEmail:
          $ref: '#/components/schemas/UserSchemaAttribute'
        state:
          $ref: '#/components/schemas/UserSchemaAttribute'
        streetAddress:
          $ref: '#/components/schemas/UserSchemaAttribute'
        timezone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        title:
          $ref: '#/components/schemas/UserSchemaAttribute'
        userType:
          $ref: '#/components/schemas/UserSchemaAttribute'
        zipCode:
          $ref: '#/components/schemas/UserSchemaAttribute'
      type: object
    UserSchemaDefinitions:
      example:
        custom:
          id: id
          type: type
          properties:
            key:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
          required:
          - required
          - required
        base:
          id: id
          type: type
          properties:
            profileUrl:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            lastName:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            zipCode:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            preferredLanguage:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            city:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            displayName:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            timezone:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            locale:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            login:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            title:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            employeeNumber:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            division:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            honorificSuffix:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            countryCode:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            state:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            department:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            email:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            manager:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            costCenter:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            nickName:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            secondEmail:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            honorificPrefix:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            managerId:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            firstName:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            primaryPhone:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            postalAddress:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            mobilePhone:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            streetAddress:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            organization:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            middleName:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
            userType:
              minLength: 6
              externalNamespace: externalNamespace
              pattern: pattern
              description: description
              union: union
              title: title
              type: type
              enum:
              - enum
              - enum
              required: true
              master:
                priority:
                - type: type
                  value: value
                - type: type
                  value: value
                type: type
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              permissions:
              - principal: principal
                action: action
              - principal: principal
                action: action
              externalName: externalName
              scope: scope
              unique: unique
              mutability: mutability
              items:
                oneOf:
                - const: const
                  title: title
                - const: const
                  title: title
                type: type
                enum:
                - enum
                - enum
              maxLength: 0
          required:
          - required
          - required
      properties:
        base:
          $ref: '#/components/schemas/UserSchemaBase'
        custom:
          $ref: '#/components/schemas/UserSchemaPublic'
      type: object
    UserSchemaProperties:
      example:
        profile:
          allOf:
          - $ref: $ref
          - $ref: $ref
      properties:
        profile:
          $ref: '#/components/schemas/UserSchemaPropertiesProfile'
      type: object
    UserSchemaPropertiesProfile:
      example:
        allOf:
        - $ref: $ref
        - $ref: $ref
      properties:
        allOf:
          items:
            $ref: '#/components/schemas/UserSchemaPropertiesProfileItem'
          type: array
      type: object
    UserSchemaPropertiesProfileItem:
      example:
        $ref: $ref
      properties:
        $ref:
          type: string
      type: object
    UserSchemaPublic:
      example:
        id: id
        type: type
        properties:
          key:
            minLength: 6
            externalNamespace: externalNamespace
            pattern: pattern
            description: description
            union: union
            title: title
            type: type
            enum:
            - enum
            - enum
            required: true
            master:
              priority:
              - type: type
                value: value
              - type: type
                value: value
              type: type
            oneOf:
            - const: const
              title: title
            - const: const
              title: title
            permissions:
            - principal: principal
              action: action
            - principal: principal
              action: action
            externalName: externalName
            scope: scope
            unique: unique
            mutability: mutability
            items:
              oneOf:
              - const: const
                title: title
              - const: const
                title: title
              type: type
              enum:
              - enum
              - enum
            maxLength: 0
        required:
        - required
        - required
      properties:
        id:
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/UserSchemaAttribute'
          type: object
        required:
          items:
            type: string
          type: array
        type:
          type: string
      type: object
    UserStatus:
      type: string
      x-okta-known-values:
      - ACTIVE
      - DEPROVISIONED
      - LOCKED_OUT
      - PASSWORD_EXPIRED
      - PROVISIONED
      - RECOVERY
      - STAGED
      - SUSPENDED
    UserStatusPolicyRuleCondition:
      properties:
        value:
          type: string
          x-okta-known-values:
          - ACTIVATING
          - ACTIVE
          - DELETED
          - DELETING
          - EXPIRED_PASSWORD
          - INACTIVE
          - PENDING
          - SUSPENDED
      type: object
    UserType:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        lastUpdatedBy: lastUpdatedBy
        default: true
        createdBy: createdBy
        _links:
          key: "{}"
        created: 2000-01-23T04:56:07.000+00:00
        displayName: displayName
        name: name
        description: description
        id: id
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          readOnly: true
          type: string
        default:
          readOnly: true
          type: boolean
        description:
          type: string
        displayName:
          type: string
        id:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          readOnly: true
          type: string
        name:
          type: string
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    UserTypeCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
    UserVerificationEnum:
      type: string
      x-okta-known-values:
      - PREFERRED
      - REQUIRED
    VerificationMethod:
      properties:
        constraints:
          items:
            $ref: '#/components/schemas/AccessPolicyConstraints'
          type: array
        factorMode:
          type: string
        reauthenticateIn:
          type: string
        type:
          type: string
      type: object
    VerifyFactorRequest:
      example:
        attestation: attestation
        answer: answer
        nextPassCode: nextPassCode
        stateToken: stateToken
        clientData: clientData
        passCode: passCode
        registrationData: registrationData
        activationToken: activationToken
      properties:
        activationToken:
          type: string
        answer:
          type: string
        attestation:
          type: string
        clientData:
          type: string
        nextPassCode:
          type: string
        passCode:
          type: string
        registrationData:
          type: string
        stateToken:
          type: string
      type: object
    VerifyUserFactorResponse:
      example:
        factorResultMessage: factorResultMessage
        _embedded:
          key: "{}"
        _links:
          key: "{}"
        factorResult: factorResult
        expiresAt: 2000-01-23T04:56:07.000+00:00
      properties:
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        factorResult:
          type: string
          x-okta-known-values:
          - CHALLENGE
          - ERROR
          - EXPIRED
          - FAILED
          - PASSCODE_REPLAYED
          - REJECTED
          - SUCCESS
          - TIMEOUT
          - TIME_WINDOW_EXCEEDED
          - WAITING
        factorResultMessage:
          type: string
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
    VerifyUserFactorResult:
      type: string
      x-okta-known-values:
      - CHALLENGE
      - ERROR
      - EXPIRED
      - FAILED
      - PASSCODE_REPLAYED
      - REJECTED
      - SUCCESS
      - TIMEOUT
      - TIME_WINDOW_EXCEEDED
      - WAITING
    Version:
      description: "The version specified as a [Semantic Version](https://semver.org/)."
      pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\\
        d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
        +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
      type: string
    VersionObject:
      example:
        minimum: minimum
      properties:
        minimum:
          type: string
      type: object
    WebAuthnUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - $ref: '#/components/schemas/WebAuthnUserFactor_allOf'
    WebAuthnUserFactorProfile:
      properties:
        authenticatorName:
          type: string
        credentialId:
          type: string
      type: object
    WebUserFactor:
      allOf:
      - $ref: '#/components/schemas/UserFactor'
      - $ref: '#/components/schemas/WebUserFactor_allOf'
    WebUserFactorProfile:
      properties:
        credentialId:
          type: string
      type: object
    WsFederationApplication:
      allOf:
      - $ref: '#/components/schemas/Application'
      - $ref: '#/components/schemas/WsFederationApplication_allOf'
      x-okta-defined-as:
        name: template_wsfed
    WsFederationApplicationSettings:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettings'
      - $ref: '#/components/schemas/WsFederationApplicationSettings_allOf'
    WsFederationApplicationSettingsApplication:
      properties:
        attributeStatements:
          type: string
        audienceRestriction:
          type: string
        authnContextClassRef:
          type: string
        groupFilter:
          type: string
        groupName:
          type: string
        groupValueFormat:
          type: string
        nameIDFormat:
          type: string
        realm:
          type: string
        siteURL:
          type: string
        usernameAttribute:
          type: string
        wReplyOverride:
          type: boolean
        wReplyURL:
          type: string
      type: object
    listApplications_200_response_inner:
      discriminator:
        mapping:
          AUTO_LOGIN: '#/components/schemas/AutoLoginApplication'
          BASIC_AUTH: '#/components/schemas/BasicAuthApplication'
          BOOKMARK: '#/components/schemas/BookmarkApplication'
          BROWSER_PLUGIN: '#/components/schemas/BrowserPluginApplication'
          OPENID_CONNECT: '#/components/schemas/OpenIdConnectApplication'
          SAML_1_1: '#/components/schemas/SamlApplication'
          SAML_2_0: '#/components/schemas/SamlApplication'
          SECURE_PASSWORD_STORE: '#/components/schemas/SecurePasswordStoreApplication'
          WS_FEDERATION: '#/components/schemas/WsFederationApplication'
        propertyName: signOnMode
      oneOf:
      - $ref: '#/components/schemas/AutoLoginApplication'
      - $ref: '#/components/schemas/BasicAuthApplication'
      - $ref: '#/components/schemas/BookmarkApplication'
      - $ref: '#/components/schemas/BrowserPluginApplication'
      - $ref: '#/components/schemas/OpenIdConnectApplication'
      - $ref: '#/components/schemas/SamlApplication'
      - $ref: '#/components/schemas/SecurePasswordStoreApplication'
      - $ref: '#/components/schemas/WsFederationApplication'
    uploadApplicationLogo_request:
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
    listBehaviorDetectionRules_200_response_inner:
      discriminator:
        mapping:
          ANOMALOUS_LOCATION: '#/components/schemas/BehaviorRuleAnomalousLocation'
          ANOMALOUS_IP: '#/components/schemas/BehaviorRuleAnomalousIP'
          ANOMALOUS_DEVICE: '#/components/schemas/BehaviorRuleAnomalousDevice'
          VELOCITY: '#/components/schemas/BehaviorRuleVelocity'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/BehaviorRuleAnomalousLocation'
      - $ref: '#/components/schemas/BehaviorRuleAnomalousIP'
      - $ref: '#/components/schemas/BehaviorRuleAnomalousDevice'
      - $ref: '#/components/schemas/BehaviorRuleVelocity'
    uploadBrandThemeBackgroundImage_request:
      description: "The file must be in PNG, JPG, or GIF format and less than 2 MB\
        \ in size."
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
    uploadBrandThemeFavicon_request:
      description: "The file must be in PNG, or ico format and less than ?? in size\
        \ and 128 x 128 dimensions"
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
    uploadBrandThemeLogo_request:
      description: "The file must be in PNG, JPG, or GIF format and less than 100kB\
        \ in size. For best results use landscape orientation, a transparent background,\
        \ and a minimum size of 300px by 50px to prevent upscaling."
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
    listPolicies_200_response_inner:
      discriminator:
        mapping:
          ACCESS_POLICY: '#/components/schemas/AccessPolicy'
          IDP_DISCOVERY: '#/components/schemas/IdentityProviderPolicy'
          MFA_ENROLL: '#/components/schemas/MultifactorEnrollmentPolicy'
          OAUTH_AUTHORIZATION_POLICY: '#/components/schemas/AuthorizationServerPolicy'
          OKTA_SIGN_ON: '#/components/schemas/OktaSignOnPolicy'
          PASSWORD: '#/components/schemas/PasswordPolicy'
          PROFILE_ENROLLMENT: '#/components/schemas/ProfileEnrollmentPolicy'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AccessPolicy'
      - $ref: '#/components/schemas/IdentityProviderPolicy'
      - $ref: '#/components/schemas/MultifactorEnrollmentPolicy'
      - $ref: '#/components/schemas/AuthorizationServerPolicy'
      - $ref: '#/components/schemas/OktaSignOnPolicy'
      - $ref: '#/components/schemas/PasswordPolicy'
      - $ref: '#/components/schemas/ProfileEnrollmentPolicy'
    listPolicyRules_200_response_inner:
      discriminator:
        mapping:
          ACCESS_POLICY: '#/components/schemas/AccessPolicyRule'
          PASSWORD: '#/components/schemas/PasswordPolicyRule'
          PROFILE_ENROLLMENT: '#/components/schemas/ProfileEnrollmentPolicyRule'
          RESOURCE_ACCESS: '#/components/schemas/AuthorizationServerPolicyRule'
          SIGN_ON: '#/components/schemas/OktaSignOnPolicyRule'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AccessPolicyRule'
      - $ref: '#/components/schemas/PasswordPolicyRule'
      - $ref: '#/components/schemas/ProfileEnrollmentPolicyRule'
      - $ref: '#/components/schemas/AuthorizationServerPolicyRule'
      - $ref: '#/components/schemas/OktaSignOnPolicyRule'
    listPushProviders_200_response_inner:
      discriminator:
        mapping:
          APNS: '#/components/schemas/APNSPushProvider'
          FCM: '#/components/schemas/FCMPushProvider'
        propertyName: providerType
      oneOf:
      - $ref: '#/components/schemas/APNSPushProvider'
      - $ref: '#/components/schemas/FCMPushProvider'
    listFactors_200_response_inner:
      discriminator:
        mapping:
          call: '#/components/schemas/CallUserFactor'
          email: '#/components/schemas/EmailUserFactor'
          push: '#/components/schemas/PushUserFactor'
          question: '#/components/schemas/SecurityQuestionUserFactor'
          sms: '#/components/schemas/SmsUserFactor'
          token: '#/components/schemas/TokenUserFactor'
          token:hardware: '#/components/schemas/HardwareUserFactor'
          token:hotp: '#/components/schemas/CustomHotpUserFactor'
          token:software:totp: '#/components/schemas/TotpUserFactor'
          u2f: '#/components/schemas/U2fUserFactor'
          web: '#/components/schemas/WebUserFactor'
          webauthn: '#/components/schemas/WebAuthnUserFactor'
          hotp: '#/components/schemas/CustomHotpUserFactor'
        propertyName: factorType
      oneOf:
      - $ref: '#/components/schemas/CallUserFactor'
      - $ref: '#/components/schemas/EmailUserFactor'
      - $ref: '#/components/schemas/PushUserFactor'
      - $ref: '#/components/schemas/SecurityQuestionUserFactor'
      - $ref: '#/components/schemas/SmsUserFactor'
      - $ref: '#/components/schemas/TokenUserFactor'
      - $ref: '#/components/schemas/HardwareUserFactor'
      - $ref: '#/components/schemas/CustomHotpUserFactor'
      - $ref: '#/components/schemas/TotpUserFactor'
      - $ref: '#/components/schemas/U2fUserFactor'
      - $ref: '#/components/schemas/WebUserFactor'
      - $ref: '#/components/schemas/WebAuthnUserFactor'
    APNSPushProvider_allOf:
      properties:
        configuration:
          $ref: '#/components/schemas/APNSConfiguration'
      type: object
    AccessPolicy_allOf:
      properties:
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
      type: object
    AccessPolicyRule_allOf:
      properties:
        actions:
          $ref: '#/components/schemas/AccessPolicyRuleActions'
        conditions:
          $ref: '#/components/schemas/AccessPolicyRuleConditions'
      type: object
    AccessPolicyRuleActions_allOf:
      properties:
        appSignOn:
          $ref: '#/components/schemas/AccessPolicyRuleApplicationSignOn'
      type: object
    AccessPolicyRuleConditions_allOf:
      properties:
        device:
          $ref: '#/components/schemas/DeviceAccessPolicyRuleCondition'
        elCondition:
          $ref: '#/components/schemas/AccessPolicyRuleCustomCondition'
        userType:
          $ref: '#/components/schemas/UserTypeCondition'
      type: object
    ApiToken__link:
      example:
        self:
          hints:
            allow:
            - null
            - null
          href: href
      properties:
        self:
          $ref: '#/components/schemas/HrefObject'
      readOnly: true
      type: object
    ApplicationLayout_rule:
      example:
        condition:
          schema:
            key: ""
          scope: scope
        effect: effect
      properties:
        effect:
          type: string
        condition:
          $ref: '#/components/schemas/ApplicationLayoutRuleCondition'
      type: object
    AuthorizationServerPolicyRule_allOf:
      properties:
        actions:
          $ref: '#/components/schemas/AuthorizationServerPolicyRuleActions'
        conditions:
          $ref: '#/components/schemas/AuthorizationServerPolicyRuleConditions'
      type: object
    AuthorizationServerPolicyRuleActions_allOf:
      properties:
        token:
          $ref: '#/components/schemas/TokenAuthorizationServerPolicyRuleAction'
      type: object
    AuthorizationServerPolicyRuleConditions_allOf:
      properties:
        clients:
          $ref: '#/components/schemas/ClientPolicyCondition'
        grantTypes:
          $ref: '#/components/schemas/GrantTypePolicyRuleCondition'
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
        scopes:
          $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'
      type: object
    AutoLoginApplication_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/SchemeApplicationCredentials'
        name:
          type: string
        settings:
          $ref: '#/components/schemas/AutoLoginApplicationSettings'
      type: object
    AutoLoginApplicationSettings_allOf:
      properties:
        signOn:
          $ref: '#/components/schemas/AutoLoginApplicationSettingsSignOn'
      type: object
    BasicApplicationSettings_allOf:
      properties:
        app:
          $ref: '#/components/schemas/BasicApplicationSettingsApplication'
      type: object
    BasicAuthApplication_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/SchemeApplicationCredentials'
        name:
          default: template_basic_auth
          type: string
        settings:
          $ref: '#/components/schemas/BasicApplicationSettings'
      type: object
    BehaviorRuleAnomalousDevice_allOf:
      properties:
        settings:
          $ref: '#/components/schemas/BehaviorRuleSettingsAnomalousDevice'
      type: object
    BehaviorRuleAnomalousIP_allOf:
      properties:
        settings:
          $ref: '#/components/schemas/BehaviorRuleSettingsAnomalousIP'
      type: object
    BehaviorRuleAnomalousLocation_allOf:
      properties:
        settings:
          $ref: '#/components/schemas/BehaviorRuleSettingsAnomalousLocation'
      type: object
    BehaviorRuleSettingsAnomalousIP_allOf:
      properties:
        maxEventsUsedForEvaluation:
          default: 50
          maximum: 100
          minimum: 0
          type: integer
      type: object
    BehaviorRuleSettingsAnomalousLocation_allOf:
      properties:
        granularity:
          type: string
          x-okta-known-values:
          - CITY
          - COUNTRY
          - LAT_LONG
          - SUBDIVISION
        radiusKilometers:
          description: Required when `granularity` is `LAT_LONG`. Radius from the
            provided coordinates in kilometers.
          type: integer
      required:
      - granularity
      type: object
    Behavior_Detection_Rule_Settings_based_on_Event_History:
      properties:
        maxEventsUsedForEvaluation:
          default: 20
          maximum: 100
          minimum: 1
          type: integer
        minEventsNeededForEvaluation:
          default: 0
          maximum: 10
          minimum: 0
          type: integer
      title: Behavior Detection Rule Settings based on Event History
      type: object
    Behavior_Detection_Rule_Settings_based_on_device_velocity_in_kilometers_per_hour_:
      properties:
        velocityKph:
          default: 805
          minimum: 1
          type: integer
      required:
      - velocityKph
      title: Behavior Detection Rule Settings based on device velocity in kilometers
        per hour.
      type: object
    BehaviorRuleVelocity_allOf:
      properties:
        settings:
          $ref: '#/components/schemas/BehaviorRuleSettingsVelocity'
      type: object
    BookmarkApplication_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/ApplicationCredentials'
        name:
          default: bookmark
          type: string
        settings:
          $ref: '#/components/schemas/BookmarkApplicationSettings'
      type: object
    BookmarkApplicationSettings_allOf:
      properties:
        app:
          $ref: '#/components/schemas/BookmarkApplicationSettingsApplication'
      type: object
    Brand_defaultApp:
      example:
        appInstanceId: appInstanceId
        appLinkName: appLinkName
      properties:
        appInstanceId:
          type: string
        appLinkName:
          type: string
      type: object
    BrowserPluginApplication_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/SchemeApplicationCredentials'
        name:
          type: string
        settings:
          $ref: '#/components/schemas/SwaApplicationSettings'
      type: object
    CallUserFactor_allOf:
      properties:
        profile:
          $ref: '#/components/schemas/CallUserFactorProfile'
      type: object
    ContextPolicyRuleCondition_allOf:
      properties:
        expression:
          type: string
      type: object
    CustomHotpUserFactor_allOf:
      properties:
        factorProfileId:
          type: string
        profile:
          $ref: '#/components/schemas/CustomHotpUserFactorProfile'
      type: object
    DeviceAccessPolicyRuleCondition_allOf:
      properties:
        managed:
          type: boolean
        registered:
          type: boolean
      type: object
    DeviceAssurance_diskEncryptionType:
      example:
        include:
        - null
        - null
      properties:
        include:
          items:
            $ref: '#/components/schemas/DiskEncryptionType'
          type: array
      type: object
    DeviceAssurance_screenLockType:
      example:
        include:
        - null
        - null
      properties:
        include:
          items:
            $ref: '#/components/schemas/ScreenLockType'
          type: array
      type: object
    EmailCustomization_allOf__links:
      description: Links to resources related to this email customization.
      properties:
        self:
          $ref: '#/components/schemas/HrefObject'
        template:
          $ref: '#/components/schemas/HrefObject'
        preview:
          $ref: '#/components/schemas/HrefObject'
        test:
          $ref: '#/components/schemas/HrefObject'
      readOnly: true
      type: object
    EmailCustomization_allOf:
      properties:
        created:
          description: The UTC time at which this email customization was created.
          format: date-time
          readOnly: true
          type: string
        id:
          description: A unique identifier for this email customization.
          readOnly: true
          type: string
        isDefault:
          description: Whether this is the default customization for the email template.
            Each customized email template must have exactly one default customization.
            Defaults to `true` for the first customization and `false` thereafter.
          type: boolean
        language:
          description: "The language specified as an [IETF BCP 47 language tag](https://datatracker.ietf.org/doc/html/rfc5646)."
          type: string
        lastUpdated:
          description: The UTC time at which this email customization was last updated.
          format: date-time
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/EmailCustomization_allOf__links'
      required:
      - language
      type: object
    EmailDefaultContent_allOf__links:
      description: Links to resources related to this email template's default content.
      properties:
        self:
          $ref: '#/components/schemas/HrefObject'
        template:
          $ref: '#/components/schemas/HrefObject'
        preview:
          $ref: '#/components/schemas/HrefObject'
        test:
          $ref: '#/components/schemas/HrefObject'
      readOnly: true
      type: object
    EmailDefaultContent_allOf:
      properties:
        _links:
          $ref: '#/components/schemas/EmailDefaultContent_allOf__links'
      type: object
    EmailPreview__links:
      description: Links to resources related to this email preview.
      example:
        template:
          hints:
            allow:
            - null
            - null
          href: href
        contentSource:
          hints:
            allow:
            - null
            - null
          href: href
        defaultContent:
          hints:
            allow:
            - null
            - null
          href: href
        test:
          hints:
            allow:
            - null
            - null
          href: href
        self:
          hints:
            allow:
            - null
            - null
          href: href
      properties:
        self:
          $ref: '#/components/schemas/HrefObject'
        contentSource:
          $ref: '#/components/schemas/HrefObject'
        template:
          $ref: '#/components/schemas/HrefObject'
        test:
          $ref: '#/components/schemas/HrefObject'
        defaultContent:
          $ref: '#/components/schemas/HrefObject'
      readOnly: true
      type: object
    EmailTemplate__embedded:
      example:
        customizationCount: 0
        settings:
          recipients: ALL_USERS
      properties:
        settings:
          $ref: '#/components/schemas/EmailSettings'
        customizationCount:
          type: integer
      readOnly: true
      type: object
    EmailTemplate__links:
      description: Links to resources related to this email template.
      example:
        settings:
          hints:
            allow:
            - null
            - null
          href: href
        defaultContent:
          hints:
            allow:
            - null
            - null
          href: href
        test:
          hints:
            allow:
            - null
            - null
          href: href
        self:
          hints:
            allow:
            - null
            - null
          href: href
        customizations:
          hints:
            allow:
            - null
            - null
          href: href
      properties:
        self:
          $ref: '#/components/schemas/HrefObject'
        settings:
          $ref: '#/components/schemas/HrefObject'
        defaultContent:
          $ref: '#/components/schemas/HrefObject'
        customizations:
          $ref: '#/components/schemas/HrefObject'
        test:
          $ref: '#/components/schemas/HrefObject'
      readOnly: true
      type: object
    EmailUserFactor_allOf:
      properties:
        profile:
          $ref: '#/components/schemas/EmailUserFactorProfile'
      type: object
    Error_errorCauses_inner:
      properties:
        errorSummary:
          type: string
      type: object
    FCMPushProvider_allOf:
      properties:
        configuration:
          $ref: '#/components/schemas/FCMConfiguration'
      type: object
    HardwareUserFactor_allOf:
      properties:
        profile:
          $ref: '#/components/schemas/HardwareUserFactorProfile'
      type: object
    HrefObject_hints:
      example:
        allow:
        - null
        - null
      properties:
        allow:
          items:
            $ref: '#/components/schemas/HttpMethod'
          type: array
      type: object
    IdentityProviderPolicy_allOf:
      properties:
        accountLink:
          $ref: '#/components/schemas/PolicyAccountLink'
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
        maxClockSkew:
          type: integer
        provisioning:
          $ref: '#/components/schemas/Provisioning'
        subject:
          $ref: '#/components/schemas/PolicySubject'
      type: object
    MultifactorEnrollmentPolicy_allOf:
      properties:
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
        settings:
          $ref: '#/components/schemas/MultifactorEnrollmentPolicySettings'
      type: object
    MultifactorEnrollmentPolicyAuthenticatorSettings_enroll:
      properties:
        self:
          type: string
          x-okta-known-values:
          - NOT_ALLOWED
          - OPTIONAL
          - REQUIRED
      type: object
    OAuthApplicationCredentials_allOf:
      properties:
        oauthClient:
          $ref: '#/components/schemas/ApplicationCredentialsOAuthClient'
      type: object
    OktaSignOnPolicy_allOf:
      properties:
        conditions:
          $ref: '#/components/schemas/OktaSignOnPolicyConditions'
      type: object
    OktaSignOnPolicyConditions_allOf:
      properties:
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
      type: object
    OktaSignOnPolicyRule_allOf:
      properties:
        actions:
          $ref: '#/components/schemas/OktaSignOnPolicyRuleActions'
        conditions:
          $ref: '#/components/schemas/OktaSignOnPolicyRuleConditions'
      type: object
    OktaSignOnPolicyRuleActions_allOf:
      properties:
        signon:
          $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonActions'
      type: object
    OktaSignOnPolicyRuleConditions_allOf:
      properties:
        authContext:
          $ref: '#/components/schemas/PolicyRuleAuthContextCondition'
        network:
          $ref: '#/components/schemas/PolicyNetworkCondition'
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
      type: object
    OpenIdConnectApplication_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/OAuthApplicationCredentials'
        name:
          default: oidc_client
          type: string
        settings:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettings'
      type: object
    OpenIdConnectApplicationSettings_allOf:
      properties:
        oauthClient:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClient'
      type: object
    PasswordPolicy_allOf:
      properties:
        conditions:
          $ref: '#/components/schemas/PasswordPolicyConditions'
        settings:
          $ref: '#/components/schemas/PasswordPolicySettings'
      type: object
    PasswordPolicyConditions_allOf:
      properties:
        authProvider:
          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
      type: object
    PasswordPolicyRule_allOf:
      properties:
        actions:
          $ref: '#/components/schemas/PasswordPolicyRuleActions'
        conditions:
          $ref: '#/components/schemas/PasswordPolicyRuleConditions'
      type: object
    PasswordPolicyRuleActions_allOf:
      properties:
        passwordChange:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
        selfServicePasswordReset:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
        selfServiceUnlock:
          $ref: '#/components/schemas/PasswordPolicyRuleAction'
      type: object
    PasswordPolicyRuleConditions_allOf:
      properties:
        network:
          $ref: '#/components/schemas/PolicyNetworkCondition'
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
      type: object
    PossessionConstraint_allOf:
      properties:
        deviceBound:
          type: string
        hardwareProtection:
          type: string
        phishingResistant:
          type: string
        userPresence:
          type: string
      type: object
    ProfileEnrollmentPolicyRule_allOf:
      properties:
        actions:
          $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleActions'
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
      type: object
    ProfileEnrollmentPolicyRuleActions_allOf:
      properties:
        profileEnrollment:
          $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleAction'
      type: object
    PushUserFactor_allOf:
      properties:
        expiresAt:
          format: date-time
          type: string
        factorResult:
          type: string
          x-okta-known-values:
          - CANCELLED
          - CHALLENGE
          - ERROR
          - FAILED
          - PASSCODE_REPLAYED
          - REJECTED
          - SUCCESS
          - TIMEOUT
          - TIME_WINDOW_EXCEEDED
          - WAITING
        profile:
          $ref: '#/components/schemas/PushUserFactorProfile'
      type: object
    SamlApplication_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/ApplicationCredentials'
        name:
          type: string
        settings:
          $ref: '#/components/schemas/SamlApplicationSettings'
      type: object
    SamlApplicationSettings_allOf:
      properties:
        app:
          $ref: '#/components/schemas/SamlApplicationSettingsApplication'
        signOn:
          $ref: '#/components/schemas/SamlApplicationSettingsSignOn'
      type: object
    SchemeApplicationCredentials_allOf:
      properties:
        password:
          $ref: '#/components/schemas/PasswordCredential'
        revealPassword:
          type: boolean
        scheme:
          type: string
          x-okta-known-values:
          - ADMIN_SETS_CREDENTIALS
          - EDIT_PASSWORD_ONLY
          - EDIT_USERNAME_AND_PASSWORD
          - EXTERNAL_PASSWORD_SYNC
          - SHARED_USERNAME_AND_PASSWORD
        signing:
          $ref: '#/components/schemas/ApplicationCredentialsSigning'
        userName:
          type: string
      type: object
    SecurePasswordStoreApplication_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/SchemeApplicationCredentials'
        name:
          default: template_sps
          type: string
        settings:
          $ref: '#/components/schemas/SecurePasswordStoreApplicationSettings'
      type: object
    SecurePasswordStoreApplicationSettings_allOf:
      properties:
        app:
          $ref: '#/components/schemas/SecurePasswordStoreApplicationSettingsApplication'
      type: object
    SecurityQuestionUserFactor_allOf:
      properties:
        profile:
          $ref: '#/components/schemas/SecurityQuestionUserFactorProfile'
      type: object
    SignInPage_allOf_widgetCustomizations:
      properties:
        signInLabel:
          type: string
        usernameLabel:
          type: string
        usernameInfoTip:
          type: string
        passwordLabel:
          type: string
        passwordInfoTip:
          type: string
        showPasswordVisibilityToggle:
          type: boolean
        showUserIdentifier:
          type: boolean
        forgotPasswordLabel:
          type: string
        forgotPasswordUrl:
          type: string
        unlockAccountLabel:
          type: string
        unlockAccountUrl:
          type: string
        helpLabel:
          type: string
        helpUrl:
          type: string
        customLink1Label:
          type: string
        customLink1Url:
          type: string
        customLink2Label:
          type: string
        customLink2Url:
          type: string
        authenticatorPageCustomLinkLabel:
          type: string
        authenticatorPageCustomLinkUrl:
          type: string
        classicRecoveryFlowEmailOrUsernameLabel:
          type: string
      type: object
    SignInPage_allOf:
      properties:
        type:
          type: string
          x-okta-known-values:
          - EXTERNALLY_HOSTED
          - OKTA_DEFAULT
        url:
          type: string
        widgetCustomizations:
          $ref: '#/components/schemas/SignInPage_allOf_widgetCustomizations'
        widgetVersion:
          description: "The version specified as a [Semantic Version](https://semver.org/)."
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
            d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
            +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          type: string
      required:
      - type
      type: object
    SmsUserFactor_allOf:
      properties:
        profile:
          $ref: '#/components/schemas/SmsUserFactorProfile'
      type: object
    SwaApplicationSettings_allOf:
      properties:
        app:
          $ref: '#/components/schemas/SwaApplicationSettingsApplication'
      type: object
    TokenUserFactor_allOf:
      properties:
        profile:
          $ref: '#/components/schemas/TokenUserFactorProfile'
      type: object
    TotpUserFactor_allOf:
      properties:
        profile:
          $ref: '#/components/schemas/TotpUserFactorProfile'
      type: object
    U2fUserFactor_allOf:
      properties:
        profile:
          $ref: '#/components/schemas/U2fUserFactorProfile'
      type: object
    WebAuthnUserFactor_allOf:
      properties:
        profile:
          $ref: '#/components/schemas/WebAuthnUserFactorProfile'
      type: object
    WebUserFactor_allOf:
      properties:
        profile:
          $ref: '#/components/schemas/WebUserFactorProfile'
      type: object
    WsFederationApplication_allOf:
      properties:
        name:
          default: template_wsfed
          type: string
        settings:
          $ref: '#/components/schemas/WsFederationApplicationSettings'
      type: object
    WsFederationApplicationSettings_allOf:
      properties:
        app:
          $ref: '#/components/schemas/WsFederationApplicationSettingsApplication'
      type: object
  securitySchemes:
    API_Token:
      description: "Pass the API token as the Authorization header value prefixed\
        \ with SSWS: `Authorization: SSWS {API Token}`"
      in: header
      name: Authorization
      type: apiKey
    OAuth_2.0:
      description: "Pass the access_token as the value of the Authorization header:\
        \ `Authorization: Bearer {access_token}`"
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/v1/authorize
          scopes:
            okta.agentPools.manage: Read or modify Agent Pools
            okta.agentPools.read: Read Agent Pools
            okta.apiToken.manage: Read or modify API Tokens.
            okta.apiToken.read: Read API Tokens.
            okta.apps.manage: Read or modify Apps.
            okta.apps.read: Read Apps.
            okta.authenticators.manage: Read or modify Authenticators.
            okta.authenticators.read: Read Authenticators.
            okta.authorizationServers.manage: Read or modify Authorization Servers.
            okta.authorizationServers.read: Read Authorization Servers.
            okta.behaviors.manage: Read or modify Behavior Detection Rules.
            okta.behaviors.read: Read Behavior Detection Rules.
            okta.brands.manage: Read or modify Brands.
            okta.brands.read: Read Brands.
            okta.captchas.manage: Read or modify CAPTCHA instances in your org.
            okta.captchas.read: Read CAPTCHA instances in your org.
            okta.deviceAssurance.manage: Read or modify device assurance policies.
            okta.deviceAssurance.read: Read device assurance policies.
            okta.domains.manage: Read or modify Domains.
            okta.domains.read: Read Domains.
            okta.eventHooks.manage: Read or modify Event Hooks.
            okta.eventHooks.read: Read Event Hooks.
            okta.groups.manage: Read or modify Groups.
            okta.groups.read: Read Groups.
            okta.idps.manage: Read or modify Identity Providers.
            okta.idps.read: Read Identity Providers.
            okta.inlineHooks.manage: Read or modify Inline Hooks.
            okta.inlineHooks.read: Read Inline Hooks.
            okta.linkedObjects.manage: Read or modify Linked Objects.
            okta.linkedObjects.read: Read Linked Objects.
            okta.logs.read: Read Logs.
            okta.orgs.manage: Read or modify Org Settings.
            okta.orgs.read: Read Org Settings.
            okta.policies.manage: Read or modify Policies.
            okta.policies.read: Read Policies.
            okta.principalRateLimits.manage: Read or modify Principal Rate Limits.
            okta.principalRateLimits.read: Read Principal Rate Limits.
            okta.profileMappings.manage: Read or modify Profile Mappings.
            okta.profileMappings.read: Read Profile Mappings.
            okta.pushProviders.manage: Read or modify Push Providers such as APNs
              and FCM.
            okta.pushProviders.read: Read Push Providers such as APNs and FCM.
            okta.roles.manage: Read or modify Roles.
            okta.roles.read: Read Roles.
            okta.schemas.manage: Read or modify Schemas.
            okta.schemas.read: Read Schemas.
            okta.sessions.manage: Read or modify Sessions.
            okta.sessions.read: Read Sessions.
            okta.templates.manage: Read or modify Templates.
            okta.templates.read: Read Templates.
            okta.trustedOrigins.manage: Read or modify Trusted Origins.
            okta.trustedOrigins.read: Read Trusted Origins.
            okta.userTypes.manage: Read or modify Usertypes.
            okta.userTypes.read: Read Usertypes.
            okta.users.manage: Read or modify Users.
            okta.users.read: Read Users.
          tokenUrl: /oauth2/v1/token
      type: oauth2
x-tagGroups:
- name: User Directory
  tags:
  - User
  - Group
  - UserType
  - Schema
  - LinkedObject
  - ProfileMapping
- name: Security
  tags:
  - ApiToken
  - Application
  - Authenticator
  - AuthorizationServer
  - Behavior
  - CAPTCHA
  - DeviceAssurance
  - IdentityProvider
  - Policy
  - PushProvider
  - Session
  - ThreatInsight
  - TrustedOrigin
  - UserFactor
  - NetworkZone
- name: Customization
  tags:
  - Customization
  - Domain
  - Template
- name: Rate Limits
  tags:
  - PrincipalRateLimit
- name: Other
  tags:
  - AgentPools
  - EventHook
  - Feature
  - InlineHook
  - OrgSetting
  - SystemLog
  - Subscription
